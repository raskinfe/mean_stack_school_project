var COMPODOC_SEARCH_INDEX = {
  index: {
    version: "2.3.9",
    fields: ["title", "body"],
    fieldVectors: [
      ["title/classes/AdminController.html", [0, 0.134, 1, 3.034]],
      [
        "body/classes/AdminController.html",
        [
          0, 0.167, 1, 4.799, 2, 2.516, 3, 0.188, 4, 0.188, 5, 0.105, 6, 4.21,
          7, 0.528, 8, 1.212, 9, 4.105, 10, 2.197, 11, 5.865, 12, 6.768, 13,
          4.858, 14, 4.419, 15, 4.35, 16, 3.568, 17, 1.116, 18, 4.858, 19,
          1.262, 20, 0.016, 21, 0.899, 22, 0.706, 23, 1.025, 24, 4.125, 25,
          1.163, 26, 2.657, 27, 4.858, 28, 4.858, 29, 0.322, 30, 2.657, 31,
          1.163, 32, 3.783, 33, 0.188, 34, 0.917, 35, 1.85, 36, 2.303, 37,
          4.858, 38, 3.783, 39, 3.783, 40, 2.274, 41, 1.644, 42, 3.464, 43,
          2.816, 44, 2.447, 45, 2.403, 46, 2.64, 47, 3.21, 48, 4.176, 49, 2.403,
          50, 3.783, 51, 3.464, 52, 2.816, 53, 4.21, 54, 4.858, 55, 4.21, 56,
          2.998, 57, 0.012, 58, 0.012,
        ],
      ],
      ["title/components/AdminDashboardComponent.html", [59, 0.359, 60, 0.936]],
      [
        "body/components/AdminDashboardComponent.html",
        [
          0, 0.144, 3, 0.162, 4, 0.162, 5, 0.091, 20, 0.015, 21, 0.742, 29,
          0.292, 31, 1.055, 33, 0.162, 35, 1.088, 57, 0.011, 58, 0.011, 59,
          0.58, 60, 1.615, 61, 1.573, 62, 1.224, 63, 1.224, 64, 1.224, 65,
          1.224, 66, 3.257, 67, 3.625, 68, 1.224, 69, 2.186, 70, 1.866, 71,
          1.724, 72, 1.771, 73, 1.512, 74, 5.456, 75, 1.512, 76, 4.844, 77,
          0.455, 78, 1.867, 79, 1.704, 80, 2.31, 81, 2.477, 82, 1.958, 83,
          2.165, 84, 1.958, 85, 1.438, 86, 1.326, 87, 1.782, 88, 2.809, 89,
          2.621, 90, 1.381, 91, 1.867, 92, 1.563, 93, 2.057, 94, 1.563, 95,
          1.563, 96, 2.003, 97, 1.499, 98, 1.703, 99, 2.166, 100, 2.494, 101,
          2.983, 102, 4.183, 103, 1.438, 104, 1.563, 105, 1.499, 106, 1.867,
          107, 1.867, 108, 2.278, 109, 2.494, 110, 4.183, 111, 5.59, 112, 2.089,
          113, 2.983, 114, 2.494, 115, 2.494, 116, 2.764, 117, 1.958, 118,
          2.166, 119, 1.224, 120, 1.573, 121, 1.636, 122, 1.224, 123, 1.967,
          124, 1.224, 125, 1.636, 126, 1.046, 127, 1.224, 128, 1.046, 129,
          1.224, 130, 1.046, 131, 1.224, 132, 1.005, 133, 1.005, 134, 1.636,
          135, 1.046, 136, 1.046, 137, 1.177, 138, 1.224, 139, 1.005, 140,
          1.046, 141, 0.609, 142, 1.224, 143, 1.005, 144, 1.046, 145, 1.224,
          146, 1.046, 147, 1.224, 148, 1.005, 149, 1.224, 150, 1.005, 151,
          1.224, 152, 1.005, 153, 1.224, 154, 1.046, 155, 1.224, 156, 1.224,
          157, 1.005, 158, 1.224, 159, 1.224, 160, 1.046, 161, 1.224, 162,
          1.005, 163, 0.637, 164, 1.224, 165, 1.046, 166, 1.224, 167, 1.005,
          168, 1.224, 169, 1.005, 170, 1.224, 171, 1.005, 172, 1.224, 173,
          1.224,
        ],
      ],
      ["title/modules/AdminDashboardModule.html", [174, 1.587, 175, 2.574]],
      [
        "body/modules/AdminDashboardModule.html",
        [
          0, 0.174, 3, 0.196, 4, 0.196, 5, 0.11, 20, 0.016, 29, 0.41, 33, 0.196,
          57, 0.012, 58, 0.012, 60, 1.823, 66, 3.949, 71, 1.125, 77, 0.552, 132,
          1.823, 133, 1.218, 160, 1.896, 163, 0.773, 171, 1.823, 175, 5.314,
          176, 1.817, 177, 2.268, 178, 4.394, 179, 4.394, 180, 4.394, 181,
          3.929, 182, 2.579, 183, 1.895, 184, 5.071, 185, 2.698, 186, 2.963,
          187, 2.579, 188, 3.949, 189, 3.616, 190, 3.463, 191, 2.066, 192,
          2.963, 193, 2.373, 194, 3.906, 195, 2.774, 196, 3.129, 197, 5.071,
          198, 3.35, 199, 4.394, 200, 5.071, 201, 2.263,
        ],
      ],
      ["title/guards/AdminGuard.html", [202, 3.034, 203, 2.574]],
      [
        "body/guards/AdminGuard.html",
        [
          0, 0.185, 3, 0.208, 4, 0.208, 5, 0.117, 7, 0.585, 8, 1.291, 17, 1.189,
          19, 1.345, 20, 0.016, 21, 0.872, 22, 0.752, 23, 1.092, 25, 1.015, 29,
          0.37, 33, 0.208, 41, 1.516, 45, 2.098, 49, 2.098, 57, 0.012, 58,
          0.012, 77, 0.585, 203, 4.337, 204, 4.189, 205, 6.141, 206, 4.662, 207,
          6.395, 208, 1.345, 209, 4.189, 210, 3.28, 211, 5.379, 212, 5.69, 213,
          6.395, 214, 5.053, 215, 6.395, 216, 5.379, 217, 4.662, 218, 3.4, 219,
          2.798, 220, 2.098, 221, 1.574, 222, 1.849, 223, 2.292, 224, 3.319,
          225, 5.379, 226, 5.379,
        ],
      ],
      ["title/injectables/AdminService.html", [181, 2.018, 219, 1.66]],
      [
        "body/injectables/AdminService.html",
        [
          0, 0.136, 3, 0.153, 4, 0.153, 5, 0.086, 7, 0.429, 8, 1.057, 11, 4.658,
          17, 1.336, 19, 1.406, 20, 0.016, 21, 0.912, 22, 0.875, 23, 1.142, 25,
          1.296, 29, 0.319, 33, 0.153, 34, 1.452, 41, 1.586, 52, 3.804, 57,
          0.01, 58, 0.01, 77, 0.429, 98, 1.862, 141, 0.783, 181, 2.784, 208,
          1.344, 219, 2.291, 221, 1.155, 222, 1.357, 227, 2.435, 228, 3.421,
          229, 1.101, 230, 3.543, 231, 2.352, 232, 4.668, 233, 4.658, 234,
          6.563, 235, 5.375, 236, 4.658, 237, 3.421, 238, 4.049, 239, 5.375,
          240, 3.833, 241, 4.186, 242, 1.471, 243, 4.138, 244, 3.947, 245,
          3.343, 246, 3.947, 247, 5.375, 248, 3.947, 249, 5.375, 250, 3.947,
          251, 4.106, 252, 4.186, 253, 3.947, 254, 1.398, 255, 1.573, 256,
          3.116, 257, 3.947, 258, 2.608, 259, 2.608, 260, 2.288, 261, 3.947,
          262, 4.68, 263, 4.668, 264, 3.947, 265, 4.236, 266, 4.896, 267, 3.947,
          268, 4.658, 269, 4.359, 270, 3.947, 271, 5.375, 272, 3.947, 273,
          3.947, 274, 3.421, 275, 3.947, 276, 1.941, 277, 2.435,
        ],
      ],
      ["title/injectables/ApiService.html", [219, 1.66, 278, 1.66]],
      [
        "body/injectables/ApiService.html",
        [
          0, 0.11, 3, 0.124, 4, 0.124, 5, 0.138, 7, 0.347, 8, 0.911, 10, 2.169,
          17, 1.327, 19, 1.482, 20, 0.016, 21, 0.961, 22, 0.857, 23, 1.204, 25,
          1.345, 26, 3.269, 29, 0.312, 31, 1.399, 33, 0.124, 34, 1.475, 36,
          2.036, 41, 1.646, 43, 2.684, 57, 0.009, 58, 0.009, 77, 0.347, 98,
          1.41, 141, 0.871, 208, 0.798, 219, 1.973, 221, 0.935, 222, 1.098, 224,
          1.97, 227, 1.97, 229, 0.948, 232, 4.083, 238, 3.687, 242, 1.518, 243,
          4.301, 245, 2.98, 251, 3.464, 254, 1.204, 255, 1.355, 258, 2.11, 259,
          2.11, 260, 1.851, 262, 3.885, 263, 4.764, 265, 4.397, 269, 3.302, 274,
          2.767, 276, 1.57, 278, 1.973, 279, 2.767, 280, 4.524, 281, 4.013, 282,
          4.631, 283, 4.631, 284, 4.013, 285, 3.606, 286, 4.013, 287, 4.013,
          288, 4.013, 289, 4.631, 290, 2.767, 291, 4.631, 292, 4.013, 293,
          4.631, 294, 3.193, 295, 4.631, 296, 3.193, 297, 4.631, 298, 3.193,
          299, 4.631, 300, 3.193, 301, 4.631, 302, 3.193, 303, 4.631, 304,
          3.193, 305, 1.425, 306, 4.631, 307, 3.193, 308, 4.631, 309, 3.193,
          310, 4.631, 311, 3.193, 312, 1.97, 313, 2.11, 314, 2.767, 315, 3.193,
          316, 3.193, 317, 4.708, 318, 5.153, 319, 2.125, 320, 3.193, 321,
          3.193, 322, 5.498, 323, 3.193, 324, 3.193, 325, 4.013, 326, 4.013,
          327, 3.193, 328, 3.193, 329, 3.193, 330, 4.722, 331, 3.193, 332,
          3.193, 333, 2.277, 334, 2.277, 335, 2.277, 336, 2.277, 337, 4.631,
          338, 3.193, 339, 5.449, 340, 4.013, 341, 3.193, 342, 2.277, 343,
          3.193, 344, 3.193, 345, 3.193,
        ],
      ],
      ["title/components/AppComponent.html", [59, 0.359, 126, 0.974]],
      [
        "body/components/AppComponent.html",
        [
          0, 0.155, 3, 0.174, 4, 0.174, 5, 0.098, 20, 0.015, 21, 0.779, 29,
          0.306, 31, 1.107, 33, 0.174, 35, 1.171, 44, 1.548, 57, 0.011, 58,
          0.011, 59, 0.601, 60, 1.082, 61, 1.651, 62, 1.318, 63, 1.318, 64,
          1.318, 65, 1.318, 68, 1.318, 69, 2.198, 70, 1.877, 71, 1.592, 72,
          1.267, 73, 1.587, 75, 1.587, 77, 0.49, 79, 1.834, 80, 1.548, 81,
          1.548, 85, 1.548, 86, 2.193, 90, 1.486, 91, 2.009, 92, 1.682, 93,
          2.214, 96, 1.613, 97, 1.613, 98, 1.371, 119, 1.318, 120, 1.651, 121,
          1.717, 122, 1.318, 123, 2.025, 124, 1.318, 125, 1.717, 126, 1.729,
          127, 1.318, 128, 1.125, 129, 1.318, 130, 1.125, 131, 1.318, 132,
          1.082, 133, 1.082, 134, 1.717, 135, 1.125, 136, 1.125, 137, 1.267,
          138, 1.318, 139, 1.082, 140, 1.125, 141, 0.656, 142, 1.318, 143,
          1.082, 144, 1.125, 145, 1.318, 146, 1.125, 147, 1.318, 148, 1.082,
          149, 1.318, 150, 1.082, 151, 1.318, 152, 1.082, 153, 1.318, 154,
          1.125, 155, 1.318, 156, 1.318, 157, 1.082, 158, 1.318, 159, 1.318,
          160, 1.125, 161, 1.318, 162, 1.082, 163, 0.686, 164, 1.318, 165,
          1.125, 166, 1.318, 167, 1.082, 168, 1.318, 169, 1.082, 170, 1.318,
          171, 1.082, 172, 1.318, 173, 1.318, 260, 3.401, 346, 3.902, 347,
          6.528, 348, 5.868, 349, 2.214, 350, 4.502, 351, 2.107, 352, 2.214,
          353, 4.502, 354, 4.502, 355, 3.902, 356, 4.502, 357, 3.21, 358, 2.778,
        ],
      ],
      ["title/modules/AppModule.html", [174, 1.587, 359, 2.778]],
      [
        "body/modules/AppModule.html",
        [
          0, 0.115, 3, 0.129, 4, 0.129, 5, 0.072, 20, 0.016, 29, 0.421, 33,
          0.185, 34, 0.902, 41, 0.771, 57, 0.009, 58, 0.009, 70, 0.771, 77,
          0.363, 126, 1.868, 141, 0.814, 146, 1.679, 154, 1.679, 163, 0.509,
          175, 4.438, 176, 1.196, 177, 1.713, 182, 1.948, 183, 1.248, 185,
          2.038, 186, 2.238, 187, 1.948, 192, 2.238, 193, 1.562, 194, 2.95, 195,
          2.615, 196, 2.06, 201, 2.134, 203, 3.159, 221, 0.977, 222, 1.148, 238,
          3.447, 240, 2.381, 258, 2.206, 265, 2.06, 278, 2.863, 317, 2.206, 359,
          5.78, 360, 2.893, 361, 2.893, 362, 2.893, 363, 2.893, 364, 2.893, 365,
          4.438, 366, 4.438, 367, 4.438, 368, 4.438, 369, 4.438, 370, 4.438,
          371, 4.438, 372, 4.438, 373, 4.438, 374, 4.438, 375, 3.894, 376,
          2.998, 377, 2.6, 378, 4.782, 379, 3.724, 380, 2.381, 381, 3.339, 382,
          1.562, 383, 1.248, 384, 1.49, 385, 4.144, 386, 2.206, 387, 3.339, 388,
          5.587, 389, 2.893, 390, 2.206, 391, 3.339, 392, 3.339, 393, 2.893,
          394, 2.381, 395, 2.381, 396, 2.206, 397, 3.339, 398, 3.339, 399,
          3.339, 400, 2.6, 401, 3.339, 402, 4.782, 403, 2.893, 404, 4.782, 405,
          3.339, 406, 4.782, 407, 3.339, 408, 4.782, 409, 3.339, 410, 4.782,
          411, 3.339, 412, 4.782, 413, 3.339, 414, 2.06, 415, 3.339, 416, 1.729,
          417, 3.339, 418, 3.159, 419, 2.893, 420, 2.381, 421, 2.893, 422,
          1.826, 423, 3.339, 424, 2.893, 425, 3.339, 426, 2.6, 427, 3.339, 428,
          3.339, 429, 2.206, 430, 4.782, 431, 1.562, 432, 3.339, 433, 3.339,
          434, 4.782, 435, 2.893, 436, 2.206, 437, 3.339, 438, 2.893, 439,
          3.339, 440, 2.893, 441, 2.893, 442, 3.339, 443, 3.339, 444, 3.724,
          445, 2.893, 446, 3.339, 447, 3.339, 448, 3.339, 449, 3.339, 450,
          3.339, 451, 3.339,
        ],
      ],
      ["title/modules/AppRoutingModule.html", [174, 1.587, 365, 2.574]],
      [
        "body/modules/AppRoutingModule.html",
        [
          0, 0.164, 3, 0.185, 4, 0.185, 5, 0.104, 20, 0.016, 29, 0.417, 33,
          0.185, 34, 0.904, 57, 0.012, 58, 0.012, 59, 0.721, 60, 1.467, 71,
          1.063, 77, 0.521, 139, 1.467, 140, 1.197, 141, 0.979, 143, 1.467, 148,
          1.467, 150, 1.467, 152, 1.467, 157, 1.467, 162, 1.467, 163, 0.73, 167,
          1.467, 169, 1.467, 176, 1.716, 187, 2.488, 188, 3.729, 201, 2.137,
          203, 3.164, 220, 1.868, 263, 4.83, 365, 4.034, 383, 1.79, 385, 5.291,
          386, 3.164, 389, 4.15, 390, 3.164, 414, 2.955, 418, 3.164, 419, 4.15,
          420, 3.415, 421, 4.15, 424, 4.15, 435, 4.15, 436, 3.164, 438, 4.15,
          440, 4.15, 441, 4.15, 452, 4.789, 453, 4.789, 454, 4.354, 455, 4.441,
          456, 4.15, 457, 4.789, 458, 4.789, 459, 4.15, 460, 4.789, 461, 4.789,
          462, 4.15, 463, 4.15, 464, 4.789, 465, 3.729, 466, 3.415, 467, 3.164,
          468, 7.08, 469, 3.729, 470, 4.789, 471, 2.241, 472, 4.789, 473, 3.729,
          474, 4.789, 475, 3.729,
        ],
      ],
      ["title/guards/AuthGuardService.html", [202, 3.034, 418, 2.574]],
      [
        "body/guards/AuthGuardService.html",
        [
          0, 0.184, 3, 0.207, 4, 0.207, 5, 0.116, 7, 0.582, 8, 1.287, 17, 1.185,
          19, 1.34, 20, 0.016, 21, 0.869, 22, 0.75, 23, 1.088, 25, 1.01, 29,
          0.369, 33, 0.207, 41, 1.511, 45, 2.087, 49, 2.087, 57, 0.012, 58,
          0.012, 77, 0.582, 204, 4.166, 207, 6.383, 208, 1.337, 209, 4.166, 210,
          3.276, 212, 5.671, 213, 6.383, 214, 5.041, 215, 6.383, 217, 4.637,
          218, 3.389, 219, 2.788, 220, 2.087, 221, 1.566, 222, 1.84, 223, 2.28,
          224, 3.301, 418, 4.323, 420, 5.041, 476, 6.127, 477, 4.637, 478,
          5.351, 479, 5.351, 480, 5.351, 481, 4.166,
        ],
      ],
      ["title/components/ButtonComponent.html", [59, 0.359, 128, 0.974]],
      [
        "body/components/ButtonComponent.html",
        [
          0, 0.14, 3, 0.158, 4, 0.158, 5, 0.088, 7, 0.443, 8, 1.08, 17, 0.994,
          20, 0.016, 21, 0.729, 22, 0.762, 25, 0.769, 29, 0.287, 31, 1.037, 33,
          0.158, 35, 1.06, 41, 1.269, 57, 0.01, 58, 0.01, 59, 0.572, 60, 0.979,
          61, 1.545, 62, 1.193, 63, 1.193, 64, 1.193, 65, 1.193, 68, 1.193, 69,
          2.181, 70, 1.862, 71, 1.541, 72, 1.147, 73, 1.486, 75, 1.486, 77,
          0.443, 80, 1.401, 81, 1.401, 85, 1.889, 86, 1.97, 87, 1.737, 90,
          1.345, 94, 1.523, 95, 1.523, 96, 1.968, 97, 1.46, 98, 1.241, 103,
          1.401, 104, 1.523, 105, 1.46, 106, 2.451, 107, 2.451, 109, 1.819, 119,
          1.193, 120, 1.545, 121, 1.608, 122, 1.193, 123, 1.946, 124, 1.193,
          125, 1.608, 126, 1.019, 127, 1.193, 128, 1.662, 129, 1.193, 130,
          1.019, 131, 1.193, 132, 0.979, 133, 0.979, 134, 1.608, 135, 1.019,
          136, 1.019, 137, 1.147, 138, 1.193, 139, 0.979, 140, 1.019, 141,
          0.594, 142, 1.193, 143, 0.979, 144, 1.019, 145, 1.193, 146, 1.019,
          147, 1.193, 148, 0.979, 149, 1.193, 150, 0.979, 151, 1.193, 152,
          0.979, 153, 1.193, 154, 1.019, 155, 1.193, 156, 1.193, 157, 0.979,
          158, 1.193, 159, 1.193, 160, 1.019, 161, 1.193, 162, 0.979, 163,
          0.621, 164, 1.193, 165, 1.019, 166, 1.193, 167, 0.979, 168, 1.193,
          169, 0.979, 170, 1.193, 171, 0.979, 172, 1.193, 173, 1.193, 242, 1.08,
          254, 1.06, 255, 1.193, 349, 2.004, 351, 1.907, 358, 2.515, 482, 3.532,
          483, 5.493, 484, 6.214, 485, 5.493, 486, 6.65, 487, 4.277, 488, 5.099,
          489, 4.075, 490, 4.075, 491, 4.838, 492, 2.341, 493, 4.075, 494,
          2.229, 495, 2.906, 496, 1.523, 497, 2.004, 498, 2.515, 499, 1.737,
          500, 1.737, 501, 3.532, 502, 3.174, 503, 4.277, 504, 1.907, 505,
          2.362, 506, 2.906, 507, 2.906, 508, 2.362,
        ],
      ],
      ["title/modules/ButtonModule.html", [174, 1.587, 509, 1.823]],
      [
        "body/modules/ButtonModule.html",
        [
          0, 0.196, 3, 0.221, 4, 0.221, 5, 0.124, 20, 0.015, 29, 0.355, 33,
          0.221, 57, 0.013, 58, 0.013, 77, 0.621, 128, 2.025, 163, 0.869, 176,
          2.044, 177, 2.438, 182, 2.772, 183, 2.132, 185, 2.899, 187, 2.772,
          475, 5.297, 509, 3.691, 510, 4.944, 511, 4.944, 512, 4.944, 513,
          5.706, 514, 5.706,
        ],
      ],
      ["title/components/CarouselComponent.html", [59, 0.359, 130, 0.974]],
      [
        "body/components/CarouselComponent.html",
        [
          0, 0.109, 3, 0.123, 4, 0.123, 5, 0.069, 7, 0.503, 8, 0.909, 17, 1.148,
          19, 1.115, 20, 0.016, 21, 0.842, 22, 0.726, 23, 0.905, 25, 0.873, 29,
          0.345, 31, 0.873, 33, 0.123, 35, 0.829, 41, 0.736, 57, 0.009, 58,
          0.009, 59, 0.501, 60, 0.766, 61, 1.301, 62, 0.933, 63, 0.933, 64,
          0.933, 65, 0.933, 68, 0.933, 69, 2.132, 70, 1.821, 71, 1.407, 72,
          0.896, 73, 1.251, 75, 1.251, 77, 0.503, 78, 1.422, 79, 1.884, 80,
          1.871, 81, 2.18, 82, 2.547, 83, 2.273, 84, 1.491, 85, 1.096, 86,
          1.725, 87, 1.358, 89, 1.243, 90, 1.526, 92, 2.471, 94, 1.191, 96,
          2.139, 97, 2.369, 98, 2.014, 99, 2.395, 100, 2.063, 103, 1.096, 104,
          1.191, 105, 1.142, 106, 1.422, 107, 2.063, 108, 2.217, 109, 2.428,
          112, 2.369, 117, 2.164, 119, 0.933, 120, 1.301, 121, 1.353, 122,
          0.933, 123, 1.747, 124, 0.933, 125, 1.353, 126, 0.796, 127, 0.933,
          128, 0.796, 129, 0.933, 130, 1.492, 131, 0.933, 132, 0.766, 133,
          1.308, 134, 1.353, 135, 0.796, 136, 0.796, 137, 0.896, 138, 0.933,
          139, 0.766, 140, 0.796, 141, 0.674, 142, 0.933, 143, 0.766, 144,
          0.796, 145, 0.933, 146, 0.796, 147, 0.933, 148, 0.766, 149, 0.933,
          150, 0.766, 151, 0.933, 152, 0.766, 153, 0.933, 154, 0.796, 155,
          0.933, 156, 0.933, 157, 0.766, 158, 0.933, 159, 0.933, 160, 0.796,
          161, 0.933, 162, 0.766, 163, 0.486, 164, 0.933, 165, 0.796, 166,
          0.933, 167, 0.766, 168, 0.933, 169, 0.766, 170, 0.933, 171, 0.766,
          172, 0.933, 173, 0.933, 191, 1.298, 208, 1.156, 221, 0.933, 222,
          1.096, 242, 1.341, 254, 0.829, 255, 0.933, 317, 2.105, 319, 1.243,
          349, 1.567, 351, 2.547, 487, 3.601, 492, 1.97, 496, 2.034, 497, 1.567,
          499, 1.97, 500, 1.97, 502, 2.481, 503, 3.601, 506, 2.272, 507, 2.272,
          515, 2.761, 516, 5.97, 517, 5.442, 518, 4.624, 519, 4.624, 520, 3.055,
          521, 4.716, 522, 3.601, 523, 5.442, 524, 2.272, 525, 4.08, 526, 4.624,
          527, 4.649, 528, 3.187, 529, 4.624, 530, 3.187, 531, 1.142, 532,
          4.007, 533, 3.187, 534, 1.358, 535, 1.847, 536, 3.601, 537, 1.966,
          538, 2.481, 539, 2.761, 540, 3.187, 541, 4.624, 542, 2.68, 543, 4.238,
          544, 2.272, 545, 4.007, 546, 2.272, 547, 2.761, 548, 2.761, 549,
          3.187, 550, 3.187, 551, 2.481, 552, 2.761, 553, 2.547, 554, 4.007,
          555, 2.481, 556, 4.624, 557, 3.187, 558, 2.481, 559, 1.65, 560, 3.601,
          561, 2.761, 562, 1.966, 563, 2.761, 564, 2.761, 565, 2.272, 566,
          3.187, 567, 3.187, 568, 3.187, 569, 2.105, 570, 2.761, 571, 2.68, 572,
          4.007, 573, 2.481, 574, 1.491, 575, 1.97, 576, 1.358, 577, 1.966, 578,
          2.272, 579, 1.847, 580, 1.65, 581, 1.847, 582, 1.491, 583, 3.187, 584,
          4.624, 585, 2.481, 586, 2.481, 587, 3.055, 588, 1.847, 589, 1.567,
          590, 2.481,
        ],
      ],
      ["title/components/CategoryChartComponent.html", [59, 0.359, 132, 0.936]],
      [
        "body/components/CategoryChartComponent.html",
        [
          0, 0.119, 3, 0.134, 4, 0.134, 5, 0.075, 7, 0.535, 8, 0.966, 10, 1.67,
          17, 1.267, 19, 0.711, 20, 0.016, 21, 0.758, 22, 0.819, 23, 0.577, 25,
          0.928, 29, 0.342, 31, 0.928, 33, 0.134, 34, 0.928, 35, 0.902, 57,
          0.009, 58, 0.009, 59, 0.526, 60, 0.834, 61, 1.383, 62, 1.015, 63,
          1.015, 64, 1.015, 65, 1.015, 68, 1.015, 69, 2.15, 70, 1.836, 71,
          1.553, 72, 0.976, 73, 1.329, 75, 1.329, 77, 0.377, 82, 1.624, 92,
          1.297, 119, 1.015, 120, 1.383, 121, 1.438, 122, 1.015, 123, 1.817,
          124, 1.015, 125, 1.438, 126, 0.867, 127, 1.015, 128, 0.867, 129,
          1.015, 130, 0.867, 131, 1.015, 132, 1.491, 133, 1.747, 134, 1.438,
          135, 0.867, 136, 0.867, 137, 0.976, 138, 1.015, 139, 0.834, 140,
          0.867, 141, 0.716, 142, 1.015, 143, 0.834, 144, 0.867, 145, 1.015,
          146, 0.867, 147, 1.015, 148, 0.834, 149, 1.015, 150, 0.834, 151,
          1.015, 152, 0.834, 153, 1.015, 154, 0.867, 155, 1.015, 156, 1.015,
          157, 0.834, 158, 1.015, 159, 1.015, 160, 0.867, 161, 1.015, 162,
          0.834, 163, 0.529, 164, 1.015, 165, 0.867, 166, 1.015, 167, 0.834,
          168, 1.015, 169, 0.834, 170, 1.015, 171, 0.834, 172, 1.015, 173,
          1.015, 198, 4.722, 208, 1.228, 221, 1.015, 222, 1.193, 223, 2.094,
          229, 1.007, 231, 1.243, 242, 0.966, 243, 1.898, 254, 1.484, 255, 1.67,
          319, 1.917, 376, 2.77, 422, 1.898, 531, 1.243, 544, 2.474, 574, 2.3,
          580, 1.797, 591, 5.097, 592, 2.474, 593, 2.671, 594, 5.566, 595,
          4.444, 596, 3.827, 597, 4.834, 598, 2.671, 599, 4.834, 600, 4.834,
          601, 2.905, 602, 3.469, 603, 4.915, 604, 3.469, 605, 3.469, 606,
          2.094, 607, 3.469, 608, 4.069, 609, 3.469, 610, 3.395, 611, 3.469,
          612, 4.259, 613, 2.292, 614, 2.702, 615, 1.057, 616, 3.007, 617,
          4.444, 618, 4.259, 619, 4.259, 620, 3.504, 621, 2.141, 622, 2.702,
          623, 2.702, 624, 2.702, 625, 3.007, 626, 3.007, 627, 2.292, 628,
          4.259, 629, 3.007, 630, 1.478, 631, 3.007, 632, 3.007, 633, 1.898,
          634, 2.702, 635, 2.702, 636, 2.702, 637, 2.702, 638, 2.702, 639,
          2.702, 640, 2.702, 641, 2.702, 642, 2.292, 643, 2.702, 644, 3.007,
          645, 2.474,
        ],
      ],
      ["title/components/ChartComponent.html", [59, 0.359, 135, 0.974]],
      [
        "body/components/ChartComponent.html",
        [
          0, 0.137, 3, 0.155, 4, 0.155, 5, 0.087, 7, 0.434, 8, 1.066, 17, 1.287,
          20, 0.016, 21, 0.72, 22, 0.848, 25, 1.023, 29, 0.283, 31, 1.023, 33,
          0.155, 35, 1.039, 57, 0.01, 58, 0.01, 59, 0.566, 60, 0.96, 61, 1.525,
          62, 1.169, 63, 1.169, 64, 1.169, 65, 1.169, 68, 1.169, 69, 2.177, 70,
          1.859, 71, 1.614, 72, 1.124, 73, 1.466, 75, 1.466, 77, 0.434, 119,
          1.169, 120, 1.525, 121, 1.586, 122, 1.169, 123, 1.93, 124, 1.169, 125,
          1.586, 126, 0.998, 127, 1.169, 128, 0.998, 129, 1.169, 130, 0.998,
          131, 1.169, 132, 0.96, 133, 0.96, 134, 1.586, 135, 1.648, 136, 0.998,
          137, 1.124, 138, 1.169, 139, 0.96, 140, 0.998, 141, 0.79, 142, 1.169,
          143, 0.96, 144, 0.998, 145, 1.169, 146, 0.998, 147, 1.169, 148, 0.96,
          149, 1.169, 150, 0.96, 151, 1.169, 152, 0.96, 153, 1.169, 154, 0.998,
          155, 1.169, 156, 1.169, 157, 0.96, 158, 1.169, 159, 1.169, 160, 0.998,
          161, 1.169, 162, 0.96, 163, 0.609, 164, 1.169, 165, 0.998, 166, 1.169,
          167, 0.96, 168, 1.169, 169, 0.96, 170, 1.169, 171, 0.96, 172, 1.169,
          173, 1.169, 223, 2.309, 229, 1.11, 242, 1.297, 254, 1.039, 255, 1.169,
          487, 4.22, 492, 2.81, 531, 1.942, 544, 2.848, 593, 2.878, 594, 5.536,
          595, 4.789, 596, 4.22, 597, 5.135, 598, 2.878, 599, 5.135, 600, 5.135,
          601, 3.086, 606, 2.309, 614, 3.11, 617, 3.11, 634, 3.11, 635, 3.11,
          636, 3.11, 637, 3.11, 638, 3.11, 639, 3.11, 640, 3.11, 641, 3.11, 642,
          2.639, 643, 3.11, 646, 3.461, 647, 3.994, 648, 3.994, 649, 3.994, 650,
          3.994, 651, 3.994, 652, 3.994, 653, 3.994,
        ],
      ],
      ["title/modules/ChartModule.html", [174, 1.587, 654, 2.778]],
      [
        "body/modules/ChartModule.html",
        [
          0, 0.197, 3, 0.222, 4, 0.222, 5, 0.125, 20, 0.015, 29, 0.357, 33,
          0.222, 57, 0.013, 58, 0.013, 77, 0.625, 135, 2.027, 163, 0.876, 176,
          2.06, 177, 2.449, 182, 2.784, 183, 2.148, 185, 2.912, 187, 2.784, 199,
          4.982, 475, 5.321, 654, 5.632, 655, 4.982, 656, 4.982, 657, 4.982,
          658, 5.749,
        ],
      ],
      ["title/components/ChatBoxComponent.html", [59, 0.359, 136, 0.974]],
      [
        "body/components/ChatBoxComponent.html",
        [
          0, 0.146, 3, 0.165, 4, 0.165, 5, 0.093, 20, 0.015, 21, 0.752, 29,
          0.223, 31, 1.069, 33, 0.165, 35, 1.109, 57, 0.011, 58, 0.011, 59,
          0.585, 60, 1.025, 61, 1.593, 62, 1.249, 63, 1.249, 64, 1.249, 65,
          1.249, 68, 1.249, 69, 2.189, 70, 1.869, 71, 1.564, 72, 1.2, 73, 1.532,
          75, 1.532, 77, 0.464, 79, 1.738, 80, 1.467, 81, 1.947, 83, 1.467, 85,
          1.467, 86, 1.352, 89, 1.664, 90, 1.869, 97, 1.529, 98, 1.299, 100,
          3.145, 103, 1.947, 104, 1.594, 106, 3.022, 107, 1.904, 108, 2.591,
          109, 2.527, 112, 2.376, 119, 1.249, 120, 1.593, 121, 1.658, 122,
          1.249, 123, 1.982, 124, 1.249, 125, 1.658, 126, 1.066, 127, 1.249,
          128, 1.066, 129, 1.249, 130, 1.066, 131, 1.249, 132, 1.025, 133,
          1.025, 134, 1.658, 135, 1.066, 136, 1.693, 137, 2.112, 138, 1.249,
          139, 1.025, 140, 1.066, 141, 0.622, 142, 1.249, 143, 1.025, 144,
          1.066, 145, 1.249, 146, 1.066, 147, 1.249, 148, 1.025, 149, 1.249,
          150, 1.025, 151, 1.249, 152, 1.025, 153, 1.249, 154, 1.066, 155,
          1.249, 156, 1.249, 157, 1.025, 158, 1.249, 159, 1.249, 160, 1.066,
          161, 1.249, 162, 1.025, 163, 0.65, 164, 1.249, 165, 1.066, 166, 1.249,
          167, 1.025, 168, 1.249, 169, 1.025, 170, 1.249, 171, 1.025, 172,
          1.249, 173, 1.249, 496, 1.594, 499, 1.818, 500, 1.818, 555, 3.322,
          558, 3.322, 569, 3.742, 572, 3.697, 575, 1.818, 576, 1.818, 577,
          2.632, 586, 3.322, 588, 3.283, 589, 2.098, 590, 3.322, 659, 3.697,
          660, 3.322, 661, 3.697, 662, 6.358, 663, 5.664, 664, 3.042, 665,
          2.473, 666, 2.632, 667, 4.266, 668, 3.697, 669, 5.664, 670, 4.266,
          671, 3.697, 672, 3.042,
        ],
      ],
      ["title/components/CreateNewItemComponent.html", [59, 0.359, 139, 0.936]],
      [
        "body/components/CreateNewItemComponent.html",
        [
          0, 0.093, 3, 0.105, 4, 0.105, 5, 0.129, 7, 0.296, 8, 0.809, 10, 1.451,
          17, 1.261, 19, 0.842, 20, 0.016, 21, 0.734, 22, 0.743, 23, 0.684, 25,
          0.936, 29, 0.326, 31, 0.776, 33, 0.105, 34, 1.043, 35, 0.707, 36,
          1.017, 41, 0.628, 44, 0.935, 57, 0.008, 58, 0.008, 59, 0.457, 60,
          0.654, 61, 1.157, 62, 0.796, 63, 0.796, 64, 0.796, 65, 0.796, 68,
          0.796, 69, 2.095, 70, 1.789, 71, 1.317, 72, 0.765, 73, 1.112, 75,
          1.112, 77, 0.296, 79, 1.108, 80, 2.04, 81, 2.295, 82, 1.273, 83,
          2.146, 84, 1.273, 85, 1.9, 86, 1.752, 87, 1.752, 88, 1.835, 89, 1.604,
          90, 1.357, 91, 1.835, 92, 1.537, 93, 1.338, 94, 1.853, 95, 1.853, 96,
          2.237, 97, 1.777, 98, 1.51, 99, 2.568, 100, 1.214, 103, 1.705, 104,
          1.537, 105, 1.474, 106, 1.835, 107, 1.835, 109, 1.214, 112, 1.017,
          114, 2.212, 115, 2.212, 119, 0.796, 120, 1.157, 121, 1.204, 122,
          0.796, 123, 1.618, 124, 0.796, 125, 1.204, 126, 0.68, 127, 0.796, 128,
          0.68, 129, 0.796, 130, 0.68, 131, 0.796, 132, 0.654, 133, 1.641, 134,
          1.204, 135, 0.68, 136, 0.68, 137, 0.765, 138, 0.796, 139, 1.328, 140,
          1.668, 141, 1.147, 142, 0.796, 143, 0.654, 144, 0.68, 145, 0.796, 146,
          0.68, 147, 0.796, 148, 0.654, 149, 0.796, 150, 0.654, 151, 0.796, 152,
          0.654, 153, 0.796, 154, 0.68, 155, 0.796, 156, 0.796, 157, 0.654, 158,
          0.796, 159, 0.796, 160, 0.68, 161, 0.796, 162, 0.654, 163, 0.415, 164,
          0.796, 165, 0.68, 166, 0.796, 167, 0.654, 168, 0.796, 169, 0.654, 170,
          0.796, 171, 0.654, 172, 0.796, 173, 0.796, 191, 1.108, 208, 1.028,
          210, 2.355, 220, 1.061, 229, 0.842, 231, 1.777, 242, 1.312, 254,
          0.707, 255, 0.796, 277, 1.678, 319, 1.061, 352, 2.022, 376, 2.466,
          382, 1.273, 383, 1.017, 384, 1.214, 390, 4.674, 422, 1.488, 469,
          3.202, 492, 1.159, 494, 2.712, 496, 2.065, 499, 1.159, 500, 1.159,
          504, 1.273, 505, 1.577, 524, 1.94, 525, 3.851, 531, 1.474, 534, 1.159,
          535, 1.577, 537, 1.678, 553, 1.924, 571, 1.577, 582, 1.273, 606,
          2.911, 610, 2.712, 613, 1.797, 633, 1.488, 645, 3.535, 665, 2.384,
          673, 5.509, 674, 2.357, 675, 4.958, 676, 4.112, 677, 4.958, 678,
          4.297, 679, 3.203, 680, 3.203, 681, 3.023, 682, 3.202, 683, 5.526,
          684, 5.526, 685, 4.297, 686, 4.958, 687, 2.718, 688, 3.276, 689,
          4.112, 690, 3.202, 691, 2.72, 692, 1.577, 693, 2.72, 694, 2.72, 695,
          2.72, 696, 2.72, 697, 2.72, 698, 2.72, 699, 2.72, 700, 2.72, 701,
          2.72, 702, 2.72, 703, 2.72, 704, 2.357, 705, 3.564, 706, 2.118, 707,
          2.357, 708, 2.72, 709, 2.357, 710, 2.357, 711, 2.72, 712, 2.72, 713,
          2.72, 714, 2.72, 715, 2.72, 716, 1.797, 717, 1.338, 718, 2.118, 719,
          2.249, 720, 1.414, 721, 1.159, 722, 1.678, 723, 2.72, 724, 2.357, 725,
          2.72, 726, 1.409, 727, 2.357, 728, 2.72, 729, 1.159, 730, 1.797, 731,
          2.932, 732, 3.202, 733, 4.958, 734, 3.202, 735, 1.94, 736, 1.94, 737,
          1.94, 738, 1.94, 739, 1.678, 740, 2.537, 741, 1.94, 742, 1.678, 743,
          2.72, 744, 2.72, 745, 2.72, 746, 2.72, 747, 2.72, 748, 2.72, 749,
          2.72, 750, 1.338, 751, 2.72, 752, 1.94, 753, 1.94,
        ],
      ],
      ["title/modules/CreateNewItemModule.html", [174, 1.587, 366, 2.574]],
      [
        "body/modules/CreateNewItemModule.html",
        [
          0, 0.185, 3, 0.209, 4, 0.209, 5, 0.117, 20, 0.016, 29, 0.402, 33,
          0.209, 57, 0.012, 58, 0.012, 77, 0.587, 139, 1.851, 140, 1.349, 141,
          1.034, 163, 0.823, 176, 1.934, 177, 2.358, 182, 2.681, 183, 2.017,
          185, 2.804, 186, 2.526, 187, 2.681, 190, 3.599, 191, 2.2, 192, 3.079,
          193, 2.526, 194, 4.06, 195, 2.953, 196, 3.331, 201, 2.936, 366, 5.2,
          390, 3.566, 456, 4.678, 509, 3.605, 673, 4.204, 754, 4.678, 755,
          4.678, 756, 5.399, 757, 5.399, 758, 3.129,
        ],
      ],
      ["title/components/DashboardComponent.html", [59, 0.359, 143, 0.936]],
      [
        "body/components/DashboardComponent.html",
        [
          0, 0.066, 3, 0.075, 4, 0.075, 5, 0.042, 7, 0.341, 8, 0.617, 10, 1.161,
          16, 0.901, 17, 1.361, 19, 1.29, 20, 0.016, 21, 0.901, 22, 0.831, 23,
          1.048, 25, 1.262, 29, 0.32, 31, 0.592, 33, 0.075, 34, 1.018, 35,
          0.501, 36, 0.72, 41, 0.916, 45, 1.223, 49, 1.223, 57, 0.006, 58,
          0.006, 59, 0.365, 60, 0.463, 61, 0.882, 62, 0.564, 63, 0.564, 64,
          0.564, 65, 0.564, 68, 0.564, 69, 1.997, 70, 1.706, 71, 1.116, 72,
          1.286, 73, 0.848, 74, 3.436, 75, 0.848, 76, 2.717, 77, 0.21, 78, 0.86,
          79, 0.785, 80, 2.037, 81, 2.299, 82, 2.139, 83, 2.364, 84, 1.856, 85,
          1.078, 86, 1.257, 88, 2.244, 89, 1.962, 90, 1.508, 91, 0.86, 92, 1.88,
          93, 0.947, 94, 1.172, 95, 1.172, 96, 1.638, 97, 1.124, 98, 1.642, 103,
          0.662, 104, 0.72, 105, 1.124, 106, 1.399, 107, 1.399, 108, 1.278, 109,
          0.86, 112, 1.88, 114, 2.039, 115, 2.039, 116, 1.273, 117, 2.523, 118,
          2.367, 119, 0.564, 120, 0.882, 121, 0.918, 122, 0.564, 123, 1.338,
          124, 0.564, 125, 0.918, 126, 0.481, 127, 0.564, 128, 0.481, 129,
          0.564, 130, 0.481, 131, 0.564, 132, 0.463, 133, 0.463, 134, 0.918,
          135, 0.481, 136, 0.481, 137, 0.542, 138, 0.564, 139, 0.463, 140,
          0.481, 141, 0.457, 142, 0.564, 143, 1.098, 144, 0.481, 145, 0.564,
          146, 0.481, 147, 0.564, 148, 0.463, 149, 0.564, 150, 0.463, 151,
          0.564, 152, 0.463, 153, 0.564, 154, 0.481, 155, 0.564, 156, 0.564,
          157, 0.463, 158, 0.564, 159, 0.564, 160, 0.481, 161, 0.564, 162,
          0.463, 163, 0.294, 164, 0.564, 165, 0.481, 166, 0.564, 167, 0.463,
          168, 0.564, 169, 0.463, 170, 0.564, 171, 0.463, 172, 0.564, 173,
          0.564, 208, 0.784, 210, 1.947, 220, 0.751, 221, 0.564, 222, 0.662,
          223, 1.336, 229, 0.642, 230, 2.298, 231, 1.124, 242, 0.899, 254,
          1.541, 255, 1.734, 256, 1.117, 266, 1.374, 277, 2.82, 319, 1.782, 349,
          0.947, 351, 0.901, 376, 2.039, 394, 0.821, 422, 1.054, 431, 0.901,
          488, 1.374, 496, 0.72, 497, 1.95, 499, 1.336, 500, 1.336, 504, 1.467,
          505, 1.117, 508, 1.117, 520, 2.071, 521, 3.436, 531, 2.195, 534,
          0.821, 538, 1.5, 542, 3.551, 546, 1.374, 560, 3.088, 562, 1.189, 574,
          2.523, 575, 2.611, 576, 2.143, 578, 1.374, 579, 2.649, 580, 2.367,
          582, 0.901, 587, 2.62, 589, 1.542, 593, 1.856, 598, 1.856, 601, 2.139,
          606, 2.143, 610, 2.949, 613, 1.273, 630, 2.611, 633, 1.054, 679,
          1.117, 680, 1.117, 681, 1.715, 685, 2.717, 688, 2.62, 692, 3.986, 720,
          0.662, 721, 0.821, 729, 0.821, 730, 1.273, 742, 1.935, 759, 1.669,
          760, 3.088, 761, 4.359, 762, 4.359, 763, 3.965, 764, 3.965, 765,
          3.965, 766, 3.96, 767, 3.136, 768, 2.717, 769, 3.136, 770, 3.96, 771,
          3.136, 772, 2.717, 773, 3.136, 774, 2.442, 775, 3.136, 776, 4.57, 777,
          2.442, 778, 2.442, 779, 1.926, 780, 2.474, 781, 3.136, 782, 1.5, 783,
          1.5, 784, 3.136, 785, 1.926, 786, 3.136, 787, 1.926, 788, 3.136, 789,
          1.926, 790, 3.136, 791, 2.649, 792, 1.926, 793, 1.926, 794, 1.926,
          795, 1.926, 796, 3.136, 797, 1.926, 798, 1.926, 799, 3.136, 800,
          1.926, 801, 1.926, 802, 1.926, 803, 2.442, 804, 1.5, 805, 2.442, 806,
          3.136, 807, 1.926, 808, 1.926, 809, 2.169, 810, 1.926, 811, 1.926,
          812, 6.575, 813, 1.926, 814, 1.926, 815, 1.926, 816, 1.926, 817,
          1.926, 818, 1.926, 819, 3.436, 820, 1.926, 821, 1.926, 822, 3.436,
          823, 3.136, 824, 3.136, 825, 1.926, 826, 1.926, 827, 1.5, 828, 1.926,
          829, 1.669, 830, 1.669, 831, 1.189, 832, 1.189, 833, 1.189, 834,
          1.189, 835, 1.935, 836, 1.189, 837, 1.189, 838, 1.189, 839, 1.926,
          840, 2.442, 841, 3.136, 842, 4.359, 843, 1.926, 844, 1.926, 845,
          1.926, 846, 3.965, 847, 1.926, 848, 1.926, 849, 5.03, 850, 1.926, 851,
          1.926, 852, 1.669, 853, 1.926, 854, 1.926, 855, 1.926, 856, 1.926,
          857, 1.926, 858, 1.926, 859, 1.926, 860, 3.965, 861, 2.916, 862,
          1.926, 863, 1.926, 864, 1.926, 865, 2.717, 866, 2.717, 867, 1.926,
          868, 3.136, 869, 3.136, 870, 3.136, 871, 3.136, 872, 3.965, 873,
          3.136, 874, 3.965, 875, 1.926, 876, 1.926, 877, 3.136, 878, 3.136,
          879, 3.136, 880, 1.5, 881, 2.717, 882, 2.717, 883, 3.436, 884, 1.935,
          885, 1.669, 886, 1.926, 887, 1.669, 888, 1.926, 889, 1.669, 890,
          2.717, 891, 1.926, 892, 1.926, 893, 1.5, 894, 4.57, 895, 2.827, 896,
          2.236, 897, 1.935, 898, 1.669, 899, 1.926, 900, 3.136, 901, 1.669,
          902, 1.926, 903, 1.926, 904, 1.189,
        ],
      ],
      ["title/modules/DashboardModule.html", [174, 1.587, 367, 2.574]],
      [
        "body/modules/DashboardModule.html",
        [
          0, 0.162, 3, 0.182, 4, 0.182, 5, 0.102, 20, 0.016, 29, 0.415, 33,
          0.182, 57, 0.011, 58, 0.011, 72, 1.324, 77, 0.512, 130, 1.86, 136,
          1.86, 137, 1.324, 143, 1.788, 144, 1.86, 163, 0.717, 165, 1.86, 176,
          1.686, 177, 2.164, 182, 2.46, 183, 1.759, 185, 2.573, 186, 2.826, 187,
          2.46, 188, 3.665, 190, 3.303, 191, 1.918, 192, 2.826, 193, 2.203, 194,
          3.726, 195, 2.574, 196, 2.904, 201, 2.694, 220, 1.836, 367, 5.331,
          376, 3.321, 394, 2.005, 422, 2.574, 429, 3.989, 431, 2.203, 454,
          4.306, 509, 3.483, 660, 3.665, 758, 2.728, 780, 2.969, 905, 4.078,
          906, 4.706, 907, 4.706, 908, 4.078, 909, 4.706, 910, 4.706, 911,
          4.706, 912, 4.706, 913, 4.706,
        ],
      ],
      [
        "title/components/DashboardSidebarComponent.html",
        [59, 0.359, 144, 0.974],
      ],
      [
        "body/components/DashboardSidebarComponent.html",
        [
          0, 0.104, 3, 0.117, 4, 0.117, 5, 0.065, 7, 0.328, 8, 0.873, 17, 1.271,
          19, 1.191, 20, 0.016, 21, 0.861, 22, 0.788, 23, 0.967, 25, 0.995, 29,
          0.324, 31, 0.838, 33, 0.117, 34, 0.569, 35, 0.784, 57, 0.008, 58,
          0.008, 59, 0.485, 60, 0.724, 61, 1.249, 62, 0.882, 63, 0.882, 64,
          0.882, 65, 0.882, 68, 0.882, 69, 2.113, 70, 1.804, 71, 1.376, 72,
          1.483, 73, 1.201, 75, 1.201, 77, 0.483, 78, 1.345, 80, 2.131, 81,
          2.365, 82, 1.411, 83, 2.131, 84, 1.411, 85, 1.526, 86, 1.671, 87,
          1.284, 88, 2.766, 89, 1.732, 90, 1.74, 92, 1.126, 94, 1.126, 95,
          1.126, 96, 1.08, 100, 1.345, 101, 2.149, 103, 1.526, 104, 1.659, 105,
          1.591, 106, 2.352, 107, 2.352, 108, 1.809, 109, 1.981, 112, 2.505,
          113, 3.166, 114, 2.352, 115, 2.352, 117, 2.467, 118, 2.73, 119, 0.882,
          120, 1.249, 121, 1.299, 122, 0.882, 123, 1.702, 124, 0.882, 125,
          1.299, 126, 0.753, 127, 0.882, 128, 0.753, 129, 0.882, 130, 0.753,
          131, 0.882, 132, 0.724, 133, 1.397, 134, 1.299, 135, 0.753, 136,
          0.753, 137, 0.848, 138, 0.882, 139, 0.724, 140, 0.753, 141, 0.847,
          142, 0.882, 143, 0.724, 144, 1.453, 145, 0.882, 146, 0.753, 147,
          0.882, 148, 0.724, 149, 0.882, 150, 0.724, 151, 0.882, 152, 0.724,
          153, 0.882, 154, 0.753, 155, 0.882, 156, 0.882, 157, 0.724, 158,
          0.882, 159, 0.882, 160, 0.753, 161, 0.882, 162, 0.724, 163, 0.459,
          164, 0.882, 165, 0.753, 166, 0.882, 167, 0.724, 168, 0.882, 169,
          0.724, 170, 0.882, 171, 0.724, 172, 0.882, 173, 0.882, 208, 0.753,
          229, 0.909, 242, 1.381, 254, 0.784, 255, 1.702, 358, 1.86, 394, 1.284,
          431, 1.411, 492, 1.892, 494, 2.428, 496, 2.316, 499, 1.892, 500,
          1.892, 504, 1.411, 505, 2.573, 508, 1.747, 522, 3.457, 527, 5.561,
          531, 1.889, 536, 4.528, 542, 3.988, 543, 2.347, 546, 2.149, 548,
          2.612, 559, 1.561, 569, 1.991, 575, 1.892, 576, 1.892, 582, 2.078,
          588, 3.37, 598, 2.078, 610, 3.546, 613, 1.991, 630, 2.763, 664, 2.149,
          666, 1.86, 741, 2.149, 753, 3.166, 768, 3.847, 772, 3.847, 780, 3.048,
          832, 1.86, 833, 1.86, 834, 1.86, 835, 2.739, 836, 1.86, 837, 1.86,
          838, 1.86, 885, 2.612, 914, 6.189, 915, 2.612, 916, 5.271, 917, 4.44,
          918, 4.44, 919, 5.271, 920, 5.271, 921, 5.271, 922, 3.014, 923, 3.014,
          924, 3.014, 925, 3.014, 926, 3.014, 927, 4.44, 928, 3.014, 929, 4.44,
          930, 3.014, 931, 4.44, 932, 3.014, 933, 3.014, 934, 3.014, 935, 3.014,
          936, 3.014, 937, 3.014, 938, 3.014, 939, 3.014, 940, 4.44, 941, 4.44,
          942, 3.014, 943, 2.347, 944, 2.612, 945, 3.014, 946, 1.991,
        ],
      ],
      ["title/interfaces/Error.html", [615, 1.187, 720, 1.339]],
      [
        "body/interfaces/Error.html",
        [
          3, 0.227, 4, 0.227, 5, 0.127, 7, 0.637, 20, 0.015, 22, 0.792, 33,
          0.267, 44, 2.663, 46, 3.021, 57, 0.013, 58, 0.013, 218, 3.932, 229,
          1.416, 242, 1.493, 615, 2.105, 720, 2.377, 809, 3.206, 947, 2.882,
          948, 4.564, 949, 3.872,
        ],
      ],
      ["title/components/FooterComponent.html", [59, 0.359, 146, 0.974]],
      [
        "body/components/FooterComponent.html",
        [
          0, 0.147, 3, 0.166, 4, 0.166, 5, 0.093, 7, 0.467, 17, 0.777, 20,
          0.015, 21, 0.755, 29, 0.297, 31, 1.073, 33, 0.166, 35, 1.115, 57,
          0.011, 58, 0.011, 59, 0.587, 60, 1.031, 61, 1.599, 62, 1.256, 63,
          1.256, 64, 1.256, 65, 1.256, 68, 1.256, 69, 2.19, 70, 1.87, 71, 1.567,
          72, 1.207, 73, 1.537, 75, 1.537, 77, 0.467, 80, 1.955, 81, 1.955, 82,
          2.008, 83, 2.192, 84, 2.661, 85, 1.475, 86, 1.802, 87, 1.828, 91,
          1.914, 92, 1.603, 94, 2.124, 95, 2.124, 96, 2.432, 97, 2.037, 98,
          1.731, 112, 1.603, 119, 1.256, 120, 1.599, 121, 1.664, 122, 1.256,
          123, 1.987, 124, 1.256, 125, 1.664, 126, 1.072, 127, 1.256, 128,
          1.072, 129, 1.256, 130, 1.072, 131, 1.256, 132, 1.031, 133, 1.031,
          134, 1.664, 135, 1.072, 136, 1.072, 137, 1.207, 138, 1.256, 139,
          1.031, 140, 1.072, 141, 0.929, 142, 1.256, 143, 1.031, 144, 1.072,
          145, 1.256, 146, 1.697, 147, 1.256, 148, 1.031, 149, 1.256, 150,
          1.031, 151, 1.256, 152, 1.031, 153, 1.256, 154, 1.072, 155, 1.256,
          156, 1.256, 157, 1.031, 158, 1.256, 159, 1.256, 160, 1.072, 161,
          1.256, 162, 1.031, 163, 0.654, 164, 1.256, 165, 1.072, 166, 1.256,
          167, 1.031, 168, 1.256, 169, 1.031, 170, 1.256, 171, 1.031, 172,
          1.256, 173, 1.256, 229, 1.164, 254, 1.115, 255, 1.256, 349, 2.11, 495,
          3.059, 506, 3.059, 507, 3.059, 791, 4.094, 950, 3.718, 951, 6.376,
          952, 6.376, 953, 5.685, 954, 5.685, 955, 4.29, 956, 4.927, 957, 3.718,
          958, 3.341,
        ],
      ],
      ["title/interfaces/IDataset.html", [608, 2.778, 615, 1.187]],
      [
        "body/interfaces/IDataset.html",
        [
          0, 0.158, 3, 0.178, 4, 0.178, 5, 0.1, 7, 0.648, 10, 1.35, 20, 0.016,
          22, 0.828, 23, 0.991, 29, 0.377, 33, 0.178, 34, 1.125, 57, 0.011, 58,
          0.011, 59, 0.549, 69, 1.247, 70, 1.065, 71, 1.024, 73, 1.247, 75,
          1.247, 77, 0.502, 132, 1.108, 133, 1.677, 141, 0.672, 198, 3.047, 208,
          1.153, 221, 1.35, 222, 1.586, 223, 1.965, 229, 1.221, 231, 1.653, 242,
          1.456, 243, 2.523, 319, 1.799, 376, 2.66, 422, 2.523, 544, 3.289, 574,
          2.79, 580, 2.389, 591, 3.289, 592, 3.289, 593, 2.79, 594, 5.436, 595,
          3.592, 596, 3.592, 597, 4.642, 598, 2.159, 599, 4.642, 600, 3.592,
          601, 2.159, 606, 1.965, 608, 4.709, 610, 3.26, 612, 3.997, 613, 3.047,
          614, 3.592, 615, 1.405, 616, 6.05, 617, 5.765, 618, 6.264, 619, 6.264,
          620, 4.25, 621, 2.846, 622, 3.592, 623, 3.592, 624, 3.592, 625, 3.997,
          626, 3.997, 627, 3.047, 628, 5.166, 629, 3.997, 630, 1.965, 631,
          3.997, 632, 3.997, 633, 2.523, 634, 3.592, 635, 3.592, 636, 3.592,
          637, 3.592, 638, 3.592, 639, 3.592, 640, 3.592, 641, 3.592, 642,
          3.047, 643, 3.592, 644, 3.997, 947, 2.268,
        ],
      ],
      ["title/interfaces/IIssue.html", [615, 1.187, 959, 3.034]],
      [
        "body/interfaces/IIssue.html",
        [
          3, 0.196, 4, 0.196, 5, 0.11, 7, 0.552, 20, 0.016, 22, 0.91, 29, 0.265,
          33, 0.196, 34, 1.195, 49, 2.819, 57, 0.012, 58, 0.012, 141, 0.739,
          229, 1.297, 242, 1.603, 254, 1.318, 276, 3.658, 615, 1.544, 717,
          3.555, 791, 4.19, 947, 2.494, 959, 4.93, 960, 3.949, 961, 5.305, 962,
          5.305, 963, 4.59, 964, 4.915, 965, 4.59, 966, 4.182, 967, 3.906, 968,
          4.93, 969, 3.949, 970, 3.35, 971, 4.394,
        ],
      ],
      ["title/interfaces/IMessage.html", [615, 1.187, 972, 3.034]],
      [
        "body/interfaces/IMessage.html",
        [
          3, 0.201, 4, 0.201, 5, 0.112, 7, 0.564, 20, 0.015, 22, 0.886, 23,
          1.068, 29, 0.271, 33, 0.201, 34, 1.211, 46, 2.022, 57, 0.012, 58,
          0.012, 141, 0.755, 229, 1.315, 242, 1.614, 276, 3.682, 615, 1.579,
          791, 4.223, 947, 2.55, 965, 4.62, 966, 4.24, 967, 3.96, 972, 4.998,
          973, 4.037, 974, 5.831, 975, 4.34, 976, 4.34, 977, 5.831, 978, 5.831,
          979, 4.998, 980, 4.493,
        ],
      ],
      ["title/interfaces/IPost.html", [615, 1.187, 981, 3.034]],
      [
        "body/interfaces/IPost.html",
        [
          3, 0.185, 4, 0.185, 5, 0.104, 7, 0.52, 20, 0.016, 22, 0.915, 23,
          1.177, 29, 0.25, 33, 0.185, 34, 1.151, 40, 2.238, 49, 2.62, 57, 0.012,
          58, 0.012, 133, 1.756, 141, 0.697, 229, 1.249, 242, 1.605, 254, 1.586,
          319, 1.865, 351, 3.144, 534, 3.115, 574, 2.238, 615, 1.456, 630,
          3.015, 679, 4.237, 680, 4.237, 681, 3.998, 717, 3.303, 791, 4.501,
          947, 2.351, 963, 4.51, 966, 4.03, 967, 3.764, 981, 4.75, 982, 3.723,
          983, 5.212, 984, 5.692, 985, 4.75, 986, 4.143, 987, 4.143,
        ],
      ],
      ["title/interfaces/IRequestOptions.html", [615, 1.187, 988, 2.778]],
      [
        "body/interfaces/IRequestOptions.html",
        [
          3, 0.207, 4, 0.207, 5, 0.142, 7, 0.582, 20, 0.016, 22, 0.81, 23,
          1.088, 33, 0.207, 34, 1.235, 36, 1.999, 41, 1.236, 57, 0.012, 58,
          0.012, 229, 1.34, 232, 4.885, 242, 1.545, 251, 3.101, 276, 3.622, 280,
          4.666, 313, 3.535, 333, 3.815, 334, 5.387, 335, 3.815, 336, 3.815,
          606, 3.012, 615, 1.63, 630, 2.28, 809, 3.579, 947, 2.631, 988, 5.041,
          989, 4.166, 990, 4.637, 991, 6.127, 992, 4.637, 993, 4.166,
        ],
      ],
      ["title/interfaces/IUser.html", [615, 1.187, 994, 2.404]],
      [
        "body/interfaces/IUser.html",
        [
          3, 0.198, 4, 0.198, 5, 0.111, 7, 0.556, 20, 0.016, 21, 0.99, 22,
          0.906, 23, 1.206, 29, 0.267, 31, 1.201, 33, 0.246, 34, 1.201, 40,
          2.393, 49, 2.828, 52, 4.323, 57, 0.012, 58, 0.012, 141, 0.745, 229,
          1.303, 242, 1.604, 254, 1.655, 305, 3.328, 471, 3.49, 615, 1.558, 717,
          3.407, 947, 2.515, 966, 4.204, 967, 3.927, 994, 3.927, 995, 3.982,
          996, 3.667, 997, 4.956, 998, 4.432, 999, 4.432,
        ],
      ],
      ["title/interfaces/IUser-1.html", [574, 1.52, 615, 0.989, 994, 2.004]],
      [
        "body/interfaces/IUser-1.html",
        [
          0, 0.156, 3, 0.175, 4, 0.175, 5, 0.098, 7, 0.493, 10, 1.326, 20,
          0.016, 21, 0.921, 22, 0.844, 29, 0.362, 31, 1.308, 33, 0.175, 34,
          0.855, 35, 1.532, 44, 2.025, 52, 4.27, 57, 0.011, 58, 0.011, 59,
          0.542, 69, 1.225, 70, 1.046, 71, 1.307, 73, 1.225, 75, 1.225, 77,
          0.493, 171, 1.088, 181, 3.051, 189, 3.23, 208, 1.132, 221, 1.326, 222,
          1.557, 223, 1.93, 229, 1.206, 231, 2.111, 241, 3.527, 242, 1.585, 252,
          3.527, 305, 3.094, 312, 4.278, 352, 2.897, 382, 2.12, 383, 1.693, 384,
          2.021, 471, 3.245, 593, 2.757, 601, 2.12, 615, 1.379, 630, 2.79, 687,
          2.897, 719, 3.222, 726, 2.346, 861, 3.415, 947, 2.227, 994, 4.04, 996,
          3.409, 1000, 3.23, 1001, 4.668, 1002, 3.925, 1003, 3.925, 1004, 3.925,
          1005, 3.925, 1006, 3.527, 1007, 3.925, 1008, 5.105, 1009, 3.925, 1010,
          3.925, 1011, 3.925, 1012, 3.925, 1013, 5.105, 1014, 4.587, 1015,
          2.992, 1016, 3.925, 1017, 3.925, 1018, 2.992,
        ],
      ],
      ["title/classes/ImageController.html", [0, 0.134, 1019, 3.034]],
      [
        "body/classes/ImageController.html",
        [
          0, 0.149, 2, 2.251, 3, 0.168, 4, 0.168, 5, 0.158, 7, 0.473, 8, 1.127,
          9, 4.172, 10, 2.233, 14, 4.464, 15, 4.464, 16, 3.604, 17, 1.162, 19,
          1.314, 20, 0.016, 21, 0.852, 22, 0.735, 23, 1.067, 24, 4.222, 25,
          1.211, 26, 3.136, 29, 0.335, 30, 2.377, 31, 1.288, 32, 3.384, 33,
          0.168, 34, 1.211, 36, 2.55, 40, 3.003, 41, 1.482, 42, 4.089, 43,
          3.719, 44, 2.438, 45, 2.661, 46, 2.503, 47, 4.239, 48, 3.538, 49,
          1.695, 50, 3.384, 57, 0.011, 58, 0.011, 534, 3.022, 720, 1.494, 721,
          1.852, 729, 1.852, 996, 2.137, 1019, 4.465, 1020, 3.766, 1021, 6.417,
          1022, 6.417, 1023, 6.417, 1024, 4.346, 1025, 4.346, 1026, 4.346, 1027,
          4.346, 1028, 4.346, 1029, 4.346, 1030, 3.384, 1031, 3.384, 1032,
          4.346, 1033, 4.346, 1034, 5.734, 1035, 3.766, 1036, 5.734, 1037,
          4.969, 1038, 3.766, 1039, 4.969, 1040, 4.346, 1041, 3.099,
        ],
      ],
      ["title/components/IssueComponent.html", [59, 0.359, 148, 0.936]],
      [
        "body/components/IssueComponent.html",
        [
          0, 0.104, 3, 0.118, 4, 0.118, 5, 0.066, 7, 0.33, 8, 0.878, 10, 1.55,
          17, 1.217, 19, 0.622, 20, 0.016, 21, 0.703, 22, 0.745, 23, 0.505, 25,
          0.573, 29, 0.325, 31, 0.843, 33, 0.118, 34, 0.843, 35, 0.79, 41,
          0.702, 44, 1.045, 57, 0.008, 58, 0.008, 59, 0.488, 60, 0.73, 61,
          1.256, 62, 0.889, 63, 0.889, 64, 0.889, 65, 0.889, 68, 0.889, 69,
          2.121, 70, 1.812, 71, 1.38, 72, 0.855, 73, 1.208, 75, 1.208, 77, 0.33,
          79, 1.238, 80, 1.821, 81, 2.138, 83, 1.045, 85, 1.536, 86, 1.416, 88,
          1.993, 89, 2.065, 90, 1.748, 91, 1.993, 92, 1.136, 94, 1.979, 95,
          1.669, 96, 2.228, 97, 1.6, 98, 1.613, 99, 1.574, 100, 1.993, 101,
          2.167, 103, 1.821, 104, 1.669, 105, 1.6, 106, 1.356, 107, 1.356, 108,
          1.82, 114, 1.993, 115, 1.993, 119, 0.889, 120, 1.256, 121, 1.307, 122,
          0.889, 123, 1.708, 124, 0.889, 125, 1.307, 126, 0.76, 127, 0.889, 128,
          0.76, 129, 0.889, 130, 0.76, 131, 0.889, 132, 0.73, 133, 0.73, 134,
          1.307, 135, 0.76, 136, 0.76, 137, 0.855, 138, 0.889, 139, 0.73, 140,
          0.76, 141, 0.443, 142, 0.889, 143, 0.73, 144, 0.76, 145, 0.889, 146,
          0.76, 147, 0.889, 148, 1.403, 149, 0.889, 150, 0.73, 151, 0.889, 152,
          0.73, 153, 0.889, 154, 0.76, 155, 0.889, 156, 0.889, 157, 0.73, 158,
          0.889, 159, 0.889, 160, 0.76, 161, 0.889, 162, 0.73, 163, 0.463, 164,
          0.889, 165, 0.76, 166, 0.889, 167, 0.73, 168, 0.889, 169, 0.73, 170,
          0.889, 171, 0.73, 172, 0.889, 173, 0.889, 181, 3.481, 189, 2.167, 208,
          1.116, 209, 2.366, 210, 2.771, 220, 1.185, 229, 0.915, 231, 1.897,
          242, 1.356, 276, 2.87, 351, 1.422, 352, 2.604, 358, 1.875, 382, 1.422,
          383, 1.136, 384, 1.356, 394, 1.295, 431, 1.422, 473, 3.478, 492,
          1.295, 494, 1.662, 496, 1.136, 497, 1.494, 498, 1.875, 501, 3.87, 542,
          4.079, 553, 2.09, 559, 1.574, 575, 2.256, 576, 1.903, 577, 1.875, 579,
          1.761, 580, 1.574, 598, 2.478, 606, 2.938, 645, 2.167, 687, 2.87, 716,
          2.007, 717, 1.494, 718, 2.366, 719, 2.896, 720, 1.821, 721, 1.903,
          726, 1.574, 729, 1.295, 739, 2.756, 740, 1.875, 742, 1.875, 750,
          1.494, 780, 3.058, 832, 1.875, 833, 1.875, 834, 1.875, 835, 2.756,
          836, 1.875, 837, 1.875, 838, 1.875, 897, 1.875, 944, 2.633, 961,
          4.162, 962, 4.162, 964, 3.856, 970, 3.498, 1006, 4.123, 1014, 4.123,
          1042, 2.633, 1043, 5.295, 1044, 4.466, 1045, 5.837, 1046, 4.466, 1047,
          3.039, 1048, 3.039, 1049, 3.039, 1050, 3.039, 1051, 3.039, 1052,
          3.039, 1053, 4.466, 1054, 4.466, 1055, 4.466, 1056, 3.478, 1057,
          3.498, 1058, 3.267, 1059, 3.039, 1060, 3.039, 1061, 2.007, 1062,
          3.039, 1063, 3.039, 1064, 2.366, 1065, 2.167, 1066, 2.366, 1067,
          4.466, 1068, 3.039, 1069, 4.466, 1070, 2.167, 1071, 3.87, 1072, 2.366,
          1073, 2.366, 1074, 2.366,
        ],
      ],
      ["title/modules/IssueModule.html", [174, 1.587, 368, 2.574]],
      [
        "body/modules/IssueModule.html",
        [
          0, 0.187, 3, 0.211, 4, 0.211, 5, 0.118, 20, 0.016, 29, 0.403, 33,
          0.211, 57, 0.013, 58, 0.013, 77, 0.594, 148, 1.856, 163, 0.832, 176,
          1.955, 177, 2.373, 182, 2.699, 183, 2.039, 185, 2.822, 186, 2.554,
          187, 2.699, 192, 3.1, 193, 2.554, 201, 2.955, 368, 5.211, 394, 2.822,
          429, 4.376, 431, 3.1, 509, 3.614, 758, 3.163, 780, 3.257, 1075, 4.729,
          1076, 5.457, 1077, 4.729, 1078, 5.457, 1079, 5.457,
        ],
      ],
      ["title/components/LoginComponent.html", [59, 0.359, 150, 0.936]],
      [
        "body/components/LoginComponent.html",
        [
          0, 0.09, 3, 0.102, 4, 0.102, 5, 0.057, 7, 0.286, 8, 0.789, 10, 1.422,
          14, 3.15, 16, 1.232, 17, 1.16, 19, 0.539, 20, 0.016, 21, 0.645, 22,
          0.67, 23, 0.438, 25, 0.497, 29, 0.322, 31, 1.163, 33, 0.102, 34,
          0.917, 35, 0.684, 36, 0.984, 41, 0.926, 45, 1.564, 49, 1.564, 56,
          1.624, 57, 0.008, 58, 0.008, 59, 0.447, 60, 0.632, 61, 1.128, 62,
          0.77, 63, 0.77, 64, 0.77, 65, 0.77, 68, 0.77, 69, 2.087, 70, 1.782,
          71, 1.298, 72, 0.74, 73, 1.085, 75, 1.085, 77, 0.286, 78, 1.174, 79,
          2.214, 80, 2.327, 81, 2.503, 83, 2.327, 85, 1.671, 86, 1.954, 87,
          1.122, 88, 2.168, 89, 1.564, 90, 1.931, 91, 2.168, 92, 0.984, 93,
          1.294, 94, 2.031, 95, 1.816, 96, 2.296, 97, 2.208, 98, 1.952, 99,
          1.363, 100, 2.168, 103, 2.011, 104, 1.499, 105, 1.437, 112, 1.816,
          114, 1.79, 115, 1.79, 117, 2.737, 118, 3.029, 119, 0.77, 120, 1.128,
          121, 1.174, 122, 0.77, 123, 1.59, 124, 0.77, 125, 1.174, 126, 0.658,
          127, 0.77, 128, 0.658, 129, 0.77, 130, 0.658, 131, 0.77, 132, 0.632,
          133, 0.632, 134, 1.174, 135, 0.658, 136, 0.658, 137, 0.74, 138, 0.77,
          139, 0.632, 140, 0.658, 141, 0.383, 142, 0.77, 143, 0.632, 144, 0.658,
          145, 0.77, 146, 0.658, 147, 0.77, 148, 0.632, 149, 0.77, 150, 1.306,
          151, 0.77, 152, 0.632, 153, 0.77, 154, 0.658, 155, 0.77, 156, 0.77,
          157, 0.632, 158, 0.77, 159, 0.77, 160, 0.658, 161, 0.77, 162, 0.632,
          163, 0.401, 164, 0.77, 165, 0.658, 166, 0.77, 167, 0.632, 168, 0.77,
          169, 0.632, 170, 0.77, 171, 0.632, 172, 0.77, 173, 0.77, 208, 1.003,
          210, 2.316, 220, 1.027, 229, 0.821, 231, 1.437, 242, 1.212, 254,
          0.684, 255, 0.77, 278, 2.071, 281, 4.709, 305, 2.425, 349, 1.294, 351,
          1.877, 352, 1.972, 394, 1.122, 414, 2.998, 416, 1.363, 431, 1.232,
          466, 2.86, 471, 2.999, 491, 2.05, 492, 1.709, 494, 2.194, 496, 0.984,
          497, 1.972, 498, 1.624, 499, 1.709, 500, 1.709, 504, 1.877, 534,
          1.122, 542, 4.258, 553, 1.877, 559, 2.077, 571, 1.526, 575, 2.991,
          576, 2.731, 577, 1.624, 578, 1.877, 579, 1.526, 580, 1.363, 581,
          2.817, 582, 1.232, 589, 2.39, 598, 2.274, 665, 2.817, 688, 3.21, 720,
          1.379, 721, 1.122, 729, 1.122, 735, 1.877, 736, 1.877, 737, 1.877,
          738, 1.877, 739, 2.998, 740, 2.475, 750, 1.294, 752, 2.86, 753, 1.877,
          780, 2.876, 832, 1.624, 833, 1.624, 834, 1.624, 835, 2.475, 836,
          1.624, 837, 1.624, 838, 1.624, 895, 3.465, 1070, 2.86, 1080, 2.281,
          1081, 2.632, 1082, 4.011, 1083, 4.211, 1084, 5.069, 1085, 2.632, 1086,
          4.011, 1087, 2.632, 1088, 2.632, 1089, 2.632, 1090, 2.632, 1091,
          2.632, 1092, 2.632, 1093, 3.476, 1094, 4.011, 1095, 2.632, 1096, 2.05,
          1097, 2.281, 1098, 2.632, 1099, 2.632, 1100, 3.476, 1101, 3.476, 1102,
          2.632, 1103, 2.632, 1104, 2.632, 1105, 2.632, 1106, 2.632, 1107,
          2.632, 1108, 2.05, 1109, 2.632, 1110, 2.05, 1111, 4.709, 1112, 3.123,
          1113, 3.123, 1114, 2.281, 1115, 3.784, 1116, 2.05, 1117, 2.86, 1118,
          2.281, 1119, 2.281, 1120, 2.281, 1121, 2.281, 1122, 2.05, 1123, 2.05,
          1124, 2.05, 1125, 3.123, 1126, 2.65, 1127, 2.281, 1128, 2.632, 1129,
          2.632, 1130, 2.632, 1131, 2.65, 1132, 2.632, 1133, 2.632, 1134, 2.632,
          1135, 2.05, 1136, 2.632, 1137, 2.632,
        ],
      ],
      ["title/modules/LoginModule.html", [174, 1.587, 369, 2.574]],
      [
        "body/modules/LoginModule.html",
        [
          0, 0.177, 3, 0.2, 4, 0.2, 5, 0.112, 20, 0.016, 29, 0.411, 33, 0.2, 57,
          0.012, 58, 0.012, 77, 0.561, 150, 1.831, 163, 0.786, 176, 1.848, 177,
          2.293, 182, 2.607, 183, 1.928, 185, 2.726, 186, 2.994, 187, 2.607,
          190, 3.499, 191, 2.102, 192, 2.994, 193, 2.414, 195, 2.821, 201,
          2.855, 220, 2.012, 278, 3.247, 369, 5.233, 379, 4.982, 380, 3.678,
          394, 2.198, 416, 2.671, 429, 4.227, 431, 2.414, 454, 4.562, 509,
          3.566, 758, 2.99, 780, 3.146, 1138, 4.47, 1139, 5.158, 1140, 5.158,
          1141, 4.47, 1142, 5.158, 1143, 5.158,
        ],
      ],
      ["title/components/MessageComponent.html", [59, 0.359, 152, 0.936]],
      [
        "body/components/MessageComponent.html",
        [
          0, 0.068, 3, 0.076, 4, 0.076, 5, 0.043, 7, 0.215, 8, 0.629, 10, 1.597,
          17, 1.252, 19, 0.95, 20, 0.016, 21, 0.763, 22, 0.744, 23, 0.772, 25,
          1.03, 29, 0.3, 31, 0.604, 33, 0.076, 34, 1.03, 35, 0.514, 40, 2.171,
          41, 1.071, 45, 1.248, 46, 1.248, 57, 0.006, 58, 0.006, 59, 0.371, 60,
          0.475, 61, 0.9, 62, 0.578, 63, 0.578, 64, 0.578, 65, 0.578, 68, 0.578,
          69, 2.005, 70, 1.712, 71, 1.131, 72, 0.556, 73, 0.866, 75, 0.866, 77,
          0.215, 78, 0.882, 79, 0.805, 80, 2.378, 81, 2.536, 82, 1.888, 83,
          2.522, 84, 0.925, 85, 2.057, 86, 2.165, 87, 2.325, 88, 2.07, 89,
          1.809, 90, 2.096, 92, 2.039, 93, 0.972, 94, 2.427, 95, 2.039, 96,
          2.373, 97, 1.826, 98, 1.822, 99, 2.639, 100, 1.428, 101, 2.282, 103,
          2.057, 104, 2.039, 105, 2.059, 106, 2.563, 107, 2.434, 108, 2.223,
          109, 1.428, 112, 2.475, 113, 2.282, 114, 2.434, 115, 2.434, 116,
          1.305, 117, 2.972, 118, 2.639, 119, 0.578, 120, 0.9, 121, 1.358, 122,
          0.578, 123, 1.358, 124, 0.578, 125, 0.937, 126, 0.494, 127, 0.578,
          128, 0.494, 129, 0.578, 130, 0.494, 131, 0.578, 132, 0.475, 133,
          0.475, 134, 0.937, 135, 0.494, 136, 0.494, 137, 0.556, 138, 0.578,
          139, 0.475, 140, 0.494, 141, 0.288, 142, 0.578, 143, 0.475, 144,
          0.494, 145, 0.578, 146, 0.494, 147, 0.578, 148, 0.475, 149, 0.578,
          150, 0.475, 151, 0.578, 152, 1.115, 153, 0.578, 154, 0.494, 155,
          0.578, 156, 0.578, 157, 0.475, 158, 0.578, 159, 0.578, 160, 0.494,
          161, 0.578, 162, 0.475, 163, 0.301, 164, 0.578, 165, 0.494, 166,
          0.578, 167, 0.475, 168, 0.578, 169, 0.475, 170, 0.578, 171, 0.475,
          172, 0.578, 173, 0.578, 191, 0.805, 208, 0.8, 218, 1.658, 221, 0.578,
          222, 0.679, 223, 1.364, 229, 0.655, 230, 2.338, 231, 1.147, 242, 1.13,
          245, 1.081, 254, 0.832, 255, 0.937, 256, 1.145, 349, 0.972, 351,
          0.925, 375, 3.33, 383, 1.905, 395, 2.282, 426, 1.538, 488, 3.308, 492,
          1.364, 496, 2.236, 497, 0.972, 499, 1.364, 500, 1.364, 502, 1.538,
          503, 2.492, 504, 1.498, 505, 2.338, 520, 2.114, 525, 3.545, 531,
          1.662, 535, 1.145, 537, 1.219, 543, 3.969, 545, 2.774, 547, 2.774,
          551, 3.142, 552, 3.496, 553, 3.099, 554, 4.728, 559, 1.023, 562,
          1.219, 571, 1.145, 574, 2.385, 575, 1.977, 576, 1.977, 577, 1.219,
          578, 1.409, 581, 1.145, 582, 2.171, 585, 3.142, 587, 2.114, 588,
          2.689, 589, 1.574, 593, 1.888, 601, 2.171, 621, 1.219, 627, 1.305,
          630, 1.719, 645, 1.409, 665, 1.145, 666, 1.219, 672, 1.409, 692,
          3.468, 750, 0.972, 760, 3.142, 774, 2.492, 777, 2.492, 778, 2.492,
          782, 1.538, 783, 1.538, 803, 2.492, 804, 1.538, 805, 2.492, 809,
          1.081, 827, 1.538, 831, 1.219, 840, 1.538, 861, 2.338, 889, 1.712,
          890, 1.712, 893, 1.538, 896, 3.634, 904, 2.489, 946, 3.064, 965,
          1.219, 975, 1.145, 976, 1.855, 996, 1.984, 1058, 1.219, 1061, 1.305,
          1072, 1.538, 1073, 1.538, 1074, 1.538, 1117, 2.282, 1126, 1.305, 1144,
          1.712, 1145, 4.034, 1146, 4.034, 1147, 3.201, 1148, 4.034, 1149,
          4.034, 1150, 4.034, 1151, 4.034, 1152, 3.201, 1153, 4.639, 1154,
          4.639, 1155, 1.712, 1156, 2.862, 1157, 3.201, 1158, 3.201, 1159,
          3.201, 1160, 1.976, 1161, 3.201, 1162, 1.976, 1163, 1.976, 1164,
          1.976, 1165, 1.976, 1166, 1.976, 1167, 1.976, 1168, 1.976, 1169,
          1.976, 1170, 1.976, 1171, 1.976, 1172, 1.712, 1173, 4.034, 1174,
          3.201, 1175, 1.976, 1176, 1.712, 1177, 1.976, 1178, 3.201, 1179,
          3.201, 1180, 1.976, 1181, 1.976, 1182, 1.976, 1183, 4.02, 1184, 4.639,
          1185, 1.976, 1186, 1.976, 1187, 1.976, 1188, 1.976, 1189, 2.774, 1190,
          1.976, 1191, 1.976, 1192, 1.976, 1193, 1.976, 1194, 1.976, 1195,
          1.976, 1196, 1.976, 1197, 1.976, 1198, 1.976, 1199, 1.976, 1200,
          1.976, 1201, 1.976, 1202, 1.976, 1203, 2.492, 1204, 1.976, 1205,
          1.538, 1206, 1.976, 1207, 1.976, 1208, 1.976, 1209, 1.976, 1210,
          1.976, 1211, 1.976, 1212, 1.976, 1213, 1.976, 1214, 4.034, 1215,
          1.976, 1216, 1.976, 1217, 1.976, 1218, 1.976, 1219, 1.976, 1220,
          1.976, 1221, 1.976, 1222, 1.976, 1223, 3.201, 1224, 1.976, 1225,
          1.976, 1226, 1.976, 1227, 1.976, 1228, 3.201, 1229, 4.639, 1230,
          2.282, 1231, 1.976, 1232, 3.064, 1233, 3.201, 1234, 1.712, 1235,
          1.976, 1236, 1.976, 1237, 1.976, 1238, 3.201, 1239, 1.976, 1240,
          1.409, 1241, 1.976, 1242, 3.201, 1243, 3.201, 1244, 3.201, 1245,
          3.201, 1246, 1.976, 1247, 1.976, 1248, 1.976, 1249, 1.976, 1250,
          1.976, 1251, 1.976, 1252, 1.976, 1253, 1.538,
        ],
      ],
      ["title/classes/MessageController.html", [0, 0.134, 1254, 3.034]],
      [
        "body/classes/MessageController.html",
        [
          0, 0.166, 2, 2.508, 3, 0.187, 4, 0.187, 5, 0.105, 7, 0.527, 8, 1.209,
          9, 3.696, 10, 1.978, 14, 4.121, 15, 4.121, 16, 3.327, 17, 0.877, 19,
          0.992, 20, 0.016, 21, 0.643, 22, 0.555, 23, 0.805, 24, 3.565, 25,
          0.914, 26, 2.649, 29, 0.321, 30, 2.649, 33, 0.187, 36, 2.298, 38,
          4.789, 39, 4.789, 40, 2.878, 41, 1.42, 43, 2.807, 44, 2.114, 45,
          1.889, 46, 2.399, 47, 3.199, 48, 2.988, 49, 1.889, 57, 0.012, 58,
          0.012, 312, 2.988, 383, 2.802, 740, 2.988, 965, 4.386, 974, 3.771,
          975, 3.917, 976, 4.121, 977, 3.771, 978, 4.789, 996, 2.381, 1041,
          3.453, 1254, 4.789, 1255, 4.197, 1256, 5.856, 1257, 4.843, 1258,
          4.843, 1259, 4.197, 1260, 6.758, 1261, 4.843, 1262, 6.758, 1263,
          4.789, 1264, 4.843, 1265, 3.453, 1266, 7.109,
        ],
      ],
      ["title/modules/MessageModule.html", [174, 1.587, 370, 2.574]],
      [
        "body/modules/MessageModule.html",
        [
          0, 0.185, 3, 0.208, 4, 0.208, 5, 0.117, 20, 0.016, 29, 0.402, 33,
          0.208, 57, 0.012, 58, 0.012, 77, 0.586, 152, 1.85, 163, 0.821, 176,
          1.931, 177, 2.355, 182, 2.678, 183, 2.014, 185, 2.801, 186, 3.076,
          187, 2.678, 190, 3.595, 191, 2.196, 192, 3.076, 193, 2.522, 201,
          2.405, 370, 5.268, 375, 4.463, 426, 4.196, 1156, 4.751, 1172, 4.67,
          1267, 4.67, 1268, 4.67, 1269, 4.67, 1270, 5.389, 1271, 5.389,
        ],
      ],
      ["title/injectables/MessageService.html", [219, 1.66, 375, 2.258]],
      [
        "body/injectables/MessageService.html",
        [
          0, 0.172, 3, 0.193, 4, 0.193, 5, 0.108, 7, 0.543, 8, 1.233, 17, 1.241,
          19, 1.284, 20, 0.016, 21, 0.833, 22, 0.824, 23, 1.043, 25, 0.943, 29,
          0.358, 33, 0.193, 34, 1.184, 40, 2.338, 41, 1.448, 43, 2.895, 57,
          0.012, 58, 0.012, 77, 0.543, 98, 1.521, 141, 0.914, 208, 1.249, 219,
          2.672, 221, 1.462, 222, 1.717, 224, 3.082, 227, 3.082, 229, 1.284,
          232, 4.664, 238, 4.436, 242, 1.486, 243, 4.051, 254, 1.631, 255,
          1.836, 258, 3.3, 259, 3.3, 260, 2.895, 262, 4.472, 263, 3.869, 265,
          3.082, 269, 3.562, 290, 4.329, 292, 5.435, 317, 3.3, 318, 3.89, 325,
          4.329, 326, 4.329, 375, 3.635, 535, 2.895, 975, 2.895, 976, 3.635,
          1256, 5.435, 1272, 4.329, 1273, 6.271, 1274, 6.271, 1275, 4.995, 1276,
          4.995, 1277, 4.995, 1278, 4.995, 1279, 4.995, 1280, 4.995,
        ],
      ],
      ["title/components/NavBarComponent.html", [59, 0.359, 154, 0.974]],
      [
        "body/components/NavBarComponent.html",
        [
          0, 0.07, 3, 0.078, 4, 0.078, 5, 0.044, 7, 0.447, 8, 0.643, 17, 1.245,
          19, 0.841, 20, 0.016, 21, 0.686, 22, 0.692, 23, 0.683, 25, 0.975, 29,
          0.334, 31, 0.617, 33, 0.078, 34, 0.383, 35, 0.527, 45, 2.153, 57,
          0.006, 58, 0.006, 59, 0.378, 60, 0.487, 61, 0.919, 62, 0.593, 63,
          0.593, 64, 0.593, 65, 0.593, 68, 0.593, 69, 2.023, 70, 1.719, 71,
          1.146, 72, 0.57, 73, 0.884, 75, 0.884, 77, 0.355, 78, 0.905, 79,
          0.826, 80, 2.293, 81, 2.33, 83, 2.293, 84, 0.949, 85, 1.898, 86, 2.03,
          87, 1.393, 88, 1.832, 89, 1.601, 90, 1.705, 91, 0.905, 92, 1.76, 93,
          0.997, 94, 1.76, 95, 1.221, 96, 1.851, 97, 1.851, 98, 1.95, 99, 1.05,
          100, 1.458, 103, 2.393, 104, 1.534, 105, 0.727, 108, 2.104, 109,
          2.591, 112, 1.76, 114, 0.905, 115, 0.905, 117, 2.204, 118, 2.675, 119,
          0.593, 120, 0.919, 121, 0.957, 122, 0.593, 123, 1.378, 124, 0.593,
          125, 0.957, 126, 0.507, 127, 0.593, 128, 0.507, 129, 0.593, 130,
          0.507, 131, 0.593, 132, 0.487, 133, 0.487, 134, 0.957, 135, 0.507,
          136, 0.507, 137, 0.57, 138, 0.593, 139, 0.487, 140, 0.507, 141, 0.295,
          142, 0.593, 143, 0.487, 144, 0.507, 145, 0.593, 146, 0.507, 147,
          0.593, 148, 0.487, 149, 0.593, 150, 0.487, 151, 0.593, 152, 0.487,
          153, 0.593, 154, 1.177, 155, 1.916, 156, 0.593, 157, 0.487, 158,
          0.593, 159, 0.593, 160, 0.507, 161, 0.593, 162, 0.487, 163, 0.309,
          164, 0.593, 165, 0.507, 166, 0.593, 167, 0.487, 168, 0.593, 169,
          0.487, 170, 0.593, 171, 0.487, 172, 0.593, 173, 0.593, 183, 1.534,
          208, 0.817, 210, 2.007, 218, 2.126, 220, 0.791, 221, 0.593, 222,
          0.697, 223, 1.393, 229, 0.669, 230, 2.38, 231, 1.471, 242, 0.643, 254,
          1.343, 255, 1.512, 256, 1.175, 263, 1.251, 349, 0.997, 351, 1.922,
          357, 4.308, 383, 1.221, 394, 0.864, 400, 5.419, 403, 1.757, 431,
          0.949, 467, 2.159, 488, 1.446, 496, 1.534, 497, 2.855, 498, 2.533,
          499, 2.352, 500, 2.352, 504, 1.53, 506, 1.446, 507, 1.446, 508, 2.994,
          531, 1.851, 542, 4.245, 551, 1.579, 553, 2.584, 555, 4.521, 558,
          3.197, 565, 2.33, 569, 4.23, 570, 1.757, 571, 1.175, 573, 2.545, 574,
          1.53, 575, 1.393, 576, 1.393, 582, 1.53, 585, 1.579, 586, 1.579, 588,
          1.894, 589, 2.316, 593, 1.922, 598, 2.997, 601, 2.204, 630, 1.393,
          664, 1.446, 668, 1.757, 672, 3.358, 688, 2.713, 692, 3.502, 742,
          1.251, 750, 0.997, 752, 2.33, 760, 3.197, 774, 2.545, 777, 2.545, 778,
          2.545, 780, 2.54, 782, 1.579, 783, 1.579, 803, 2.545, 804, 1.579, 805,
          2.545, 822, 3.558, 827, 1.579, 829, 1.757, 831, 1.251, 832, 1.251,
          833, 1.251, 834, 1.251, 835, 2.017, 836, 1.251, 837, 1.251, 838,
          1.251, 840, 1.579, 861, 1.175, 893, 1.579, 896, 1.446, 897, 1.251,
          904, 1.251, 943, 2.545, 946, 3.647, 956, 4.081, 969, 1.579, 1108,
          1.579, 1111, 4.081, 1113, 3.667, 1131, 3.836, 1135, 1.579, 1176,
          1.757, 1232, 1.339, 1240, 2.33, 1281, 6.031, 1282, 1.757, 1283, 4.106,
          1284, 3.268, 1285, 3.558, 1286, 4.106, 1287, 3.558, 1288, 4.106, 1289,
          4.106, 1290, 4.709, 1291, 3.268, 1292, 2.028, 1293, 5.521, 1294,
          4.106, 1295, 4.709, 1296, 2.028, 1297, 3.268, 1298, 2.028, 1299,
          2.028, 1300, 2.028, 1301, 2.028, 1302, 2.028, 1303, 2.028, 1304,
          2.028, 1305, 3.268, 1306, 3.268, 1307, 3.268, 1308, 3.268, 1309,
          4.106, 1310, 2.028, 1311, 2.028, 1312, 2.028, 1313, 3.268, 1314,
          2.028, 1315, 2.028, 1316, 2.028, 1317, 2.028, 1318, 2.028, 1319,
          1.757, 1320, 2.028, 1321, 1.757, 1322, 2.028, 1323, 4.709, 1324,
          4.709, 1325, 4.709, 1326, 4.106, 1327, 3.268, 1328, 4.106, 1329,
          2.028, 1330, 3.268, 1331, 2.028, 1332, 1.757, 1333, 2.028, 1334,
          2.028, 1335, 3.268, 1336, 2.028, 1337, 4.106, 1338, 4.709, 1339,
          3.268, 1340, 2.028, 1341, 2.028, 1342, 5.521, 1343, 4.106, 1344,
          4.106, 1345, 2.028, 1346, 5.165, 1347, 2.028, 1348, 1.757, 1349,
          2.028, 1350, 2.028, 1351, 3.268, 1352, 3.268, 1353, 2.028, 1354,
          2.028, 1355, 2.028, 1356, 1.757, 1357, 2.028, 1358, 2.028,
        ],
      ],
      ["title/components/OfferComponent.html", [59, 0.359, 157, 0.936]],
      [
        "body/components/OfferComponent.html",
        [
          0, 0.066, 3, 0.075, 4, 0.075, 5, 0.086, 7, 0.21, 8, 0.619, 10, 1.581,
          17, 1.296, 19, 0.938, 20, 0.016, 21, 0.756, 22, 0.778, 23, 0.762, 25,
          1.12, 29, 0.329, 31, 0.594, 33, 0.075, 34, 0.864, 35, 0.503, 41,
          0.447, 44, 1.367, 46, 2.107, 57, 0.006, 58, 0.006, 59, 0.366, 60,
          0.465, 61, 0.885, 62, 0.566, 63, 0.566, 64, 0.566, 65, 0.566, 68,
          0.566, 69, 1.999, 70, 1.707, 71, 1.119, 72, 0.544, 73, 0.851, 75,
          0.851, 77, 0.21, 78, 0.863, 79, 1.62, 80, 2.302, 81, 2.553, 82, 1.472,
          83, 2.336, 84, 1.472, 85, 1.575, 86, 1.712, 87, 0.824, 88, 2.738, 89,
          2.393, 90, 1.959, 91, 0.863, 92, 1.712, 94, 2.128, 95, 2.128, 96,
          2.435, 97, 2.198, 98, 1.869, 103, 2.263, 104, 2.217, 105, 2.198, 106,
          2.044, 107, 2.044, 108, 1.866, 109, 0.863, 112, 2.128, 113, 1.379,
          114, 2.814, 115, 2.541, 116, 1.278, 117, 0.905, 119, 0.566, 120,
          0.885, 121, 0.921, 122, 0.566, 123, 1.341, 124, 0.566, 125, 0.921,
          126, 0.483, 127, 0.566, 128, 0.483, 129, 0.566, 130, 0.483, 131,
          0.566, 132, 0.465, 133, 0.465, 134, 0.921, 135, 0.483, 136, 0.483,
          137, 0.544, 138, 0.566, 139, 0.465, 140, 0.483, 141, 0.282, 142,
          0.566, 143, 0.465, 144, 0.483, 145, 0.566, 146, 0.483, 147, 0.566,
          148, 0.465, 149, 0.566, 150, 0.465, 151, 0.566, 152, 0.465, 153,
          0.566, 154, 0.483, 155, 0.566, 156, 0.566, 157, 1.101, 158, 1.164,
          159, 0.566, 160, 0.483, 161, 0.566, 162, 0.465, 163, 0.295, 164,
          0.566, 165, 0.483, 166, 0.566, 167, 0.465, 168, 0.566, 169, 0.465,
          170, 0.566, 171, 0.465, 172, 0.566, 173, 0.566, 191, 0.788, 208,
          0.786, 210, 1.952, 220, 1.227, 221, 0.566, 222, 0.665, 223, 1.34, 229,
          0.644, 230, 2.304, 231, 1.936, 242, 1.294, 245, 1.72, 251, 1.121, 254,
          0.818, 255, 0.921, 256, 1.121, 278, 1.952, 305, 0.863, 319, 0.754,
          352, 2.479, 357, 1.379, 376, 2.044, 382, 0.905, 383, 0.723, 384,
          0.863, 394, 0.824, 395, 4.231, 396, 1.278, 416, 1.001, 422, 1.058,
          492, 1.34, 494, 1.72, 495, 1.379, 496, 2.357, 497, 0.951, 499, 1.694,
          500, 1.694, 504, 1.861, 505, 1.823, 520, 2.078, 525, 3.513, 531,
          1.806, 532, 2.726, 534, 1.952, 535, 1.121, 537, 1.193, 538, 1.506,
          539, 1.676, 553, 2.528, 559, 1.001, 560, 1.506, 562, 2.826, 563,
          1.676, 571, 1.823, 575, 2.528, 576, 2.148, 579, 2.304, 580, 1.629,
          581, 1.121, 582, 1.472, 587, 1.278, 588, 1.121, 589, 0.951, 590,
          1.506, 593, 1.861, 601, 2.144, 606, 2.687, 627, 1.278, 630, 1.952,
          633, 2.757, 665, 1.121, 666, 1.941, 679, 2.655, 680, 2.655, 681,
          2.505, 682, 2.449, 687, 2.252, 688, 2.078, 690, 2.449, 692, 1.121,
          706, 1.506, 707, 2.726, 709, 2.726, 710, 1.676, 719, 2.757, 720,
          1.575, 721, 1.34, 722, 1.193, 726, 1.001, 729, 1.34, 730, 2.078, 741,
          2.243, 742, 2.453, 750, 1.955, 809, 2.505, 831, 1.193, 861, 1.823,
          880, 1.506, 897, 2.453, 898, 1.676, 975, 1.823, 976, 1.823, 996,
          0.951, 1057, 3.026, 1061, 1.278, 1071, 1.676, 1072, 1.506, 1073,
          1.506, 1074, 1.506, 1116, 1.506, 1117, 1.379, 1126, 2.078, 1131,
          1.278, 1183, 1.676, 1203, 1.506, 1205, 2.449, 1232, 1.278, 1234,
          1.676, 1285, 3.445, 1359, 5.617, 1360, 1.676, 1361, 3.445, 1362,
          3.145, 1363, 3.976, 1364, 3.976, 1365, 3.976, 1366, 3.145, 1367, 4.58,
          1368, 4.58, 1369, 4.58, 1370, 4.58, 1371, 1.934, 1372, 3.976, 1373,
          4.58, 1374, 4.58, 1375, 3.445, 1376, 3.976, 1377, 3.145, 1378, 1.934,
          1379, 1.934, 1380, 1.934, 1381, 1.934, 1382, 1.934, 1383, 1.934, 1384,
          1.934, 1385, 1.934, 1386, 1.934, 1387, 1.934, 1388, 1.934, 1389,
          1.934, 1390, 1.934, 1391, 1.934, 1392, 1.934, 1393, 1.934, 1394,
          1.934, 1395, 1.934, 1396, 1.934, 1397, 1.934, 1398, 1.676, 1399,
          1.676, 1400, 1.676, 1401, 1.676, 1402, 1.934, 1403, 1.934, 1404,
          1.934, 1405, 1.934, 1406, 1.934, 1407, 1.934, 1408, 1.934, 1409,
          1.934, 1410, 1.934, 1411, 1.934, 1412, 1.934, 1413, 1.934, 1414,
          3.145, 1415, 2.726, 1416, 1.934, 1417, 1.934, 1418, 1.506, 1419,
          1.934, 1420, 1.934, 1421, 1.934, 1422, 3.969, 1423, 1.934, 1424,
          3.145, 1425, 1.934, 1426, 1.934, 1427, 1.934, 1428, 1.934, 1429,
          1.934, 1430, 1.934, 1431, 3.145, 1432, 2.726, 1433, 3.145, 1434,
          3.145, 1435, 3.145, 1436, 3.145, 1437, 2.243, 1438, 1.934, 1439,
          1.934, 1440, 1.934, 1441, 1.934, 1442, 1.934, 1443, 1.934, 1444,
          1.934, 1445, 1.934, 1446, 3.145, 1447, 1.278, 1448, 1.934, 1449,
          1.934, 1450, 1.934, 1451, 1.934, 1452, 1.934, 1453, 3.976, 1454,
          1.934,
        ],
      ],
      ["title/modules/OfferModule.html", [174, 1.587, 371, 2.574]],
      [
        "body/modules/OfferModule.html",
        [
          0, 0.19, 3, 0.214, 4, 0.214, 5, 0.12, 20, 0.016, 29, 0.404, 33, 0.214,
          57, 0.013, 58, 0.013, 77, 0.601, 157, 1.861, 163, 0.842, 176, 1.981,
          177, 2.392, 182, 2.72, 183, 2.066, 185, 2.844, 186, 2.587, 187, 2.72,
          190, 3.651, 191, 2.252, 192, 3.124, 193, 2.587, 194, 4.118, 195,
          3.023, 196, 3.41, 201, 2.466, 371, 5.118, 382, 2.587, 383, 2.066, 384,
          2.466, 687, 3.282, 1359, 4.304, 1455, 4.79, 1456, 4.79, 1457, 5.527,
          1458, 5.527,
        ],
      ],
      ["title/components/OffersComponent.html", [59, 0.359, 160, 0.974]],
      [
        "body/components/OffersComponent.html",
        [
          0, 0.129, 3, 0.146, 4, 0.146, 5, 0.082, 7, 0.41, 8, 1.024, 17, 1.08,
          19, 0.772, 20, 0.016, 21, 0.792, 22, 0.597, 23, 0.627, 25, 0.711, 29,
          0.272, 31, 1.215, 33, 0.146, 35, 0.98, 57, 0.01, 58, 0.01, 59, 0.549,
          60, 0.906, 61, 1.465, 62, 1.103, 63, 1.103, 64, 1.103, 65, 1.103, 68,
          1.103, 69, 2.167, 70, 1.85, 71, 1.589, 72, 1.06, 73, 1.408, 75, 1.408,
          77, 0.41, 83, 1.791, 86, 2.04, 90, 2.124, 103, 1.791, 105, 1.866, 112,
          1.946, 119, 1.103, 120, 1.465, 121, 1.524, 122, 1.103, 123, 1.884,
          124, 1.103, 125, 1.524, 126, 0.942, 127, 1.103, 128, 0.942, 129,
          1.103, 130, 0.942, 131, 1.103, 132, 0.906, 133, 1.434, 134, 1.524,
          135, 0.942, 136, 0.942, 137, 1.06, 138, 1.103, 139, 0.906, 140, 0.942,
          141, 0.549, 142, 1.103, 143, 0.906, 144, 0.942, 145, 1.103, 146,
          0.942, 147, 1.103, 148, 0.906, 149, 1.103, 150, 0.906, 151, 1.103,
          152, 0.906, 153, 1.103, 154, 0.942, 155, 1.103, 156, 1.103, 157,
          0.906, 158, 1.103, 159, 1.103, 160, 1.609, 161, 1.103, 162, 0.906,
          163, 0.574, 164, 1.103, 165, 0.942, 166, 1.103, 167, 0.906, 168,
          1.103, 169, 0.906, 170, 1.103, 171, 0.906, 172, 1.103, 173, 1.103,
          181, 3.618, 208, 0.942, 223, 2.219, 224, 2.326, 229, 1.067, 254, 0.98,
          255, 1.103, 496, 1.409, 499, 1.606, 500, 1.606, 504, 2.437, 508,
          2.185, 531, 1.866, 581, 3.019, 582, 2.437, 593, 2.793, 601, 3.012,
          621, 2.326, 627, 2.49, 681, 2.848, 884, 4.168, 904, 2.326, 946, 3.441,
          963, 3.213, 1131, 3.441, 1361, 5.171, 1447, 2.49, 1459, 3.266, 1460,
          5.208, 1461, 3.769, 1462, 5.208, 1463, 3.769, 1464, 3.769, 1465,
          3.769, 1466, 3.769, 1467, 3.266, 1468, 3.769, 1469, 4.647, 1470,
          4.513, 1471, 5.208, 1472, 5.208, 1473, 5.208, 1474, 3.266, 1475,
          3.266, 1476, 4.513, 1477, 4.055, 1478, 4.055, 1479, 3.266, 1480,
          2.935, 1481, 3.266,
        ],
      ],
      ["title/classes/PostController.html", [0, 0.134, 1482, 3.034]],
      [
        "body/classes/PostController.html",
        [
          0, 0.095, 2, 1.425, 3, 0.106, 4, 0.106, 5, 0.09, 7, 0.299, 8, 0.816,
          9, 4.243, 10, 2.27, 14, 4.511, 15, 4.536, 16, 3.642, 17, 1.213, 19,
          1.372, 20, 0.016, 21, 0.889, 22, 0.767, 23, 1.114, 24, 4.325, 25,
          1.264, 26, 3.559, 29, 0.217, 30, 1.505, 33, 0.106, 34, 1.294, 36,
          2.561, 38, 2.143, 39, 3.889, 40, 2.792, 41, 1.735, 42, 3.964, 43,
          3.772, 44, 2.546, 45, 2.673, 46, 2.804, 47, 3.673, 48, 4.309, 49,
          2.612, 51, 2.959, 56, 1.698, 57, 0.008, 58, 0.008, 108, 1.691, 133,
          0.997, 141, 0.401, 221, 1.462, 277, 4.015, 312, 2.56, 319, 2.612, 534,
          2.128, 574, 1.942, 633, 3.041, 679, 2.405, 680, 2.405, 681, 2.269,
          720, 1.911, 721, 1.768, 722, 3.081, 726, 2.149, 729, 1.768, 740,
          1.698, 791, 2.895, 884, 1.698, 963, 3.43, 983, 2.959, 984, 2.143,
          1015, 1.818, 1018, 1.818, 1041, 2.959, 1110, 2.143, 1230, 1.963, 1263,
          3.889, 1418, 3.889, 1482, 3.231, 1483, 2.385, 1484, 4.327, 1485,
          4.327, 1486, 4.327, 1487, 4.327, 1488, 4.994, 1489, 4.994, 1490,
          2.385, 1491, 2.752, 1492, 2.752, 1493, 2.752, 1494, 2.752, 1495,
          2.752, 1496, 2.752, 1497, 2.752, 1498, 2.752, 1499, 2.752, 1500,
          2.385, 1501, 2.752, 1502, 2.752, 1503, 2.752, 1504, 2.752, 1505,
          2.752, 1506, 2.385, 1507, 4.149, 1508, 2.752, 1509, 4.149, 1510,
          4.149, 1511, 2.385, 1512, 2.752, 1513, 2.752, 1514, 2.752, 1515,
          4.149, 1516, 2.752, 1517, 4.149, 1518, 4.149, 1519, 4.149, 1520,
          2.752, 1521, 2.143, 1522, 4.149, 1523, 2.752, 1524, 2.385, 1525,
          2.752, 1526, 2.752, 1527, 4.149, 1528, 4.149, 1529, 2.752, 1530,
          2.752, 1531, 4.149, 1532, 2.752, 1533, 2.752, 1534, 2.752, 1535,
          2.752, 1536, 2.752, 1537, 2.752, 1538, 4.149, 1539, 2.752, 1540,
          2.752, 1541, 2.752, 1542, 2.752, 1543, 2.752, 1544, 4.994, 1545,
          2.752, 1546, 2.385, 1547, 2.752,
        ],
      ],
      ["title/injectables/PostService.html", [219, 1.66, 376, 1.738]],
      [
        "body/injectables/PostService.html",
        [
          0, 0.116, 3, 0.131, 4, 0.131, 5, 0.073, 7, 0.368, 8, 0.95, 10, 1.976,
          17, 1.328, 19, 1.423, 20, 0.016, 21, 0.923, 22, 0.859, 23, 1.156, 25,
          1.311, 26, 2.643, 29, 0.321, 33, 0.131, 34, 1.455, 36, 2.295, 41,
          1.605, 57, 0.009, 58, 0.009, 77, 0.368, 98, 1.472, 141, 0.895, 208,
          1.208, 219, 2.059, 221, 0.991, 222, 1.165, 227, 2.09, 229, 0.99, 230,
          3.265, 231, 1.214, 232, 4.165, 237, 2.936, 238, 3.789, 240, 3.445,
          242, 1.507, 243, 4.165, 245, 3.359, 251, 3.265, 254, 1.256, 255,
          1.414, 256, 1.964, 258, 2.238, 259, 2.238, 260, 1.964, 262, 4.016,
          263, 4.525, 265, 4.383, 266, 4.954, 268, 2.936, 269, 3.445, 276, 2.77,
          277, 2.09, 280, 4.016, 313, 2.238, 314, 2.936, 318, 4.386, 319, 1.885,
          322, 4.881, 330, 5.85, 333, 3.445, 334, 3.445, 335, 3.445, 336, 3.445,
          340, 2.936, 342, 2.415, 376, 2.156, 534, 2.617, 562, 2.09, 606, 2.059,
          809, 3.08, 831, 2.09, 881, 2.936, 993, 2.638, 1203, 2.638, 1415,
          4.881, 1418, 3.762, 1437, 3.445, 1485, 4.187, 1486, 4.187, 1487,
          5.322, 1546, 2.936, 1548, 2.936, 1549, 4.832, 1550, 4.832, 1551,
          4.832, 1552, 4.832, 1553, 3.387, 1554, 4.832, 1555, 3.387, 1556,
          4.832, 1557, 3.387, 1558, 3.387, 1559, 4.832, 1560, 3.387, 1561,
          4.832, 1562, 3.387, 1563, 4.832, 1564, 3.387, 1565, 3.387, 1566,
          3.387, 1567, 4.832, 1568, 3.387, 1569, 3.387, 1570, 3.387, 1571,
          3.387, 1572, 3.387, 1573, 3.387, 1574, 4.832, 1575, 3.387, 1576,
          3.387, 1577, 3.387, 1578, 3.387, 1579, 3.387, 1580, 3.387, 1581,
          3.387, 1582, 3.387, 1583, 3.387,
        ],
      ],
      ["title/classes/QueryResponse.html", [0, 0.134, 1584, 3.034]],
      [
        "body/classes/QueryResponse.html",
        [
          0, 0.19, 2, 2.868, 3, 0.214, 4, 0.214, 5, 0.12, 7, 0.602, 8, 1.314, 9,
          4.239, 16, 3.627, 17, 1.21, 19, 1.369, 20, 0.015, 21, 0.887, 22,
          0.766, 23, 1.111, 25, 1.261, 29, 0.289, 33, 0.214, 41, 1.543, 57,
          0.013, 58, 0.013, 254, 1.44, 720, 2.719, 949, 5.224, 1584, 5.203,
          1585, 4.799, 1586, 5.538, 1587, 5.538, 1588, 5.538, 1589, 5.538, 1590,
          5.538,
        ],
      ],
      ["title/components/ResetPasswordComponent.html", [59, 0.359, 162, 0.936]],
      [
        "body/components/ResetPasswordComponent.html",
        [
          0, 0.116, 3, 0.131, 4, 0.131, 5, 0.074, 7, 0.369, 8, 0.951, 10, 1.65,
          17, 1.02, 19, 0.695, 20, 0.016, 21, 0.748, 22, 0.554, 23, 0.564, 25,
          0.64, 29, 0.321, 31, 0.913, 33, 0.131, 34, 0.913, 35, 0.882, 36,
          1.267, 41, 1.302, 44, 1.166, 57, 0.009, 58, 0.009, 59, 0.519, 60,
          0.815, 61, 1.36, 62, 0.993, 63, 0.993, 64, 0.993, 65, 0.993, 68,
          0.993, 69, 2.145, 70, 1.832, 71, 1.442, 72, 0.954, 73, 1.308, 75,
          1.308, 77, 0.369, 79, 1.97, 80, 1.663, 81, 1.938, 82, 1.587, 83,
          1.663, 84, 1.587, 85, 1.938, 86, 1.533, 87, 1.445, 88, 1.513, 89,
          1.886, 90, 1.596, 91, 1.513, 92, 1.267, 93, 1.668, 94, 1.267, 95,
          1.267, 96, 1.733, 97, 1.215, 98, 1.033, 103, 1.938, 104, 1.807, 105,
          1.733, 106, 1.513, 107, 1.513, 108, 1.97, 109, 2.158, 114, 1.513, 115,
          1.513, 119, 0.993, 120, 1.36, 121, 1.415, 122, 0.993, 123, 1.798, 124,
          0.993, 125, 1.415, 126, 0.848, 127, 0.993, 128, 0.848, 129, 0.993,
          130, 0.848, 131, 0.993, 132, 0.815, 133, 0.815, 134, 1.415, 135,
          0.848, 136, 0.848, 137, 0.954, 138, 0.993, 139, 0.815, 140, 0.848,
          141, 0.494, 142, 0.993, 143, 0.815, 144, 0.848, 145, 0.993, 146,
          0.848, 147, 0.993, 148, 0.815, 149, 0.993, 150, 0.815, 151, 0.993,
          152, 0.815, 153, 0.993, 154, 0.848, 155, 0.993, 156, 0.993, 157,
          0.815, 158, 0.993, 159, 0.993, 160, 0.848, 161, 0.993, 162, 1.476,
          163, 1.102, 164, 0.993, 165, 0.848, 166, 0.993, 167, 0.815, 168,
          0.993, 169, 0.815, 170, 0.993, 171, 0.815, 172, 0.993, 173, 0.993,
          208, 1.209, 210, 2.961, 220, 1.323, 229, 0.99, 231, 2.019, 242, 0.951,
          278, 2.961, 305, 2.742, 352, 3.021, 358, 2.092, 382, 1.587, 383,
          1.267, 384, 1.513, 416, 1.756, 436, 4.059, 471, 2.637, 481, 2.641,
          492, 1.445, 534, 1.445, 553, 2.263, 575, 2.061, 576, 2.061, 606,
          2.061, 687, 3.021, 716, 2.24, 717, 1.668, 719, 3.36, 720, 2.112, 721,
          1.445, 722, 2.092, 724, 2.939, 729, 1.445, 730, 2.24, 734, 3.766, 735,
          2.418, 736, 2.418, 737, 2.418, 738, 2.418, 739, 2.092, 750, 1.668,
          897, 2.984, 958, 2.641, 1057, 4.059, 1058, 3.791, 1061, 2.24, 1096,
          4.389, 1124, 2.641, 1125, 3.766, 1126, 2.24, 1591, 4.784, 1592, 2.939,
          1593, 5.636, 1594, 4.836, 1595, 6.144, 1596, 3.391, 1597, 4.836, 1598,
          4.836, 1599, 3.391, 1600, 3.391, 1601, 3.391, 1602, 5.636, 1603,
          3.391, 1604, 4.836, 1605, 2.939, 1606, 3.391, 1607, 3.391, 1608,
          2.939, 1609, 2.939, 1610, 3.391, 1611, 3.391, 1612, 3.391, 1613,
          3.391, 1614, 3.391, 1615, 4.836,
        ],
      ],
      ["title/modules/ResetPasswordModule.html", [174, 1.587, 372, 2.574]],
      [
        "body/modules/ResetPasswordModule.html",
        [
          0, 0.188, 3, 0.212, 4, 0.212, 5, 0.119, 20, 0.016, 29, 0.397, 33,
          0.212, 57, 0.013, 58, 0.013, 77, 0.597, 162, 1.858, 163, 1.013, 176,
          1.966, 177, 2.381, 182, 2.708, 183, 2.05, 185, 2.832, 186, 2.568, 187,
          2.708, 192, 3.11, 193, 2.568, 201, 2.965, 372, 5.216, 382, 2.568, 383,
          2.05, 384, 2.448, 436, 3.625, 459, 4.755, 509, 3.619, 687, 3.268, 758,
          3.18, 1591, 4.273, 1616, 4.755, 1617, 5.487, 1618, 4.755, 1619, 5.487,
        ],
      ],
      ["title/interfaces/Result.html", [615, 1.187, 949, 2.574]],
      [
        "body/interfaces/Result.html",
        [
          3, 0.225, 4, 0.225, 5, 0.126, 7, 0.633, 20, 0.015, 22, 0.788, 33,
          0.266, 44, 2.658, 46, 3.015, 57, 0.013, 58, 0.013, 218, 3.923, 229,
          1.409, 242, 1.489, 615, 2.096, 720, 2, 809, 4.008, 947, 2.86, 948,
          4.529, 949, 4.546,
        ],
      ],
      ["title/components/SearchComponent.html", [59, 0.359, 165, 0.974]],
      [
        "body/components/SearchComponent.html",
        [
          0, 0.126, 3, 0.142, 4, 0.142, 5, 0.08, 7, 0.556, 8, 1.005, 17, 1.152,
          19, 1.205, 20, 0.016, 21, 0.888, 22, 0.729, 23, 0.978, 25, 0.965, 29,
          0.307, 31, 0.965, 33, 0.142, 34, 0.692, 35, 0.954, 57, 0.01, 58, 0.01,
          59, 0.542, 60, 0.881, 61, 1.438, 62, 1.074, 63, 1.074, 64, 1.074, 65,
          1.074, 68, 1.074, 69, 2.161, 70, 1.846, 71, 1.485, 72, 1.032, 73,
          1.382, 75, 1.382, 77, 0.399, 78, 1.637, 80, 1.261, 81, 1.261, 83,
          2.187, 85, 1.261, 86, 1.62, 89, 1.431, 90, 1.687, 94, 1.91, 95, 1.371,
          96, 2.108, 97, 1.314, 98, 1.117, 99, 3.046, 100, 1.637, 103, 1.757,
          104, 1.371, 105, 1.314, 108, 1.495, 112, 2.198, 117, 2.977, 118,
          2.647, 119, 1.074, 120, 1.438, 121, 1.496, 122, 1.074, 123, 1.862,
          124, 1.074, 125, 1.496, 126, 0.917, 127, 1.074, 128, 0.917, 129,
          1.074, 130, 0.917, 131, 1.074, 132, 0.881, 133, 0.881, 134, 1.496,
          135, 0.917, 136, 0.917, 137, 1.032, 138, 1.074, 139, 0.881, 140,
          0.917, 141, 0.745, 142, 1.074, 143, 0.881, 144, 0.917, 145, 1.074,
          146, 0.917, 147, 1.074, 148, 0.881, 149, 1.074, 150, 0.881, 151,
          1.074, 152, 0.881, 153, 1.074, 154, 0.917, 155, 1.074, 156, 1.074,
          157, 0.881, 158, 1.074, 159, 1.074, 160, 0.917, 161, 1.074, 162,
          0.881, 163, 0.559, 164, 1.074, 165, 1.59, 166, 1.074, 167, 0.881, 168,
          1.074, 169, 0.881, 170, 1.074, 171, 0.881, 172, 1.074, 173, 1.074,
          191, 1.495, 208, 1.277, 242, 1.362, 255, 1.496, 492, 1.563, 496, 1.91,
          522, 3.98, 524, 2.616, 525, 4.274, 527, 4.954, 531, 1.831, 535, 2.126,
          536, 3.98, 537, 2.263, 553, 2.753, 559, 1.9, 565, 2.616, 569, 2.423,
          573, 2.856, 575, 1.563, 576, 1.563, 581, 2.126, 664, 2.616, 666,
          2.263, 704, 3.179, 750, 1.804, 896, 3.644, 943, 2.856, 1122, 3.98,
          1123, 2.856, 1232, 2.423, 1240, 4.536, 1253, 2.856, 1620, 3.179, 1621,
          5.097, 1622, 5.882, 1623, 5.111, 1624, 5.111, 1625, 5.111, 1626,
          5.882, 1627, 3.668, 1628, 3.668, 1629, 5.111, 1630, 3.668, 1631,
          5.111, 1632, 3.668, 1633, 3.668, 1634, 5.111, 1635, 3.668, 1636,
          5.111, 1637, 3.668, 1638, 3.668, 1639, 3.668, 1640, 3.668, 1641,
          3.179,
        ],
      ],
      ["title/injectables/SocketService.html", [219, 1.66, 1156, 2.404]],
      [
        "body/injectables/SocketService.html",
        [
          0, 0.184, 3, 0.207, 4, 0.207, 5, 0.116, 7, 0.582, 8, 1.287, 17, 1.28,
          19, 1.34, 20, 0.016, 21, 0.869, 22, 0.75, 23, 1.088, 25, 1.235, 29,
          0.369, 33, 0.207, 41, 1.236, 46, 2.552, 57, 0.012, 58, 0.012, 77,
          0.582, 208, 1.337, 219, 2.788, 221, 1.566, 222, 1.84, 224, 3.301, 227,
          3.301, 259, 3.535, 260, 3.101, 394, 2.28, 395, 5.551, 396, 3.535, 531,
          1.917, 692, 3.793, 1155, 4.637, 1156, 4.038, 1642, 4.637, 1643, 7.366,
          1644, 6.544, 1645, 5.351, 1646, 5.351, 1647, 6.544, 1648, 5.351, 1649,
          6.544, 1650, 5.351, 1651, 5.351, 1652, 5.351, 1653, 5.351, 1654,
          5.351,
        ],
      ],
      ["title/classes/UserController.html", [0, 0.134, 1655, 3.034]],
      [
        "body/classes/UserController.html",
        [
          0, 0.08, 2, 1.202, 3, 0.09, 4, 0.09, 5, 0.05, 7, 0.252, 8, 0.716, 9,
          4.236, 10, 2.247, 14, 4.382, 15, 4.418, 16, 3.521, 17, 1.231, 19,
          1.366, 20, 0.016, 21, 0.942, 22, 0.764, 23, 1.109, 24, 4.111, 25,
          1.304, 26, 3.349, 29, 0.32, 30, 1.27, 31, 1.405, 32, 1.808, 33, 0.09,
          34, 1.377, 36, 2.798, 40, 2.379, 41, 1.671, 42, 3.201, 43, 3.55, 44,
          2.508, 45, 2.652, 46, 2.822, 47, 3.358, 48, 4.022, 49, 2.388, 50,
          2.834, 51, 1.655, 52, 2.11, 53, 2.012, 55, 3.154, 56, 3.406, 57,
          0.007, 58, 0.007, 71, 0.515, 120, 0.653, 141, 0.53, 163, 0.555, 208,
          1.122, 242, 1.359, 243, 2.456, 245, 2.78, 284, 3.891, 285, 3.496, 286,
          3.891, 287, 3.891, 288, 3.891, 305, 2.732, 312, 1.432, 319, 0.905,
          467, 2.405, 471, 3.182, 473, 1.808, 531, 0.832, 720, 2.105, 721,
          1.913, 726, 1.885, 727, 2.012, 729, 1.913, 963, 2.246, 964, 1.534,
          975, 1.346, 976, 1.346, 983, 1.655, 996, 1.142, 1015, 1.534, 1035,
          3.154, 1038, 2.012, 1041, 2.595, 1056, 2.834, 1061, 1.534, 1065,
          1.655, 1110, 2.834, 1259, 2.012, 1265, 1.655, 1348, 2.012, 1437,
          1.655, 1484, 3.891, 1490, 2.012, 1506, 2.012, 1524, 2.012, 1655,
          2.834, 1656, 2.012, 1657, 4.49, 1658, 4.49, 1659, 4.49, 1660, 4.49,
          1661, 2.322, 1662, 2.322, 1663, 2.322, 1664, 2.322, 1665, 5.083, 1666,
          2.322, 1667, 3.64, 1668, 2.322, 1669, 2.322, 1670, 2.322, 1671, 2.322,
          1672, 2.322, 1673, 4.49, 1674, 2.322, 1675, 5.083, 1676, 3.496, 1677,
          2.322, 1678, 2.322, 1679, 2.322, 1680, 2.322, 1681, 2.322, 1682,
          2.322, 1683, 2.322, 1684, 2.322, 1685, 2.322, 1686, 3.154, 1687, 3.64,
          1688, 1.808, 1689, 2.322, 1690, 2.322, 1691, 3.64, 1692, 3.64, 1693,
          2.322, 1694, 2.322, 1695, 2.322, 1696, 2.322, 1697, 2.322, 1698,
          5.857, 1699, 4.49, 1700, 5.857, 1701, 2.322, 1702, 2.322, 1703, 2.322,
          1704, 2.322, 1705, 2.322, 1706, 5.083, 1707, 2.322, 1708, 3.64, 1709,
          4.49, 1710, 3.64, 1711, 3.154, 1712, 3.154, 1713, 2.012, 1714, 3.154,
          1715, 2.322, 1716, 2.322, 1717, 2.322, 1718, 2.322, 1719, 2.012, 1720,
          2.322, 1721, 5.083, 1722, 3.64, 1723, 2.322, 1724, 2.322, 1725, 2.322,
          1726, 2.322, 1727, 3.64, 1728, 2.322, 1729, 1.808, 1730, 2.322, 1731,
          2.322, 1732, 2.322, 1733, 3.64, 1734, 2.322, 1735, 3.64, 1736, 3.64,
          1737, 2.322, 1738, 2.012, 1739, 2.322, 1740, 2.322, 1741, 2.322, 1742,
          2.322, 1743, 2.322, 1744, 2.322, 1745, 2.322, 1746, 2.322, 1747,
          1.808, 1748, 2.322, 1749, 2.322, 1750, 2.322,
        ],
      ],
      ["title/classes/UserIssueController.html", [0, 0.134, 1751, 3.034]],
      [
        "body/classes/UserIssueController.html",
        [
          0, 0.182, 2, 2.742, 3, 0.205, 4, 0.205, 5, 0.115, 7, 0.576, 8, 1.278,
          9, 3.849, 10, 2.06, 14, 4.254, 15, 4.079, 16, 3.434, 17, 0.958, 19,
          1.084, 20, 0.016, 21, 0.703, 22, 0.606, 23, 0.881, 24, 3.769, 25,
          0.999, 26, 2.896, 29, 0.339, 30, 2.896, 33, 0.205, 34, 0.999, 36,
          1.978, 41, 1.502, 44, 2.235, 45, 2.065, 46, 2.536, 48, 4.012, 49,
          2.065, 56, 3.266, 57, 0.012, 58, 0.012, 141, 0.771, 221, 2.06, 276,
          2.603, 720, 1.82, 721, 2.256, 726, 2.742, 729, 2.256, 961, 3.775, 962,
          3.775, 964, 3.497, 965, 3.266, 970, 4.295, 1500, 4.588, 1511, 4.588,
          1521, 4.122, 1751, 5.063, 1752, 4.588, 1753, 5.294, 1754, 5.294, 1755,
          5.294, 1756, 5.294, 1757, 5.294, 1758, 5.294, 1759, 5.294, 1760,
          5.294,
        ],
      ],
      ["title/components/UserProfileComponent.html", [59, 0.359, 167, 0.936]],
      [
        "body/components/UserProfileComponent.html",
        [
          0, 0.051, 3, 0.058, 4, 0.058, 5, 0.032, 7, 0.162, 8, 0.499, 10, 1.778,
          16, 0.699, 17, 1.321, 19, 0.799, 20, 0.016, 21, 0.673, 22, 0.79, 23,
          0.649, 25, 1.146, 29, 0.3, 31, 1.146, 33, 0.058, 34, 0.956, 35, 0.388,
          36, 1.775, 40, 0.699, 41, 1.009, 44, 1.341, 45, 0.989, 46, 1.29, 57,
          0.005, 58, 0.005, 59, 0.305, 60, 0.359, 61, 0.714, 62, 0.437, 63,
          0.437, 64, 0.437, 65, 0.437, 68, 0.437, 69, 1.909, 70, 1.63, 71,
          1.183, 72, 0.42, 73, 0.686, 75, 0.686, 77, 0.276, 78, 0.666, 79,
          1.348, 80, 2.175, 81, 2.392, 82, 2.37, 83, 2.302, 84, 1.187, 85,
          2.088, 86, 2.123, 87, 1.081, 88, 2.71, 89, 2.079, 90, 2.005, 91, 2.26,
          92, 1.992, 93, 0.734, 94, 1.992, 95, 1.992, 96, 2.224, 97, 1.702, 98,
          1.752, 99, 2.019, 100, 1.476, 103, 1.978, 104, 1.992, 105, 1.702, 106,
          2.379, 107, 2.379, 108, 1.589, 109, 1.476, 112, 1.992, 114, 2.26, 115,
          2.26, 116, 0.987, 117, 0.699, 118, 0.773, 119, 0.437, 120, 0.714, 121,
          0.743, 122, 0.437, 123, 1.141, 124, 0.437, 125, 0.743, 126, 0.373,
          127, 0.437, 128, 0.373, 129, 0.437, 130, 0.373, 131, 0.437, 132,
          0.359, 133, 0.359, 134, 0.743, 135, 0.373, 136, 0.373, 137, 0.42, 138,
          0.437, 139, 0.359, 140, 0.373, 141, 0.218, 142, 0.437, 143, 0.359,
          144, 0.373, 145, 0.437, 146, 0.373, 147, 0.437, 148, 0.359, 149,
          0.437, 150, 0.359, 151, 0.437, 152, 0.359, 153, 0.437, 154, 0.373,
          155, 0.437, 156, 0.437, 157, 0.359, 158, 0.437, 159, 0.437, 160,
          0.373, 161, 0.437, 162, 0.359, 163, 0.228, 164, 0.437, 165, 0.373,
          166, 0.437, 167, 0.937, 168, 0.437, 169, 0.359, 170, 0.437, 171,
          0.359, 172, 0.437, 173, 0.437, 191, 0.608, 208, 0.634, 210, 2.158,
          214, 1.065, 218, 1.314, 220, 0.582, 221, 0.437, 222, 0.513, 223,
          1.081, 229, 0.52, 230, 1.917, 231, 1.397, 242, 1.344, 243, 0.817, 245,
          2.133, 251, 1.471, 254, 1.235, 255, 1.39, 256, 0.866, 266, 1.065, 278,
          1.662, 305, 0.666, 342, 2.358, 349, 0.734, 351, 0.699, 352, 2.621,
          357, 2.358, 358, 0.921, 376, 1.74, 382, 0.699, 383, 0.558, 384, 0.666,
          386, 4.84, 416, 0.773, 422, 0.817, 467, 3.522, 471, 1.825, 492, 0.636,
          494, 0.817, 495, 1.065, 496, 2.364, 497, 1.248, 498, 0.921, 499,
          2.272, 500, 2.272, 504, 2.223, 505, 2.26, 508, 1.471, 520, 2.185, 524,
          1.065, 525, 2.931, 531, 1.815, 534, 0.636, 535, 0.866, 537, 0.921,
          546, 3.115, 553, 1.825, 559, 0.773, 561, 2.198, 562, 2.041, 564,
          1.294, 565, 1.065, 571, 2.753, 574, 1.825, 575, 2.024, 576, 1.662,
          579, 1.917, 580, 1.713, 582, 2.044, 587, 2.576, 588, 1.471, 589,
          1.248, 593, 1.548, 598, 1.548, 601, 1.825, 606, 2.368, 630, 2.272,
          633, 0.817, 665, 1.471, 666, 1.565, 671, 2.198, 672, 1.809, 678,
          2.866, 680, 0.866, 681, 0.817, 682, 1.976, 687, 1.918, 690, 1.976,
          692, 0.866, 705, 2.866, 706, 1.163, 716, 0.987, 717, 0.734, 718,
          1.163, 719, 2.916, 720, 2.088, 721, 2.024, 722, 1.565, 729, 1.409,
          730, 1.676, 731, 1.809, 732, 3.036, 734, 3.036, 739, 0.921, 742,
          2.041, 750, 1.248, 761, 3.786, 762, 3.786, 766, 3.379, 770, 3.379,
          830, 1.294, 831, 0.921, 842, 2.866, 852, 1.294, 861, 1.917, 865,
          2.198, 866, 2.198, 880, 1.163, 882, 2.198, 883, 2.866, 884, 0.921,
          887, 1.294, 895, 1.065, 897, 1.565, 901, 1.294, 904, 0.921, 958,
          1.163, 996, 0.734, 1015, 0.987, 1018, 0.987, 1056, 2.575, 1057, 2.886,
          1058, 2.041, 1064, 1.976, 1065, 1.809, 1066, 1.976, 1070, 1.065, 1108,
          1.976, 1112, 2.575, 1135, 1.976, 1189, 1.294, 1205, 3.944, 1232,
          0.987, 1240, 1.065, 1265, 1.065, 1321, 1.294, 1375, 2.866, 1398,
          1.294, 1399, 1.294, 1400, 1.294, 1401, 1.294, 1422, 3.379, 1437,
          1.809, 1447, 0.987, 1467, 1.294, 1469, 1.163, 1470, 2.198, 1478,
          2.575, 1480, 1.163, 1729, 1.163, 1747, 3.036, 1761, 4.84, 1762, 1.294,
          1763, 3.307, 1764, 2.537, 1765, 3.307, 1766, 3.899, 1767, 3.899, 1768,
          3.307, 1769, 3.307, 1770, 2.866, 1771, 3.307, 1772, 3.899, 1773,
          3.899, 1774, 3.899, 1775, 2.537, 1776, 2.537, 1777, 3.899, 1778,
          3.899, 1779, 3.307, 1780, 3.307, 1781, 2.537, 1782, 1.493, 1783,
          1.493, 1784, 1.493, 1785, 1.493, 1786, 1.493, 1787, 1.493, 1788,
          1.493, 1789, 2.537, 1790, 1.493, 1791, 2.537, 1792, 1.493, 1793,
          1.493, 1794, 1.493, 1795, 1.493, 1796, 1.493, 1797, 1.493, 1798,
          1.493, 1799, 5.065, 1800, 1.493, 1801, 1.493, 1802, 1.493, 1803,
          1.493, 1804, 1.493, 1805, 1.493, 1806, 1.493, 1807, 1.493, 1808,
          1.493, 1809, 2.198, 1810, 1.493, 1811, 1.493, 1812, 1.493, 1813,
          1.493, 1814, 1.493, 1815, 1.493, 1816, 1.493, 1817, 2.537, 1818,
          1.493, 1819, 1.493, 1820, 1.493, 1821, 1.493, 1822, 2.537, 1823,
          1.493, 1824, 1.493, 1825, 1.493, 1826, 1.493, 1827, 1.493, 1828,
          1.493, 1829, 1.493, 1830, 2.537, 1831, 1.493, 1832, 1.493, 1833,
          1.493, 1834, 1.493, 1835, 1.493, 1836, 1.294, 1837, 1.294, 1838,
          1.493, 1839, 1.493, 1840, 1.493, 1841, 1.493, 1842, 1.493, 1843,
          2.537, 1844, 3.899, 1845, 2.198, 1846, 3.899, 1847, 2.537, 1848,
          3.307, 1849, 1.493, 1850, 2.198, 1851, 3.899, 1852, 1.493, 1853,
          1.493, 1854, 1.493, 1855, 1.493, 1856, 1.493, 1857, 1.493, 1858,
          2.537, 1859, 2.537, 1860, 1.493, 1861, 2.537, 1862, 3.307, 1863,
          1.493, 1864, 1.493, 1865, 2.537, 1866, 2.537, 1867, 1.493, 1868,
          2.537, 1869, 1.493, 1870, 2.537, 1871, 1.493, 1872, 1.493, 1873,
          1.493, 1874, 1.493, 1875, 1.493, 1876, 1.493, 1877, 1.493, 1878,
          2.537, 1879, 1.493, 1880, 1.493, 1881, 2.537, 1882, 1.493, 1883,
          1.493, 1884, 1.493, 1885, 1.493,
        ],
      ],
      ["title/modules/UserProfileModule.html", [174, 1.587, 373, 2.574]],
      [
        "body/modules/UserProfileModule.html",
        [
          0, 0.18, 3, 0.203, 4, 0.203, 5, 0.114, 20, 0.016, 29, 0.409, 31,
          0.989, 33, 0.203, 57, 0.012, 58, 0.012, 77, 0.57, 163, 0.798, 167,
          1.838, 176, 1.877, 177, 2.315, 182, 2.632, 183, 1.958, 185, 2.753,
          186, 3.023, 187, 2.632, 190, 3.533, 191, 2.135, 192, 3.023, 193,
          2.452, 194, 3.986, 195, 2.865, 196, 3.232, 201, 2.882, 220, 2.043,
          278, 3.259, 373, 5.246, 386, 3.461, 416, 2.713, 454, 4.606, 462, 4.54,
          509, 3.579, 758, 3.037, 1761, 3.461, 1886, 4.54, 1887, 4.54, 1888,
          5.239, 1889, 5.239, 1890, 5.239,
        ],
      ],
      [
        "title/components/UserRegistrationComponent.html",
        [59, 0.359, 169, 0.936],
      ],
      [
        "body/components/UserRegistrationComponent.html",
        [
          0, 0.086, 3, 0.097, 4, 0.097, 5, 0.054, 7, 0.272, 8, 0.757, 10, 1.376,
          17, 1.273, 19, 0.511, 20, 0.016, 21, 0.835, 22, 0.721, 23, 0.415, 25,
          0.887, 29, 0.328, 31, 1.285, 33, 0.097, 34, 0.887, 35, 0.649, 36,
          0.933, 41, 1.319, 44, 0.858, 45, 2.228, 49, 1.834, 57, 0.007, 58,
          0.007, 59, 0.433, 60, 0.6, 61, 1.084, 62, 0.731, 63, 0.731, 64, 0.731,
          65, 0.731, 68, 0.731, 69, 2.073, 70, 1.77, 71, 1.268, 72, 0.702, 73,
          1.042, 75, 1.042, 77, 0.272, 78, 1.114, 79, 2.154, 80, 2.163, 81,
          2.34, 83, 2.163, 85, 1.617, 86, 1.221, 87, 1.064, 88, 2.098, 89,
          1.502, 90, 1.745, 91, 2.098, 92, 0.933, 93, 1.228, 94, 1.757, 95,
          1.439, 96, 2.163, 97, 1.894, 98, 1.74, 100, 1.114, 103, 1.617, 104,
          1.439, 105, 1.38, 112, 0.933, 114, 1.719, 115, 1.719, 117, 2.673, 118,
          2.958, 119, 0.731, 120, 1.084, 121, 1.127, 122, 0.731, 123, 1.547,
          124, 0.731, 125, 1.127, 126, 0.624, 127, 0.731, 128, 0.624, 129,
          0.731, 130, 0.624, 131, 0.731, 132, 0.6, 133, 0.6, 134, 1.127, 135,
          0.624, 136, 0.624, 137, 0.702, 138, 0.731, 139, 0.6, 140, 1.175, 141,
          0.364, 142, 0.731, 143, 0.6, 144, 0.624, 145, 0.731, 146, 0.624, 147,
          0.731, 148, 0.6, 149, 0.731, 150, 0.6, 151, 0.731, 152, 0.6, 153,
          0.731, 154, 0.624, 155, 0.731, 156, 0.731, 157, 0.6, 158, 0.731, 159,
          0.731, 160, 0.624, 161, 0.731, 162, 0.6, 163, 0.38, 164, 0.731, 165,
          0.624, 166, 0.731, 167, 0.6, 168, 0.731, 169, 1.27, 170, 0.731, 171,
          0.6, 172, 0.731, 173, 0.731, 208, 0.963, 210, 2.68, 218, 1.293, 220,
          0.974, 229, 0.789, 231, 1.685, 242, 1.339, 254, 1.001, 255, 1.127,
          278, 2.252, 285, 4.116, 305, 2.359, 349, 1.228, 351, 1.168, 352,
          2.599, 382, 1.168, 383, 0.933, 384, 1.114, 394, 1.064, 414, 4.395,
          416, 1.293, 431, 1.168, 465, 2.999, 466, 1.78, 471, 2.825, 481, 1.944,
          491, 1.944, 492, 1.641, 494, 2.107, 496, 0.933, 497, 1.228, 498,
          1.541, 531, 0.895, 534, 1.064, 542, 3.863, 553, 1.803, 559, 1.995,
          575, 2.952, 576, 2.68, 577, 1.541, 579, 1.447, 580, 1.293, 589, 1.228,
          598, 2.201, 606, 2.901, 665, 2.233, 687, 2.599, 716, 1.649, 717,
          1.228, 719, 2.107, 720, 1.324, 721, 2.004, 722, 1.541, 726, 1.293,
          729, 1.064, 735, 1.78, 736, 1.78, 737, 1.78, 738, 1.78, 739, 2.901,
          740, 2.377, 750, 1.228, 752, 2.747, 753, 1.78, 780, 2.809, 832, 1.541,
          833, 1.541, 834, 1.541, 835, 2.377, 836, 1.541, 837, 1.541, 838,
          1.541, 895, 3.353, 1057, 2.545, 1058, 2.377, 1064, 2.999, 1065, 2.747,
          1066, 2.999, 1070, 2.747, 1083, 4.075, 1084, 4.95, 1093, 4.075, 1096,
          2.999, 1097, 4.075, 1100, 3.338, 1101, 3.338, 1112, 2.999, 1113,
          2.999, 1114, 2.164, 1115, 3.662, 1116, 1.944, 1117, 2.747, 1118,
          2.164, 1119, 2.164, 1120, 2.164, 1121, 2.164, 1122, 1.944, 1123,
          1.944, 1124, 1.944, 1125, 2.999, 1126, 2.545, 1127, 2.164, 1265,
          2.747, 1605, 2.164, 1729, 1.944, 1761, 4.705, 1770, 4.075, 1845,
          3.338, 1850, 2.164, 1891, 2.164, 1892, 3.852, 1893, 4.702, 1894,
          5.286, 1895, 5.286, 1896, 2.497, 1897, 4.702, 1898, 3.852, 1899,
          3.852, 1900, 2.497, 1901, 2.497, 1902, 2.497, 1903, 2.497, 1904,
          2.497, 1905, 2.497, 1906, 2.497, 1907, 2.497, 1908, 2.497, 1909,
          2.497, 1910, 3.852, 1911, 2.497, 1912, 2.497, 1913, 2.497, 1914,
          2.497, 1915, 2.497, 1916, 2.497, 1917, 3.852, 1918, 2.497, 1919,
          2.497, 1920, 2.164, 1921, 2.497,
        ],
      ],
      ["title/modules/UserRegistrationModule.html", [174, 1.587, 374, 2.574]],
      [
        "body/modules/UserRegistrationModule.html",
        [
          0, 0.179, 3, 0.201, 4, 0.201, 5, 0.113, 20, 0.016, 29, 0.408, 31,
          0.982, 33, 0.201, 57, 0.012, 58, 0.012, 77, 0.566, 163, 0.793, 169,
          1.835, 176, 1.864, 177, 2.305, 182, 2.621, 183, 1.944, 185, 2.741,
          186, 3.01, 187, 2.621, 190, 3.518, 191, 2.12, 192, 3.01, 193, 2.435,
          195, 2.845, 201, 2.87, 278, 3.253, 374, 5.24, 379, 5.009, 380, 3.71,
          394, 2.217, 414, 3.21, 416, 2.694, 429, 4.249, 431, 2.435, 463, 4.508,
          509, 3.573, 758, 3.016, 780, 3.163, 1761, 3.437, 1922, 4.508, 1923,
          4.508, 1924, 5.203, 1925, 5.203, 1926, 5.203,
        ],
      ],
      ["title/components/UsersComponent.html", [59, 0.359, 171, 0.936]],
      [
        "body/components/UsersComponent.html",
        [
          0, 0.11, 3, 0.124, 4, 0.124, 5, 0.069, 7, 0.347, 8, 0.911, 10, 1.595,
          17, 1.266, 19, 1.116, 20, 0.016, 21, 0.928, 22, 0.758, 23, 0.906, 25,
          1.028, 29, 0.331, 31, 1.288, 33, 0.124, 34, 0.603, 35, 1.72, 44,
          1.592, 52, 4.131, 57, 0.009, 58, 0.009, 59, 0.502, 60, 0.767, 61,
          1.303, 62, 0.935, 63, 0.935, 64, 0.935, 65, 0.935, 68, 0.935, 69,
          2.132, 70, 1.821, 71, 1.552, 72, 0.898, 73, 1.252, 75, 1.252, 77,
          0.347, 78, 1.425, 86, 1.894, 90, 1.973, 103, 1.592, 105, 1.659, 119,
          0.935, 120, 1.303, 121, 1.355, 122, 0.935, 123, 1.749, 124, 0.935,
          125, 1.355, 126, 0.798, 127, 0.935, 128, 0.798, 129, 0.935, 130,
          0.798, 131, 0.935, 132, 0.767, 133, 0.767, 134, 1.355, 135, 0.798,
          136, 0.798, 137, 0.898, 138, 0.935, 139, 0.767, 140, 0.798, 141,
          0.465, 142, 0.935, 143, 0.767, 144, 0.798, 145, 0.935, 146, 0.798,
          147, 0.935, 148, 0.767, 149, 0.935, 150, 0.767, 151, 0.935, 152,
          0.767, 153, 0.935, 154, 0.798, 155, 0.935, 156, 0.935, 157, 0.767,
          158, 0.935, 159, 0.935, 160, 0.798, 161, 0.935, 162, 0.767, 163,
          0.487, 164, 0.935, 165, 0.798, 166, 0.935, 167, 0.767, 168, 0.935,
          169, 0.767, 170, 0.935, 171, 1.436, 172, 0.935, 173, 0.935, 181,
          3.095, 189, 2.277, 208, 1.158, 221, 0.935, 222, 1.098, 223, 1.973,
          229, 0.948, 231, 1.659, 233, 4.013, 236, 4.013, 241, 3.606, 242,
          1.493, 245, 2.533, 252, 3.606, 254, 1.554, 255, 1.749, 305, 2.431,
          312, 1.97, 352, 2.277, 382, 1.494, 383, 1.193, 384, 1.425, 471, 1.494,
          496, 1.193, 499, 1.973, 500, 1.973, 504, 2.167, 508, 1.851, 531,
          1.659, 581, 2.684, 582, 2.167, 593, 2.55, 601, 2.797, 615, 0.973, 621,
          1.97, 630, 1.361, 687, 2.939, 719, 2.533, 726, 1.654, 861, 2.684, 904,
          1.97, 946, 3.059, 994, 3.362, 996, 1.57, 1000, 2.277, 1001, 4.718,
          1002, 4.013, 1003, 4.722, 1004, 4.722, 1005, 4.013, 1006, 4.243, 1007,
          2.767, 1008, 4.013, 1009, 2.767, 1010, 2.767, 1011, 2.767, 1012,
          2.767, 1013, 4.013, 1014, 3.606, 1015, 2.11, 1016, 2.767, 1017, 2.767,
          1018, 2.11, 1131, 3.059, 1447, 2.11, 1469, 4.243, 1474, 2.767, 1475,
          2.767, 1476, 4.013, 1477, 2.487, 1478, 3.606, 1479, 2.767, 1480,
          2.487, 1481, 2.767, 1711, 4.013, 1712, 4.013, 1713, 4.013, 1927,
          3.193, 1928, 4.631, 1929, 3.193, 1930, 3.193, 1931, 3.193, 1932,
          3.193, 1933, 3.193, 1934, 3.193,
        ],
      ],
      ["title/coverage.html", [1935, 4.617]],
      [
        "body/coverage.html",
        [
          0, 0.231, 1, 2.364, 5, 0.066, 6, 2.631, 20, 0.016, 22, 0.348, 31,
          0.573, 46, 1.184, 57, 0.008, 58, 0.008, 59, 0.718, 60, 0.729, 66,
          2.364, 67, 2.631, 70, 0.701, 108, 3.357, 112, 1.134, 126, 0.759, 128,
          0.759, 130, 0.759, 132, 0.729, 135, 0.759, 136, 0.759, 139, 0.729,
          141, 0.771, 143, 0.729, 144, 0.759, 146, 0.759, 148, 0.729, 150,
          0.729, 152, 0.729, 154, 0.759, 157, 0.729, 160, 0.759, 162, 0.729,
          165, 0.759, 167, 0.729, 169, 0.729, 171, 0.729, 181, 1.572, 198,
          3.496, 202, 3.475, 203, 2.005, 205, 2.631, 206, 2.631, 210, 1.294,
          219, 2.649, 221, 0.888, 228, 2.631, 278, 1.294, 279, 2.631, 313,
          2.005, 319, 1.184, 346, 2.631, 375, 1.76, 376, 1.355, 377, 3.475, 386,
          2.005, 390, 2.005, 396, 2.005, 400, 2.364, 414, 1.873, 418, 2.005,
          420, 2.165, 436, 2.005, 444, 2.364, 476, 2.631, 477, 2.631, 482,
          2.631, 515, 2.631, 591, 3.774, 592, 3.774, 608, 2.165, 610, 1.66, 615,
          2.143, 620, 2.165, 642, 2.005, 646, 2.631, 659, 2.631, 660, 2.364,
          661, 2.631, 673, 2.364, 674, 2.631, 720, 1.044, 731, 2.165, 759,
          2.631, 914, 2.631, 915, 2.631, 948, 3.475, 949, 2.005, 950, 2.631,
          959, 2.364, 960, 4.121, 968, 2.364, 970, 2.005, 972, 2.364, 973,
          4.121, 979, 2.364, 981, 2.364, 982, 4.121, 985, 2.364, 988, 2.165,
          989, 3.475, 994, 2.754, 995, 4.121, 997, 2.364, 1000, 3.774, 1001,
          2.165, 1019, 2.364, 1020, 2.631, 1030, 2.364, 1031, 2.364, 1042,
          2.631, 1080, 2.631, 1144, 2.631, 1156, 1.873, 1254, 2.364, 1255,
          2.631, 1272, 2.631, 1281, 2.631, 1282, 2.631, 1359, 2.364, 1360,
          2.631, 1459, 2.631, 1477, 2.364, 1482, 2.364, 1483, 2.631, 1548,
          2.631, 1584, 2.364, 1585, 2.631, 1591, 2.364, 1592, 2.631, 1620,
          2.631, 1642, 2.631, 1655, 2.364, 1656, 2.631, 1676, 2.364, 1688,
          2.364, 1738, 2.631, 1751, 2.364, 1752, 2.631, 1761, 2.948, 1762,
          2.631, 1891, 2.631, 1935, 2.631, 1936, 3.036, 1937, 3.036, 1938,
          3.036, 1939, 6.719, 1940, 3.867, 1941, 8.017, 1942, 2.631, 1943,
          8.047, 1944, 5.368, 1945, 2.631, 1946, 2.631, 1947, 2.631, 1948,
          3.036, 1949, 2.631, 1950, 2.165, 1951, 2.631, 1952, 2.631, 1953,
          2.631, 1954, 6.5, 1955, 5.292, 1956, 5.292, 1957, 3.036, 1958, 5.056,
          1959, 2.631, 1960, 2.364, 1961, 5.292, 1962, 5.834, 1963, 4.463, 1964,
          4.463, 1965, 2.631, 1966, 2.165, 1967, 4.463, 1968, 4.463, 1969,
          3.036, 1970, 3.036, 1971, 3.036, 1972, 3.036, 1973, 3.036, 1974,
          3.036, 1975, 2.631, 1976, 3.475, 1977, 2.631, 1978, 3.036, 1979,
          2.631, 1980, 2.631, 1981, 3.867, 1982, 2.631, 1983, 2.631, 1984,
          3.036,
        ],
      ],
      ["title/dependencies.html", [177, 1.68, 1985, 2.815]],
      [
        "body/dependencies.html",
        [
          20, 0.016, 30, 3.529, 57, 0.012, 58, 0.012, 177, 1.874, 276, 2.572,
          966, 3.455, 1686, 4.532, 1719, 5.592, 1950, 4.601, 1966, 4.601, 1986,
          5.23, 1987, 5.23, 1988, 5.23, 1989, 6.453, 1990, 5.23, 1991, 5.23,
          1992, 5.23, 1993, 5.23, 1994, 6.453, 1995, 5.23, 1996, 5.23, 1997,
          6.453, 1998, 5.23, 1999, 5.23, 2000, 5.23, 2001, 6.453, 2002, 5.23,
          2003, 6.999, 2004, 5.23, 2005, 5.23, 2006, 5.23, 2007, 6.453, 2008,
          5.23, 2009, 5.23, 2010, 5.23, 2011, 5.23, 2012, 5.23, 2013, 5.23,
          2014, 4.532, 2015, 5.23, 2016, 5.23, 2017, 5.23, 2018, 5.23, 2019,
          5.23, 2020, 5.23, 2021, 5.23, 2022, 5.23, 2023, 5.23, 2024, 5.23,
          2025, 4.532, 2026, 5.23, 2027, 5.23, 2028, 4.532, 2029, 5.23, 2030,
          5.23, 2031, 5.23, 2032, 5.592, 2033, 5.23, 2034, 5.23, 2035, 5.23,
          2036, 5.23, 2037, 5.23, 2038, 4.532, 2039, 5.23, 2040, 5.23, 2041,
          5.23,
        ],
      ],
      ["title/miscellaneous/functions.html", [2042, 2.316, 2043, 4.063]],
      [
        "body/miscellaneous/functions.html",
        [
          5, 0.154, 7, 0.666, 15, 3.549, 16, 3.319, 19, 1.254, 20, 0.015, 21,
          0.813, 22, 0.702, 23, 1.018, 25, 1.156, 57, 0.013, 58, 0.013, 531,
          2.194, 1031, 5.522, 1039, 5.306, 1944, 4.768, 2042, 4.366, 2043,
          5.306, 2044, 5.306,
        ],
      ],
      ["title/index.html", [7, 0.353, 2045, 3.248, 2046, 3.248]],
      [
        "body/index.html",
        [
          2, 1.967, 5, 0.114, 9, 2.077, 17, 1.085, 20, 0.012, 21, 0.695, 31,
          1.131, 35, 1.988, 51, 2.708, 57, 0.01, 58, 0.01, 70, 1.688, 71, 0.843,
          95, 1.419, 140, 0.949, 177, 1.361, 183, 1.419, 231, 1.361, 260, 2.201,
          277, 2.343, 305, 2.336, 319, 2.042, 342, 2.708, 383, 1.419, 384,
          2.881, 455, 3.459, 465, 4.077, 466, 4.604, 467, 3.459, 469, 4.077,
          471, 1.777, 589, 3.175, 598, 1.777, 610, 2.863, 633, 3.705, 717,
          2.946, 732, 2.957, 741, 2.708, 884, 3.696, 957, 3.291, 967, 2.343,
          1018, 2.509, 1230, 2.708, 1263, 2.957, 1356, 3.291, 1432, 4.537, 1447,
          3.459, 1521, 2.957, 1608, 3.291, 1609, 3.291, 1621, 3.291, 1747,
          2.957, 1836, 4.537, 1837, 3.291, 1920, 5.87, 1950, 2.708, 1960, 4.665,
          1966, 2.708, 1976, 2.957, 2038, 3.291, 2047, 3.798, 2048, 3.798, 2049,
          5.235, 2050, 3.798, 2051, 3.798, 2052, 3.798, 2053, 3.798, 2054,
          5.192, 2055, 5.235, 2056, 3.798, 2057, 4.537, 2058, 3.798, 2059,
          3.798, 2060, 3.798, 2061, 5.235, 2062, 3.798, 2063, 3.798, 2064,
          3.798, 2065, 3.798, 2066, 3.798, 2067, 3.798, 2068, 4.537, 2069,
          3.798, 2070, 3.798, 2071, 3.798, 2072, 3.798, 2073, 4.537, 2074,
          6.773, 2075, 3.798, 2076, 5.991, 2077, 3.798, 2078, 3.291, 2079,
          3.291, 2080, 3.291, 2081, 3.291, 2082, 3.798, 2083, 3.798, 2084,
          3.798, 2085, 3.798, 2086, 3.798, 2087, 3.798, 2088, 3.291, 2089,
          3.798, 2090, 5.235, 2091, 3.798, 2092, 3.798, 2093, 3.798, 2094,
          3.798, 2095, 5.235, 2096, 3.798, 2097, 3.798, 2098, 7.509, 2099,
          6.457, 2100, 3.798, 2101, 3.798, 2102, 5.235, 2103, 3.798, 2104,
          4.537, 2105, 5.235, 2106, 3.798, 2107, 3.798, 2108, 4.537, 2109,
          6.457, 2110, 3.798, 2111, 3.798, 2112, 6.457, 2113, 3.798, 2114,
          3.798, 2115, 3.798, 2116, 3.798, 2117, 3.798, 2118, 7.002, 2119,
          3.798, 2120, 3.798, 2121, 3.798, 2122, 3.798, 2123, 3.798, 2124,
          3.798, 2125, 3.798, 2126, 3.798, 2127, 3.798, 2128, 3.798, 2129,
          3.798, 2130, 3.798, 2131, 3.798, 2132, 3.798, 2133, 5.235, 2134,
          3.798, 2135, 3.798, 2136, 3.798, 2137, 3.798, 2138, 3.798, 2139,
          5.235, 2140, 3.798, 2141, 4.077, 2142, 5.991, 2143, 3.798, 2144,
          3.798, 2145, 3.798, 2146, 5.235, 2147, 3.798, 2148, 5.235, 2149,
          3.798, 2150, 5.235, 2151, 3.798, 2152, 3.798, 2153, 3.798, 2154,
          5.235, 2155, 3.798, 2156, 3.798, 2157, 3.798, 2158, 3.798, 2159,
          3.798, 2160, 3.798, 2161, 3.798, 2162, 3.798, 2163, 3.798, 2164,
          3.798, 2165, 3.798, 2166, 5.235, 2167, 3.798, 2168, 4.537, 2169,
          5.235, 2170, 3.798, 2171, 3.798, 2172, 3.798, 2173, 3.798, 2174,
          3.798, 2175, 3.798, 2176, 3.798, 2177, 3.798, 2178, 3.798, 2179,
          3.798, 2180, 3.798, 2181, 3.798, 2182, 3.798, 2183, 3.798, 2184,
          3.798, 2185, 3.798, 2186, 3.798, 2187, 3.798, 2188, 3.798, 2189,
          3.798, 2190, 3.798, 2191, 5.991, 2192, 3.798, 2193, 3.798, 2194,
          3.798, 2195, 3.798,
        ],
      ],
      ["title/modules.html", [176, 1.909]],
      [
        "body/modules.html",
        [
          20, 0.013, 57, 0.013, 58, 0.013, 175, 3.679, 176, 1.995, 359, 3.97,
          365, 3.679, 366, 3.679, 367, 3.679, 368, 3.679, 369, 3.679, 370,
          3.679, 371, 3.679, 372, 3.679, 373, 3.679, 374, 3.679, 380, 5.778,
          509, 2.606, 654, 3.97, 1230, 3.97, 2196, 8.103, 2197, 8.103, 2198,
          8.125, 2199, 5.568,
        ],
      ],
      ["title/overview.html", [2200, 4.617]],
      [
        "body/overview.html",
        [
          2, 1.891, 20, 0.016, 57, 0.01, 58, 0.01, 60, 1.41, 61, 1.027, 126,
          1.774, 128, 1.774, 130, 1.466, 132, 1.41, 135, 1.774, 136, 1.466, 139,
          1.41, 143, 1.41, 144, 1.466, 146, 1.466, 148, 1.41, 150, 1.41, 152,
          1.41, 154, 1.466, 157, 1.41, 160, 1.466, 162, 1.41, 163, 0.556, 165,
          1.466, 167, 1.41, 169, 1.41, 171, 1.41, 175, 5.056, 176, 1.308, 177,
          1.825, 178, 3.163, 179, 3.163, 180, 3.163, 181, 3.038, 182, 2.075,
          183, 1.364, 204, 2.843, 227, 2.252, 278, 2.947, 355, 3.163, 359,
          5.801, 360, 3.163, 361, 3.163, 362, 3.163, 363, 3.163, 364, 3.163,
          365, 3.876, 366, 4.689, 367, 5.167, 368, 4.689, 369, 4.859, 370,
          4.859, 371, 4.411, 372, 4.689, 373, 4.859, 374, 4.859, 375, 3.68, 376,
          2.833, 455, 2.412, 509, 3.555, 510, 3.163, 511, 3.163, 512, 3.163,
          654, 4.761, 655, 3.163, 656, 3.163, 657, 3.163, 754, 3.163, 755,
          3.163, 819, 3.163, 905, 3.163, 908, 3.163, 947, 1.795, 1075, 3.163,
          1077, 3.163, 1138, 3.163, 1141, 3.163, 1156, 3.62, 1253, 2.843, 1267,
          3.163, 1268, 3.163, 1269, 3.163, 1332, 3.163, 1455, 3.163, 1456,
          3.163, 1616, 3.163, 1618, 3.163, 1641, 3.163, 1886, 3.163, 1887,
          3.163, 1922, 3.163, 1923, 3.163, 2200, 3.163, 2201, 3.65, 2202, 3.65,
        ],
      ],
      ["title/properties.html", [229, 0.96, 1985, 2.815]],
      [
        "body/properties.html",
        [
          20, 0.015, 57, 0.013, 58, 0.013, 229, 1.224, 319, 2.331, 679, 3.465,
          884, 3.688, 2025, 5.18, 2054, 6.06, 2057, 5.18, 2068, 5.18, 2073,
          5.18, 2078, 5.18, 2079, 5.18, 2080, 5.18, 2081, 5.18, 2108, 5.18,
          2203, 5.977, 2204, 5.977, 2205, 5.977, 2206, 5.977, 2207, 5.977, 2208,
          5.977, 2209, 5.977, 2210, 5.977, 2211, 5.977, 2212, 5.977, 2213,
          5.977, 2214, 5.977,
        ],
      ],
      ["title/routes.html", [455, 3.52]],
      ["body/routes.html", [20, 0.014, 57, 0.014, 58, 0.014, 455, 4.217]],
      ["title/miscellaneous/variables.html", [2042, 2.316, 2141, 3.651]],
      [
        "body/miscellaneous/variables.html",
        [
          5, 0.102, 7, 0.273, 10, 1.131, 20, 0.016, 21, 0.333, 22, 0.895, 24,
          1.453, 30, 1.371, 31, 1.259, 34, 1, 36, 1.762, 40, 2.678, 41, 1.602,
          44, 1.329, 45, 1.839, 46, 2.066, 49, 2.922, 52, 1.453, 56, 1.547, 57,
          0.007, 58, 0.007, 70, 0.892, 71, 0.858, 83, 0.862, 133, 0.602, 140,
          0.627, 141, 0.918, 198, 1.656, 210, 1.647, 214, 1.788, 218, 2.001,
          221, 1.131, 232, 2.384, 238, 1.547, 240, 1.788, 242, 1.523, 251,
          1.453, 254, 2.059, 255, 2.296, 265, 3.269, 276, 1.9, 280, 2.755, 305,
          1.119, 313, 2.553, 317, 1.656, 319, 1.507, 333, 1.788, 334, 1.788,
          335, 1.788, 336, 1.788, 377, 1.952, 393, 2.173, 396, 2.553, 444,
          3.009, 445, 2.173, 471, 1.173, 534, 1.068, 574, 1.173, 591, 1.788,
          592, 2.755, 606, 1.068, 610, 2.113, 620, 2.755, 621, 1.547, 622,
          1.952, 623, 1.952, 624, 1.952, 630, 2.257, 642, 3.781, 679, 1.453,
          680, 1.453, 681, 1.371, 717, 3.351, 720, 1.329, 721, 1.068, 729,
          1.068, 731, 2.755, 791, 3.071, 809, 3.13, 960, 1.952, 961, 1.788, 962,
          1.788, 963, 2.384, 964, 1.656, 965, 2.384, 967, 3.269, 968, 3.671,
          969, 1.952, 970, 2.553, 971, 2.173, 973, 1.952, 974, 1.952, 975,
          1.453, 976, 1.453, 977, 1.952, 978, 1.952, 979, 3.671, 980, 2.173,
          982, 1.952, 983, 1.788, 984, 1.952, 985, 3.671, 986, 2.173, 987,
          2.173, 988, 1.788, 989, 1.952, 990, 2.173, 991, 4.086, 992, 2.173,
          993, 1.952, 995, 1.952, 996, 1.233, 997, 3.671, 998, 2.173, 999,
          2.173, 1000, 1.788, 1001, 2.755, 1030, 3.009, 1037, 3.349, 1058,
          1.547, 1115, 1.952, 1287, 2.173, 1319, 2.173, 1676, 1.952, 1688,
          3.009, 1714, 3.349, 1809, 2.173, 1940, 2.173, 1942, 3.349, 1944,
          1.952, 1945, 4.086, 1946, 3.349, 1947, 4.086, 1949, 4.086, 1950,
          3.778, 1951, 2.173, 1952, 2.173, 1953, 4.086, 1958, 2.173, 1959,
          4.086, 1960, 3.009, 1965, 2.173, 1966, 2.755, 1975, 2.173, 1976,
          4.125, 1977, 2.173, 1979, 2.173, 1980, 2.173, 1981, 2.173, 1982,
          3.349, 1983, 3.349, 2014, 2.173, 2028, 2.173, 2032, 2.173, 2042,
          1.788, 2044, 5.459, 2088, 2.173, 2104, 2.173, 2141, 1.952, 2168,
          2.173, 2215, 5.298, 2216, 2.507, 2217, 2.507, 2218, 3.864, 2219,
          3.864, 2220, 3.864, 2221, 2.507, 2222, 2.507, 2223, 3.864, 2224,
          3.864, 2225, 2.507, 2226, 3.864, 2227, 2.507, 2228, 2.507, 2229,
          2.507, 2230, 2.507, 2231, 2.507, 2232, 3.864, 2233, 2.507, 2234,
          2.507, 2235, 2.507, 2236, 2.507, 2237, 2.507, 2238, 2.507, 2239,
          2.507, 2240, 2.507, 2241, 2.507, 2242, 2.507, 2243, 2.507, 2244,
          2.507, 2245, 5.298, 2246, 2.507, 2247, 2.507, 2248, 2.507, 2249,
          2.507, 2250, 2.507, 2251, 2.507, 2252, 2.507, 2253, 2.507, 2254,
          2.507, 2255, 2.507, 2256, 2.507, 2257, 2.507, 2258, 2.507, 2259,
          2.507, 2260, 2.507, 2261, 2.507, 2262, 2.507, 2263, 2.507, 2264,
          2.507, 2265, 2.507, 2266, 2.507, 2267, 2.507, 2268, 2.507, 2269,
          2.507, 2270, 2.507, 2271, 2.507, 2272, 2.507, 2273, 2.507, 2274,
          2.507, 2275, 2.507, 2276, 2.507, 2277, 2.507, 2278, 2.507, 2279,
          3.864, 2280, 2.507, 2281, 2.507, 2282, 2.507, 2283, 2.507, 2284,
          2.507, 2285, 2.507, 2286, 2.507, 2287, 2.507, 2288, 2.507, 2289,
          2.507, 2290, 2.507, 2291, 3.864, 2292, 2.507, 2293, 2.507, 2294,
          2.507, 2295, 2.507, 2296, 2.507, 2297, 2.507, 2298, 2.507, 2299,
          2.507, 2300, 2.507, 2301, 2.507, 2302, 2.507, 2303, 2.507, 2304,
          2.507, 2305, 2.507, 2306, 2.507, 2307, 2.507,
        ],
      ],
    ],
    invertedIndex: [
      [
        "",
        {
          _index: 20,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "routes.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "0",
        {
          _index: 108,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "0.2",
        {
          _index: 1640,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "0.5.36",
        { _index: 1998, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "0.6",
        {
          _index: 566,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      ["0.6.0", { _index: 2033, title: {}, body: { "dependencies.html": {} } }],
      [
        "0.602",
        {
          _index: 1882,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "0.654",
        {
          _index: 356,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "0.8",
        {
          _index: 1863,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "0.866",
        {
          _index: 1879,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "0.8rem",
        {
          _index: 895,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/LoginComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["0/1", { _index: 1943, title: {}, body: { "coverage.html": {} } }],
      ["0/10", { _index: 1963, title: {}, body: { "coverage.html": {} } }],
      ["0/11", { _index: 1968, title: {}, body: { "coverage.html": {} } }],
      ["0/12", { _index: 1978, title: {}, body: { "coverage.html": {} } }],
      ["0/13", { _index: 1974, title: {}, body: { "coverage.html": {} } }],
      ["0/15", { _index: 1971, title: {}, body: { "coverage.html": {} } }],
      ["0/16", { _index: 1970, title: {}, body: { "coverage.html": {} } }],
      ["0/2", { _index: 1955, title: {}, body: { "coverage.html": {} } }],
      ["0/20", { _index: 1972, title: {}, body: { "coverage.html": {} } }],
      ["0/29", { _index: 1969, title: {}, body: { "coverage.html": {} } }],
      ["0/3", { _index: 1939, title: {}, body: { "coverage.html": {} } }],
      ["0/31", { _index: 1973, title: {}, body: { "coverage.html": {} } }],
      ["0/4", { _index: 1954, title: {}, body: { "coverage.html": {} } }],
      ["0/5", { _index: 1967, title: {}, body: { "coverage.html": {} } }],
      ["0/6", { _index: 1964, title: {}, body: { "coverage.html": {} } }],
      ["0/7", { _index: 1961, title: {}, body: { "coverage.html": {} } }],
      ["0/8", { _index: 1962, title: {}, body: { "coverage.html": {} } }],
      ["0/9", { _index: 1956, title: {}, body: { "coverage.html": {} } }],
      [
        "000",
        {
          _index: 1867,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      ["00813759", { _index: 2050, title: {}, body: { "index.html": {} } }],
      [
        "0px",
        {
          _index: 1883,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "1",
        {
          _index: 574,
          title: { "interfaces/IUser-1.html": {} },
          body: {
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IPost.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "classes/PostController.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "1.0.0",
        {
          _index: 2025,
          title: {},
          body: { "dependencies.html": {}, "properties.html": {} },
        },
      ],
      [
        "1.0.11",
        { _index: 2008, title: {}, body: { "dependencies.html": {} } },
      ],
      ["1.1.1", { _index: 2026, title: {}, body: { "dependencies.html": {} } }],
      [
        "1.17.3",
        { _index: 2023, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "1.17.5",
        { _index: 1995, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "1.19.2",
        { _index: 1990, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "1.20.1",
        { _index: 2013, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "1.2rem",
        {
          _index: 1117,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["1.4.7", { _index: 2002, title: {}, body: { "dependencies.html": {} } }],
      [
        "1.4rem",
        {
          _index: 577,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "1.6rem",
        {
          _index: 1355,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["1/1", { _index: 1948, title: {}, body: { "coverage.html": {} } }],
      ["1/12", { _index: 1957, title: {}, body: { "coverage.html": {} } }],
      [
        "10",
        {
          _index: 1641,
          title: {},
          body: { "components/SearchComponent.html": {}, "overview.html": {} },
        },
      ],
      [
        "10.9.1",
        { _index: 2039, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "100",
        {
          _index: 112,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "1000",
        {
          _index: 941,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "100px",
        {
          _index: 101,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "100vh",
        {
          _index: 93,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "100vw",
        {
          _index: 84,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "102",
        {
          _index: 1243,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "10px",
        {
          _index: 496,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "119",
        {
          _index: 1073,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "120px",
        {
          _index: 902,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "128",
        {
          _index: 1872,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "12px",
        {
          _index: 753,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "132",
        {
          _index: 1873,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "136",
        {
          _index: 900,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "137",
        {
          _index: 744,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      ["14", { _index: 2201, title: {}, body: { "overview.html": {} } }],
      [
        "140px",
        {
          _index: 903,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "147",
        {
          _index: 1244,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "14px",
        {
          _index: 1123,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "15px",
        {
          _index: 358,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "16.0.3",
        { _index: 2017, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "160px",
        {
          _index: 894,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "165",
        {
          _index: 1074,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "166",
        {
          _index: 745,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "16px",
        {
          _index: 1118,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "171",
        {
          _index: 747,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "174",
        {
          _index: 111,
          title: {},
          body: { "components/AdminDashboardComponent.html": {} },
        },
      ],
      [
        "180",
        {
          _index: 1615,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "184",
        {
          _index: 1870,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "186",
        {
          _index: 1069,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "1879ea",
        {
          _index: 1129,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "19",
        {
          _index: 1878,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "1900",
        {
          _index: 839,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "194",
        {
          _index: 748,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "1a4273",
        {
          _index: 1884,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "1px",
        {
          _index: 582,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "1rem",
        {
          _index: 897,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/IssueComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "2",
        {
          _index: 1332,
          title: {},
          body: { "components/NavBarComponent.html": {}, "overview.html": {} },
        },
      ],
      [
        "2,4}$/g",
        {
          _index: 1603,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "2.8.12",
        { _index: 1992, title: {}, body: { "dependencies.html": {} } },
      ],
      ["2.8.5", { _index: 2015, title: {}, body: { "dependencies.html": {} } }],
      [
        "20",
        {
          _index: 841,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "2000",
        {
          _index: 1422,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "200000",
        {
          _index: 2271,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "200px",
        {
          _index: 742,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/IssueComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      ["2020/21", { _index: 2071, title: {}, body: { "index.html": {} } }],
      [
        "205",
        {
          _index: 1236,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "20px",
        {
          _index: 89,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "210",
        {
          _index: 503,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "217",
        {
          _index: 1125,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "218",
        {
          _index: 1237,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      ["22", { _index: 2202, title: {}, body: { "overview.html": {} } }],
      ["22108480", { _index: 2053, title: {}, body: { "index.html": {} } }],
      [
        "224",
        {
          _index: 1450,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "227",
        {
          _index: 1451,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "228",
        {
          _index: 584,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "23.0.0",
        { _index: 2021, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "24",
        {
          _index: 1881,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "240px",
        {
          _index: 1862,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "2497d1",
        {
          _index: 1247,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "24px",
        {
          _index: 1346,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "25",
        {
          _index: 572,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
          },
        },
      ],
      [
        "250px",
        {
          _index: 564,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "251",
        {
          _index: 1250,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "252",
        {
          _index: 1249,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "25px",
        {
          _index: 671,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "288eb9",
        {
          _index: 1448,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "29",
        {
          _index: 1865,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "2b542c",
        {
          _index: 1479,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "2px",
        {
          _index: 109,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "2rem",
        {
          _index: 1116,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "3",
        {
          _index: 1638,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      ["3.0.2", { _index: 2011, title: {}, body: { "dependencies.html": {} } }],
      ["3.0.7", { _index: 2009, title: {}, body: { "dependencies.html": {} } }],
      [
        "30",
        {
          _index: 1639,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "3000",
        {
          _index: 1058,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "300px",
        {
          _index: 546,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "30px",
        {
          _index: 559,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "320px",
        {
          _index: 891,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "330px",
        {
          _index: 568,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "333",
        {
          _index: 581,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "350px",
        {
          _index: 561,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "37",
        {
          _index: 1875,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "39",
        {
          _index: 1876,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "3px",
        {
          _index: 501,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/IssueComponent.html": {},
          },
        },
      ],
      [
        "3s",
        {
          _index: 1343,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "4",
        {
          _index: 1809,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["4.0.0", { _index: 2034, title: {}, body: { "dependencies.html": {} } }],
      ["4.0.5", { _index: 2004, title: {}, body: { "dependencies.html": {} } }],
      [
        "4.18.2",
        { _index: 2022, title: {}, body: { "dependencies.html": {} } },
      ],
      ["4.5.3", { _index: 2036, title: {}, body: { "dependencies.html": {} } }],
      [
        "40",
        {
          _index: 1637,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "400px",
        {
          _index: 1126,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "40px",
        {
          _index: 665,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "430px",
        {
          _index: 1127,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "45000",
        {
          _index: 2273,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "450px",
        {
          _index: 563,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "4px",
        {
          _index: 105,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "5",
        {
          _index: 1253,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/SearchComponent.html": {},
            "overview.html": {},
          },
        },
      ],
      ["5.0.0", { _index: 1987, title: {}, body: { "dependencies.html": {} } }],
      ["5.0.2", { _index: 2029, title: {}, body: { "dependencies.html": {} } }],
      ["5.1.0", { _index: 2012, title: {}, body: { "dependencies.html": {} } }],
      [
        "50",
        {
          _index: 588,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "500",
        {
          _index: 1454,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "500px",
        {
          _index: 1444,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "50px",
        {
          _index: 672,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "54",
        {
          _index: 1443,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "540px",
        {
          _index: 1868,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "5697d8",
        {
          _index: 1137,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "587",
        {
          _index: 2304,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "5s",
        {
          _index: 670,
          title: {},
          body: { "components/ChatBoxComponent.html": {} },
        },
      ],
      ["6.1.3", { _index: 2041, title: {}, body: { "dependencies.html": {} } }],
      ["6.4.6", { _index: 2006, title: {}, body: { "dependencies.html": {} } }],
      ["6.7.0", { _index: 2027, title: {}, body: { "dependencies.html": {} } }],
      ["6.8.0", { _index: 2031, title: {}, body: { "dependencies.html": {} } }],
      [
        "600",
        {
          _index: 580,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "600px",
        {
          _index: 645,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "60deg",
        {
          _index: 1352,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "60px",
        {
          _index: 888,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "640px",
        {
          _index: 567,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "6px",
        {
          _index: 893,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "7",
        {
          _index: 355,
          title: {},
          body: { "components/AppComponent.html": {}, "overview.html": {} },
        },
      ],
      [
        "7200",
        {
          _index: 1718,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "73",
        {
          _index: 1252,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "75",
        {
          _index: 590,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "777578",
        {
          _index: 1885,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "78",
        {
          _index: 354,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "780",
        {
          _index: 1313,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "7vej8hdtdpzypuqh6w",
        {
          _index: 2307,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "8",
        {
          _index: 1738,
          title: {},
          body: { "classes/UserController.html": {}, "coverage.html": {} },
        },
      ],
      ["8,000", { _index: 2067, title: {}, body: { "index.html": {} } }],
      ["8.5.9", { _index: 2000, title: {}, body: { "dependencies.html": {} } }],
      [
        "80px",
        {
          _index: 958,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "80vh",
        {
          _index: 1354,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "8px",
        {
          _index: 904,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "8rem",
        {
          _index: 1239,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "8s",
        {
          _index: 557,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "9",
        {
          _index: 819,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "90",
        {
          _index: 1238,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "90vw",
        {
          _index: 1114,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "__description",
        {
          _index: 1446,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "__image",
        {
          _index: 1439,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "__name",
        {
          _index: 1440,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "__price",
        {
          _index: 1452,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "__tab_content",
        {
          _index: 1245,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "__tab_header",
        {
          _index: 1241,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "_api",
        {
          _index: 1375,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "_apiservice",
        {
          _index: 1087,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "_apiservice:apiservice",
        {
          _index: 1095,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "_categories",
        {
          _index: 677,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "_email",
        {
          _index: 1673,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "_file",
        {
          _index: 678,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "_flashmesgsrvc",
        {
          _index: 686,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "_flashmessagesservice",
        {
          _index: 1897,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "_flashmsgsrvc",
        {
          _index: 1779,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "_headers",
        {
          _index: 280,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        '_headers.append("authorization',
        { _index: 329, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "_httpclient",
        {
          _index: 292,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
          },
        },
      ],
      [
        "_id",
        {
          _index: 312,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IUser-1.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "_offer",
        {
          _index: 1363,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_offer.description",
        {
          _index: 1435,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_offer.price",
        {
          _index: 1436,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_offered_by",
        {
          _index: 1364,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_offered_by.name",
        {
          _index: 1431,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_postservce",
        {
          _index: 1374,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_postservice",
        {
          _index: 685,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
          },
        },
      ],
      [
        "_router",
        {
          _index: 688,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "_routeractivated",
        {
          _index: 1372,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "_state",
        {
          _index: 230,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "_user",
        {
          _index: 1709,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "_useroffers",
        {
          _index: 1765,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      ["above", { _index: 2157, title: {}, body: { "index.html": {} } }],
      [
        "absolute",
        {
          _index: 1342,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "account",
        {
          _index: 1112,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "acknowledged",
        {
          _index: 1723,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "actions",
        {
          _index: 1469,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "activatebody",
        {
          _index: 1152,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "activatebody(id",
        {
          _index: 1159,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "activatedroute",
        {
          _index: 1373,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "activatedroutesnapshot",
        {
          _index: 213,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
          },
        },
      ],
      [
        "active",
        {
          _index: 488,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "active').foreach((ele",
        {
          _index: 1209,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "actual_component",
        {
          _index: 173,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "add",
        {
          _index: 741,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/OfferComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "added",
        {
          _index: 2267,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "address",
        {
          _index: 1609,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "admin",
        {
          _index: 71,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "admin/getallusers",
        {
          _index: 264,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "admin/issues",
        {
          _index: 270,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "admin/update",
        {
          _index: 272,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "adminapi",
        {
          _index: 1005,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "admincontroller",
        {
          _index: 1,
          title: { "classes/AdminController.html": {} },
          body: { "classes/AdminController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "admindashboardcomponent",
        {
          _index: 60,
          title: { "components/AdminDashboardComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "admindashboardmodule",
        {
          _index: 175,
          title: { "modules/AdminDashboardModule.html": {} },
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "adminguard",
        {
          _index: 203,
          title: { "guards/AdminGuard.html": {} },
          body: {
            "guards/AdminGuard.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "adminservice",
        {
          _index: 181,
          title: { "injectables/AdminService.html": {} },
          body: {
            "modules/AdminDashboardModule.html": {},
            "injectables/AdminService.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      ["ads", { _index: 2171, title: {}, body: { "index.html": {} } }],
      [
        "advertisement",
        { _index: 2072, title: {}, body: { "index.html": {} } },
      ],
      [
        "afterviewchecked",
        {
          _index: 1145,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      ["afzal", { _index: 2052, title: {}, body: { "index.html": {} } }],
      [
        "again",
        {
          _index: 1066,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "al",
        {
          _index: 1914,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "alert",
        {
          _index: 352,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "align",
        {
          _index: 94,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "angular",
        {
          _index: 384,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "angular/cdk/layout",
        {
          _index: 403,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "angular/common",
        {
          _index: 191,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "angular/common/http",
        {
          _index: 258,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "angular/core",
        {
          _index: 77,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "angular/forms",
        {
          _index: 193,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "angular/material/button",
        { _index: 407, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "angular/material/icon",
        { _index: 411, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "angular/material/list",
        { _index: 413, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "angular/material/sidenav",
        { _index: 409, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "angular/material/toolbar",
        { _index: 405, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "angular/platform",
        {
          _index: 195,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/LoginModule.html": {},
            "modules/OfferModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "angular/router",
        {
          _index: 220,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "animation",
        {
          _index: 555,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      ["another", { _index: 2186, title: {}, body: { "index.html": {} } }],
      [
        "answer",
        {
          _index: 1833,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "api",
        {
          _index: 1899,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "apiservice",
        {
          _index: 278,
          title: { "injectables/ApiService.html": {} },
          body: {
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "app",
        {
          _index: 70,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "app.component",
        { _index: 398, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "app.component.html",
        {
          _index: 348,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "app.component.scss",
        {
          _index: 347,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "appcomponent",
        {
          _index: 126,
          title: { "components/AppComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "application",
        {
          _index: 2108,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "application/json",
        {
          _index: 262,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      ["applied", { _index: 2062, title: {}, body: { "index.html": {} } }],
      [
        "appmodule",
        {
          _index: 359,
          title: { "modules/AppModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "approutingmodule",
        {
          _index: 365,
          title: { "modules/AppRoutingModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "arg0",
        {
          _index: 2287,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "arg1",
        {
          _index: 2288,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "args",
        {
          _index: 1649,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "arguments",
        {
          _index: 782,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      ["around", { _index: 2066, title: {}, body: { "index.html": {} } }],
      [
        "array",
        {
          _index: 986,
          title: {},
          body: {
            "interfaces/IPost.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "array.isarray(req.body.img",
        {
          _index: 1533,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "arrow",
        {
          _index: 886,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "ascending",
        {
          _index: 38,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
          },
        },
      ],
      [
        "aspectratio:2.5",
        {
          _index: 643,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "assets/images/dummy.jpg",
        {
          _index: 1189,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "assets/sass/mixins",
        {
          _index: 78,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "assets/sass/variables.scss",
        {
          _index: 349,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/FooterComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "async",
        {
          _index: 10,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/ApiService.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "async(url",
        {
          _index: 990,
          title: {},
          body: {
            "interfaces/IRequestOptions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "auth",
        {
          _index: 2305,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "authenticate",
        {
          _index: 1657,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "authenticate(req",
        {
          _index: 1662,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "authenticateuser",
        {
          _index: 281,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/LoginComponent.html": {},
          },
        },
      ],
      [
        "authenticateuser(user",
        { _index: 293, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "authentication",
        { _index: 2138, title: {}, body: { "index.html": {} } },
      ],
      [
        "authguardservice",
        {
          _index: 418,
          title: { "guards/AuthGuardService.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["author", { _index: 2213, title: {}, body: { "properties.html": {} } }],
      [
        "authorization",
        {
          _index: 269,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "authtoken",
        {
          _index: 2293,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "auto",
        {
          _index: 1445,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "autoindex",
        {
          _index: 2266,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "available",
        {
          _index: 1230,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "classes/PostController.html": {},
            "index.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "avatar",
        {
          _index: 996,
          title: {},
          body: {
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "components/OfferComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "await",
        {
          _index: 36,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/ApiService.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IRequestOptions.html": {},
            "classes/ImageController.html": {},
            "components/LoginComponent.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "axis",
        {
          _index: 639,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "b",
        {
          _index: 1195,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "back",
        {
          _index: 766,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      ["backend", { _index: 2095, title: {}, body: { "index.html": {} } }],
      [
        "background",
        {
          _index: 85,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "backgroundcolor",
        {
          _index: 618,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "backspaceevent",
        {
          _index: 1624,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "backspaceevent(value",
        {
          _index: 1629,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "bar",
        {
          _index: 943,
          title: {},
          body: {
            "components/DashboardSidebarComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "bar'},{'name",
        {
          _index: 156,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "bar.component",
        { _index: 401, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "bar.component.html",
        {
          _index: 1284,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.scss",
        {
          _index: 1283,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts",
        {
          _index: 1282,
          title: {},
          body: { "components/NavBarComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "bar.component.ts:16",
        {
          _index: 1311,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:17",
        {
          _index: 1303,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:18",
        {
          _index: 1312,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:19",
        {
          _index: 1314,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:20",
        {
          _index: 1304,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:22",
        {
          _index: 1310,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:26",
        {
          _index: 1296,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:32",
        {
          _index: 1315,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:43",
        {
          _index: 1299,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:52",
        {
          _index: 1297,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:56",
        {
          _index: 1302,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:60",
        {
          _index: 1298,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar.component.ts:64",
        {
          _index: 1301,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "bar/nav",
        {
          _index: 400,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/NavBarComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "bars",
        {
          _index: 1341,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["base", { _index: 2089, title: {}, body: { "index.html": {} } }],
      ["based", { _index: 2179, title: {}, body: { "index.html": {} } }],
      ["basic", { _index: 2160, title: {}, body: { "index.html": {} } }],
      ["bavaria", { _index: 2065, title: {}, body: { "index.html": {} } }],
      [
        "bcrypt",
        {
          _index: 1686,
          title: {},
          body: { "classes/UserController.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "bcrypt.compare(plainpassword",
        {
          _index: 1734,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "bcrypt.gensalt(10",
        {
          _index: 1699,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "bcrypt.hash(newuser.password",
        {
          _index: 1701,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "bcrypt.hash(randomstring",
        {
          _index: 1739,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "bcrypt.hash(req.body.new_password",
        {
          _index: 1730,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["become", { _index: 2182, title: {}, body: { "index.html": {} } }],
      [
        "before",
        {
          _index: 1348,
          title: {},
          body: {
            "components/NavBarComponent.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "behavior",
        {
          _index: 549,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "black",
        {
          _index: 1135,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "blau",
        {
          _index: 507,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/FooterComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "block",
        {
          _index: 704,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "blue",
        {
          _index: 624,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "body",
        {
          _index: 276,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IRequestOptions.html": {},
            "components/IssueComponent.html": {},
            "injectables/PostService.html": {},
            "classes/UserIssueController.html": {},
            "dependencies.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "boolean",
        {
          _index: 218,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "interfaces/Error.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "interfaces/Result.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "bootstrap",
        { _index: 378, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "border",
        {
          _index: 103,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "borderwidth",
        {
          _index: 619,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "bottom",
        {
          _index: 946,
          title: {},
          body: {
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "bottom:1px",
        {
          _index: 1134,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "bottom:2px",
        {
          _index: 1136,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "box",
        {
          _index: 106,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "box'},{'name",
        {
          _index: 138,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "box.component",
        {
          _index: 913,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "box.component.html",
        {
          _index: 663,
          title: {},
          body: { "components/ChatBoxComponent.html": {} },
        },
      ],
      [
        "box.component.scss",
        {
          _index: 662,
          title: {},
          body: { "components/ChatBoxComponent.html": {} },
        },
      ],
      [
        "box.component.ts",
        {
          _index: 661,
          title: {},
          body: { "components/ChatBoxComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "box/chat",
        {
          _index: 660,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "modules/DashboardModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "box/img4.webp",
        {
          _index: 738,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "breakpointobserver",
        {
          _index: 1293,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "breakpoints",
        {
          _index: 1316,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["browse", { _index: 2198, title: {}, body: { "modules.html": {} } }],
      [
        "browser",
        {
          _index: 380,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/LoginModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "modules.html": {},
          },
        },
      ],
      [
        "browser/animations",
        {
          _index: 196,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/OfferModule.html": {},
            "modules/UserProfileModule.html": {},
          },
        },
      ],
      [
        "browseranimationsmodule",
        {
          _index: 194,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/OfferModule.html": {},
            "modules/UserProfileModule.html": {},
          },
        },
      ],
      [
        "browserlangs",
        {
          _index: 835,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "browsermodule",
        {
          _index: 379,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/LoginModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "btn",
        {
          _index: 494,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "btnclass",
        {
          _index: 486,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "bucketname",
        {
          _index: 1945,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "buf",
        {
          _index: 2246,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "buf.tostring('hex",
        {
          _index: 2248,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["build", { _index: 2112, title: {}, body: { "index.html": {} } }],
      [
        "button",
        {
          _index: 1441,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "button.component",
        { _index: 514, title: {}, body: { "modules/ButtonModule.html": {} } },
      ],
      [
        "button.component.html",
        {
          _index: 485,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "button.component.scss",
        {
          _index: 484,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "button.submit",
        {
          _index: 1067,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "buttoncomponent",
        {
          _index: 128,
          title: { "components/ButtonComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "buttonmodule",
        {
          _index: 509,
          title: { "modules/ButtonModule.html": {} },
          body: {
            "modules/ButtonModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "c",
        {
          _index: 1338,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "calc(100vh",
        {
          _index: 1234,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "calc(100vw",
        {
          _index: 889,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "callback",
        {
          _index: 1675,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "canactivate",
        {
          _index: 207,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
          },
        },
      ],
      [
        "canactivate(route",
        {
          _index: 212,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
          },
        },
      ],
      [
        "canactivate:[adminguard",
        {
          _index: 472,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "canactivate:[authguardservice",
        {
          _index: 468,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "capitalize",
        {
          _index: 578,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "carousel",
        {
          _index: 516,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "carousel'},{'name",
        {
          _index: 131,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "carousel.component.html",
        {
          _index: 518,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "carousel.component.scss",
        {
          _index: 517,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "carousel/carousel.component",
        {
          _index: 910,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "carouselcomponent",
        {
          _index: 130,
          title: { "components/CarouselComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      ["cases", { _index: 2174, title: {}, body: { "index.html": {} } }],
      [
        "catch",
        {
          _index: 729,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "catch((e",
        {
          _index: 1542,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "catch((error",
        {
          _index: 55,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "catch(error",
        {
          _index: 1842,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "categories",
        {
          _index: 610,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "category",
        {
          _index: 133,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IPost.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "category/get",
        {
          _index: 1583,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "categorychange",
        {
          _index: 919,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "categorychartcomponent",
        {
          _index: 132,
          title: { "components/CategoryChartComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "categoryselect",
        {
          _index: 920,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      ["cd", { _index: 2152, title: {}, body: { "index.html": {} } }],
      [
        "cdn.net/img/photos/new",
        {
          _index: 736,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "center",
        {
          _index: 96,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "chang",
        {
          _index: 1858,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "change",
        {
          _index: 1747,
          title: {},
          body: {
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "changecategory",
        {
          _index: 519,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "changecategory(category",
        {
          _index: 529,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "changedetectorref",
        {
          _index: 1295,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["changing", { _index: 2187, title: {}, body: { "index.html": {} } }],
      [
        "chart",
        {
          _index: 594,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "chart'},{'name",
        {
          _index: 134,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        'chart("mychart',
        {
          _index: 636,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "chart.component",
        {
          _index: 199,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/ChartModule.html": {},
          },
        },
      ],
      [
        "chart.component.html",
        {
          _index: 596,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "chart.component.scss",
        {
          _index: 595,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "chart.component.ts",
        {
          _index: 592,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "chart.component.ts:28",
        {
          _index: 611,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "chart.component.ts:29",
        {
          _index: 609,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "chart.component.ts:30",
        {
          _index: 607,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "chart.component.ts:31",
        {
          _index: 603,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "chart.component.ts:34",
        {
          _index: 605,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "chart.component.ts:48",
        {
          _index: 604,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "chart.js/auto",
        {
          _index: 614,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "chart/category",
        {
          _index: 198,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "chartcomponent",
        {
          _index: 135,
          title: { "components/ChartComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "chartmodule",
        {
          _index: 654,
          title: { "modules/ChartModule.html": {} },
          body: {
            "modules/ChartModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "chat",
        {
          _index: 137,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "chatbox",
        {
          _index: 669,
          title: {},
          body: { "components/ChatBoxComponent.html": {} },
        },
      ],
      [
        "chatboxcomponent",
        {
          _index: 136,
          title: { "components/ChatBoxComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      ["chatting", { _index: 2190, title: {}, body: { "index.html": {} } }],
      [
        "checkifmatch",
        {
          _index: 1894,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "class",
        {
          _index: 0,
          title: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/QueryResponse.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
          },
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "classes",
        {
          _index: 2,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/QueryResponse.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "index.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "classfield",
        {
          _index: 956,
          title: {},
          body: {
            "components/FooterComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "classified",
        { _index: 2205, title: {}, body: { "properties.html": {} } },
      ],
      ["classifieds", { _index: 2055, title: {}, body: { "index.html": {} } }],
      ["cli", { _index: 2087, title: {}, body: { "index.html": {} } }],
      [
        'click)="back',
        {
          _index: 882,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      ["clone", { _index: 2145, title: {}, body: { "index.html": {} } }],
      [
        "close",
        {
          _index: 1350,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "cluster_admindashboardmodule",
        {
          _index: 178,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_admindashboardmodule_declarations",
        {
          _index: 179,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_admindashboardmodule_providers",
        {
          _index: 180,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_appmodule",
        {
          _index: 360,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_bootstrap",
        {
          _index: 362,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_declarations",
        {
          _index: 363,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_imports",
        {
          _index: 364,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_appmodule_providers",
        {
          _index: 361,
          title: {},
          body: { "modules/AppModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_buttonmodule",
        {
          _index: 510,
          title: {},
          body: { "modules/ButtonModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_buttonmodule_declarations",
        {
          _index: 512,
          title: {},
          body: { "modules/ButtonModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_buttonmodule_exports",
        {
          _index: 511,
          title: {},
          body: { "modules/ButtonModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_chartmodule",
        {
          _index: 655,
          title: {},
          body: { "modules/ChartModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_chartmodule_declarations",
        {
          _index: 657,
          title: {},
          body: { "modules/ChartModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_chartmodule_exports",
        {
          _index: 656,
          title: {},
          body: { "modules/ChartModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_createnewitemmodule",
        {
          _index: 754,
          title: {},
          body: { "modules/CreateNewItemModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_createnewitemmodule_declarations",
        {
          _index: 755,
          title: {},
          body: { "modules/CreateNewItemModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_createnewitemmodule_imports",
        {
          _index: 756,
          title: {},
          body: { "modules/CreateNewItemModule.html": {} },
        },
      ],
      [
        "cluster_dashboardmodule",
        {
          _index: 905,
          title: {},
          body: { "modules/DashboardModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_dashboardmodule_declarations",
        {
          _index: 908,
          title: {},
          body: { "modules/DashboardModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_dashboardmodule_imports",
        {
          _index: 906,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "cluster_dashboardmodule_providers",
        {
          _index: 907,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "cluster_issuemodule",
        {
          _index: 1075,
          title: {},
          body: { "modules/IssueModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_issuemodule_declarations",
        {
          _index: 1077,
          title: {},
          body: { "modules/IssueModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_issuemodule_imports",
        { _index: 1076, title: {}, body: { "modules/IssueModule.html": {} } },
      ],
      [
        "cluster_loginmodule",
        {
          _index: 1138,
          title: {},
          body: { "modules/LoginModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_loginmodule_declarations",
        {
          _index: 1141,
          title: {},
          body: { "modules/LoginModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_loginmodule_imports",
        { _index: 1139, title: {}, body: { "modules/LoginModule.html": {} } },
      ],
      [
        "cluster_loginmodule_providers",
        { _index: 1140, title: {}, body: { "modules/LoginModule.html": {} } },
      ],
      [
        "cluster_messagemodule",
        {
          _index: 1267,
          title: {},
          body: { "modules/MessageModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_messagemodule_declarations",
        {
          _index: 1268,
          title: {},
          body: { "modules/MessageModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_messagemodule_providers",
        {
          _index: 1269,
          title: {},
          body: { "modules/MessageModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_offermodule",
        {
          _index: 1455,
          title: {},
          body: { "modules/OfferModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_offermodule_declarations",
        {
          _index: 1456,
          title: {},
          body: { "modules/OfferModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_resetpasswordmodule",
        {
          _index: 1616,
          title: {},
          body: { "modules/ResetPasswordModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_resetpasswordmodule_declarations",
        {
          _index: 1618,
          title: {},
          body: { "modules/ResetPasswordModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_resetpasswordmodule_imports",
        {
          _index: 1617,
          title: {},
          body: { "modules/ResetPasswordModule.html": {} },
        },
      ],
      [
        "cluster_userprofilemodule",
        {
          _index: 1886,
          title: {},
          body: { "modules/UserProfileModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_userprofilemodule_declarations",
        {
          _index: 1887,
          title: {},
          body: { "modules/UserProfileModule.html": {}, "overview.html": {} },
        },
      ],
      [
        "cluster_userprofilemodule_imports",
        {
          _index: 1889,
          title: {},
          body: { "modules/UserProfileModule.html": {} },
        },
      ],
      [
        "cluster_userprofilemodule_providers",
        {
          _index: 1888,
          title: {},
          body: { "modules/UserProfileModule.html": {} },
        },
      ],
      [
        "cluster_userregistrationmodule",
        {
          _index: 1922,
          title: {},
          body: {
            "modules/UserRegistrationModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_userregistrationmodule_declarations",
        {
          _index: 1923,
          title: {},
          body: {
            "modules/UserRegistrationModule.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "cluster_userregistrationmodule_imports",
        {
          _index: 1924,
          title: {},
          body: { "modules/UserRegistrationModule.html": {} },
        },
      ],
      [
        "cluster_userregistrationmodule_providers",
        {
          _index: 1925,
          title: {},
          body: { "modules/UserRegistrationModule.html": {} },
        },
      ],
      [
        "cmessages",
        {
          _index: 1233,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "code",
        {
          _index: 2088,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "color",
        {
          _index: 86,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "colors",
        {
          _index: 620,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "column",
        {
          _index: 115,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["command", { _index: 2156, title: {}, body: { "index.html": {} } }],
      [
        "commonmodule",
        {
          _index: 190,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "comparepassword",
        {
          _index: 1658,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "comparepassword(plainpassword",
        {
          _index: 1664,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["compile", { _index: 2158, title: {}, body: { "index.html": {} } }],
      [
        "component",
        {
          _index: 59,
          title: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "component_template",
        {
          _index: 124,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "components",
        {
          _index: 61,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "components/nav",
        { _index: 399, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "config",
        {
          _index: 1966,
          title: {},
          body: {
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "config/file_upload",
        {
          _index: 1032,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "config/mail_service",
        {
          _index: 1689,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "config:socketioconfig",
        { _index: 443, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "configuration",
        { _index: 2139, title: {}, body: { "index.html": {} } },
      ],
      [
        "configuratyions",
        { _index: 2134, title: {}, body: { "index.html": {} } },
      ],
      ["configured", { _index: 2113, title: {}, body: { "index.html": {} } }],
      [
        'confirm("are',
        {
          _index: 1834,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "connect",
        {
          _index: 1946,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "connected",
        {
          _index: 2263,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["connection", { _index: 2137, title: {}, body: { "index.html": {} } }],
      [
        "connecttimeoutms",
        {
          _index: 2270,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "console.log(error",
        {
          _index: 730,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "console.log(ondeleteresponse",
        {
          _index: 1530,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "console.log(this.datasets[0",
        {
          _index: 653,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "console.log(this.offers",
        {
          _index: 1468,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "console.log(token",
        {
          _index: 267,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "const",
        {
          _index: 34,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "constructor",
        {
          _index: 208,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "constructor(_apiservice",
        {
          _index: 1085,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "constructor(_httpclient",
        {
          _index: 290,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
          },
        },
      ],
      [
        "constructor(_postservice",
        {
          _index: 779,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "constructor(_router",
        {
          _index: 1371,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "constructor(adminapi",
        {
          _index: 1927,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "constructor(adminservice",
        {
          _index: 1461,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "constructor(api",
        {
          _index: 1896,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "constructor(breakpointobserver",
        {
          _index: 1292,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "constructor(document",
        {
          _index: 524,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "constructor(flashmessageservice",
        {
          _index: 1596,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "constructor(http",
        {
          _index: 237,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "constructor(post",
        {
          _index: 602,
          title: {},
          body: { "components/CategoryChartComponent.html": {} },
        },
      ],
      [
        "constructor(private",
        {
          _index: 224,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "injectables/MessageService.html": {},
            "components/OffersComponent.html": {},
            "injectables/SocketService.html": {},
          },
        },
      ],
      [
        "constructor(public",
        {
          _index: 936,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "constructor(router",
        {
          _index: 209,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "components/IssueComponent.html": {},
          },
        },
      ],
      [
        "constructor(socket",
        {
          _index: 1155,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "injectables/SocketService.html": {},
          },
        },
      ],
      [
        "constructor(translate",
        {
          _index: 922,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "contact",
        {
          _index: 473,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/IssueComponent.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "container",
        {
          _index: 79,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "content",
        {
          _index: 98,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "context",
        {
          _index: 1982,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["controllers", { _index: 2101, title: {}, body: { "index.html": {} } }],
      [
        "cookware",
        {
          _index: 2252,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "copy",
        {
          _index: 957,
          title: {},
          body: { "components/FooterComponent.html": {}, "index.html": {} },
        },
      ],
      [
        "cors",
        {
          _index: 2014,
          title: {},
          body: { "dependencies.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "count",
        {
          _index: 1546,
          title: {},
          body: {
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      ["course", { _index: 2125, title: {}, body: { "index.html": {} } }],
      [
        "coverage",
        {
          _index: 1935,
          title: { "coverage.html": {} },
          body: { "coverage.html": {} },
        },
      ],
      ["cp", { _index: 2147, title: {}, body: { "index.html": {} } }],
      [
        "create",
        {
          _index: 140,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "createchart",
        {
          _index: 600,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "created",
        {
          _index: 727,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "createnewitemcomponent",
        {
          _index: 139,
          title: { "components/CreateNewItemComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "createnewitemmodule",
        {
          _index: 366,
          title: { "modules/CreateNewItemModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "crimson",
        {
          _index: 508,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "crypto.randombytes(16",
        {
          _index: 2244,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "cssclass",
        {
          _index: 719,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "cta",
        {
          _index: 483,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "cta'},{'name",
        {
          _index: 129,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "cta_text",
        {
          _index: 945,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "cursor",
        {
          _index: 499,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "d3c8c8",
        {
          _index: 667,
          title: {},
          body: { "components/ChatBoxComponent.html": {} },
        },
      ],
      [
        "dadbdd",
        {
          _index: 751,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "danger",
        {
          _index: 491,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "darkred",
        {
          _index: 1481,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dashboard",
        {
          _index: 72,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dashboard'},{'name",
        {
          _index: 125,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "dashboard.component",
        {
          _index: 188,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/DashboardModule.html": {},
          },
        },
      ],
      [
        "dashboard.component.html",
        {
          _index: 76,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/DashboardComponent.html": {},
          },
        },
      ],
      [
        "dashboard.component.scss",
        {
          _index: 74,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/DashboardComponent.html": {},
          },
        },
      ],
      [
        "dashboard.component.ts",
        {
          _index: 67,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "dashboard.module",
        { _index: 439, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "dashboard.module.ts",
        {
          _index: 184,
          title: {},
          body: { "modules/AdminDashboardModule.html": {} },
        },
      ],
      [
        "dashboardcomponent",
        {
          _index: 143,
          title: { "components/DashboardComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "dashboardmodule",
        {
          _index: 367,
          title: { "modules/DashboardModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/DashboardModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "dashboardsidebarcomponent",
        {
          _index: 144,
          title: { "components/DashboardSidebarComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "data",
        {
          _index: 617,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "data.messages",
        {
          _index: 1178,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "data.post.foreach((post",
        {
          _index: 629,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "data.posts",
        {
          _index: 1467,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "data.success",
        {
          _index: 627,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
          },
        },
      ],
      [
        "data.user.avatar",
        {
          _index: 1401,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "data.user.email",
        {
          _index: 1400,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "data.user.id",
        {
          _index: 1398,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "data.user.name",
        {
          _index: 1399,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "data.users",
        {
          _index: 1010,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "database",
        {
          _index: 2104,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["databse", { _index: 2136, title: {}, body: { "index.html": {} } }],
      [
        "datasets",
        {
          _index: 597,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "date",
        {
          _index: 791,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "classes/PostController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "date(date).tolocalestring('en",
        {
          _index: 864,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "date(date.now()).getfullyear",
        {
          _index: 954,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "date.now",
        {
          _index: 1511,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserIssueController.html": {},
          },
        },
      ],
      [
        "date.parse(a.time",
        {
          _index: 1197,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "date.parse(b.time",
        {
          _index: 1196,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "db",
        {
          _index: 1697,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "dbconnect",
        {
          _index: 1942,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dburl",
        {
          _index: 1947,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "de",
        {
          _index: 833,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "declarations",
        {
          _index: 185,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "decorators",
        {
          _index: 804,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "default",
        {
          _index: 254,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["definations", { _index: 2107, title: {}, body: { "index.html": {} } }],
      [
        "defined",
        {
          _index: 17,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "deg.de/as05480/my",
        { _index: 2211, title: {}, body: { "properties.html": {} } },
      ],
      ["deggendorf", { _index: 2061, title: {}, body: { "index.html": {} } }],
      [
        "delete",
        {
          _index: 342,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "deleted",
        {
          _index: 1018,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "classes/PostController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "deleteuser",
        { _index: 282, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "deleteuser(user",
        { _index: 295, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      ["demo", { _index: 2195, title: {}, body: { "index.html": {} } }],
      [
        "dependencies",
        {
          _index: 177,
          title: { "dependencies.html": {} },
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "dependencies.html": {},
            "index.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "deps",
        { _index: 451, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "desc",
        {
          _index: 1526,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "descending",
        {
          _index: 1523,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "description",
        {
          _index: 679,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IPost.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["design", { _index: 2093, title: {}, body: { "index.html": {} } }],
      [
        "desktop",
        {
          _index: 1333,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["desse", { _index: 2047, title: {}, body: { "index.html": {} } }],
      [
        "destroy",
        {
          _index: 1484,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "destroy(req",
        {
          _index: 1490,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "destroyoffer",
        {
          _index: 1549,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "destroyoffer(id",
        {
          _index: 1552,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "destroyuser",
        {
          _index: 233,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "destroyuser(id",
        {
          _index: 241,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "detectchange",
        {
          _index: 1294,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["dev", { _index: 2151, title: {}, body: { "index.html": {} } }],
      ["development", { _index: 2127, title: {}, body: { "index.html": {} } }],
      [
        "device",
        {
          _index: 1329,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "didn't",
        {
          _index: 1748,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["different", { _index: 2166, title: {}, body: { "index.html": {} } }],
      [
        "direction",
        {
          _index: 114,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "directive",
        {
          _index: 122,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "directives",
        {
          _index: 172,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["directory", { _index: 2098, title: {}, body: { "index.html": {} } }],
      [
        "display",
        {
          _index: 80,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "displayerrormessage",
        {
          _index: 1083,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "displayimage",
        {
          _index: 1031,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "displayimage(res",
        {
          _index: 1039,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "div",
        {
          _index: 495,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/FooterComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "divider",
        {
          _index: 1130,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "doc.classlist.add",
        {
          _index: 1216,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "document",
        {
          _index: 525,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "document.getelementbyid('avatar')?.click",
        {
          _index: 1831,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "document.getelementbyid('image')?.click",
        {
          _index: 1413,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "document.getelementbyid('msg",
        {
          _index: 1174,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "document.getelementbyid('upload",
        {
          _index: 700,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "document.getelementbyid(event",
        {
          _index: 870,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "document.getelementbyid(event)?.click",
        {
          _index: 867,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "document.getelementbyid(id.tostring",
        {
          _index: 1219,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "document.queryselector('.active",
        {
          _index: 1221,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "document.queryselector('.icon",
        {
          _index: 1633,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "document.queryselectorall",
        {
          _index: 1208,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "document.queryselectorall('.active",
        {
          _index: 1211,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "document.queryselectorall('.msg')?.foreach((doc",
        {
          _index: 1215,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "documentation",
        { _index: 1936, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "doesn't",
        {
          _index: 1729,
          title: {},
          body: {
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "doesn\\'t",
        {
          _index: 1921,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "dom",
        {
          _index: 64,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "don't",
        {
          _index: 1745,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "done",
        {
          _index: 2286,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "done(err",
        {
          _index: 2290,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "done(null",
        {
          _index: 2291,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "dotenv",
        { _index: 2016, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "doughnut",
        {
          _index: 612,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      ["during", { _index: 2126, title: {}, body: { "index.html": {} } }],
      [
        "e.message",
        {
          _index: 1543,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "e3e0e5",
        {
          _index: 666,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "e7e1ea",
        {
          _index: 944,
          title: {},
          body: {
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
          },
        },
      ],
      [
        "ease",
        {
          _index: 1344,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "edit",
        {
          _index: 1447,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "editing",
        {
          _index: 1004,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ele.classlist.remove",
        {
          _index: 1210,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "electronics",
        {
          _index: 2253,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "elem",
        {
          _index: 868,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "element",
        {
          _index: 121,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "element.classlist.remove('active",
        {
          _index: 1213,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "element.scrolltop",
        {
          _index: 1175,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "element?.classlist.add('active",
        {
          _index: 1220,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "email",
        {
          _index: 305,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "emit",
        {
          _index: 1650,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "emitcategory",
        {
          _index: 523,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "en",
        {
          _index: 838,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "end",
        {
          _index: 589,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "end:number",
        {
          _index: 830,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "engine",
        {
          _index: 2239,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["english", { _index: 2194, title: {}, body: { "index.html": {} } }],
      [
        "enter",
        {
          _index: 1607,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "entry[1",
        {
          _index: 713,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      ["env", { _index: 2142, title: {}, body: { "index.html": {} } }],
      ["env.example", { _index: 2146, title: {}, body: { "index.html": {} } }],
      [
        "environment",
        {
          _index: 1976,
          title: {},
          body: {
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "environmental",
        { _index: 2140, title: {}, body: { "index.html": {} } },
      ],
      [
        "err",
        {
          _index: 2245,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "error",
        {
          _index: 720,
          title: { "interfaces/Error.html": {} },
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/Error.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Result.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "error(response",
        { _index: 1586, title: {}, body: { "classes/QueryResponse.html": {} } },
      ],
      [
        "error.message",
        {
          _index: 56,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/LoginComponent.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "error?.message",
        {
          _index: 1539,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "errormessage",
        {
          _index: 1084,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "eslint",
        { _index: 2018, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "euro",
        {
          _index: 880,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "event",
        {
          _index: 692,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/SocketService.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "event.target.files[0",
        {
          _index: 706,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "eventemitter",
        {
          _index: 527,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "evt",
        {
          _index: 845,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "exec",
        {
          _index: 39,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
          },
        },
      ],
      [
        "existingimages",
        {
          _index: 1415,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "existingimages.foreach((img",
        {
          _index: 1578,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "existingimages.push(img",
        {
          _index: 1417,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "expiresin",
        {
          _index: 1717,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "expiry",
        {
          _index: 2298,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "export",
        {
          _index: 33,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "exports",
        {
          _index: 475,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
          },
        },
      ],
      [
        "express",
        {
          _index: 30,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "dependencies.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "express.multer.file[]).map((file",
        {
          _index: 1518,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "express.router",
        {
          _index: 2292,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "extractjwt.fromauthheaderwithscheme('jwt",
        {
          _index: 2281,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "fa",
        {
          _index: 1478,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "faculties",
        {
          _index: 2079,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "false",
        {
          _index: 45,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "components/DashboardComponent.html": {},
            "classes/ImageController.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "components/NavBarComponent.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "family",
        {
          _index: 1115,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "fea470",
        {
          _index: 1866,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "feature.category",
        {
          _index: 541,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "featured",
        {
          _index: 521,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
          },
        },
      ],
      [
        "fetch(url",
        {
          _index: 335,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "fff",
        {
          _index: 87,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "field",
        {
          _index: 1605,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "fields",
        {
          _index: 718,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "file",
        {
          _index: 5,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "file.filename",
        {
          _index: 1519,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "file.name",
        { _index: 332, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "file.style.display",
        {
          _index: 703,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "file?.click",
        {
          _index: 701,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "fileinfo",
        {
          _index: 2250,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "filename",
        {
          _index: 1037,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["files", { _index: 2115, title: {}, body: { "index.html": {} } }],
      [
        "fileupload",
        {
          _index: 1772,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "fill",
        {
          _index: 716,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["filles", { _index: 2096, title: {}, body: { "index.html": {} } }],
      [
        "filtedoffer",
        {
          _index: 1853,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "filtedoffer[1",
        {
          _index: 1857,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      ["filter", { _index: 2169, title: {}, body: { "index.html": {} } }],
      [
        "filterbycarousel",
        {
          _index: 767,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "filterbycarousel(event",
        {
          _index: 786,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "filterbyprice",
        {
          _index: 768,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
          },
        },
      ],
      [
        "filterbyprice(event",
        {
          _index: 788,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "filterbyprice(value",
        {
          _index: 927,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      ["finally", { _index: 2132, title: {}, body: { "index.html": {} } }],
      ["find", { _index: 2024, title: {}, body: { "dependencies.html": {} } }],
      ["first", { _index: 2144, title: {}, body: { "index.html": {} } }],
      [
        "fit",
        {
          _index: 892,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "fixed",
        {
          _index: 1330,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "flash",
        {
          _index: 382,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "flashmessages",
        {
          _index: 1376,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "flashmessageservice",
        {
          _index: 1598,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "flashmessagesmodule",
        { _index: 381, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "flashmessagesmodule.forroot",
        { _index: 446, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "flashmessagesservice",
        {
          _index: 687,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "flashmsg",
        {
          _index: 1006,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "flex",
        {
          _index: 81,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "focus",
        {
          _index: 1133,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      ["folder", { _index: 2131, title: {}, body: { "index.html": {} } }],
      ["follewed", { _index: 2091, title: {}, body: { "index.html": {} } }],
      [
        "font",
        {
          _index: 575,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "footer",
        {
          _index: 951,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer'},{'name",
        {
          _index: 147,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "footer.component.html",
        {
          _index: 953,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footer.component.scss",
        {
          _index: 952,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "footercomponent",
        {
          _index: 146,
          title: { "components/FooterComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "for(let",
        {
          _index: 854,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "forget",
        {
          _index: 1746,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "form",
        {
          _index: 739,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "formatteddate",
        {
          _index: 769,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "formatteddate(date",
        {
          _index: 790,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "formdata",
        {
          _index: 330,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        'formdata.append("avatar',
        { _index: 331, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        'formdata.append("img',
        {
          _index: 1579,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "formdata.append('posts",
        {
          _index: 1580,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "formdata.append(key",
        {
          _index: 1571,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "formsmodule",
        {
          _index: 192,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "forward",
        {
          _index: 770,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "found",
        {
          _index: 47,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "fromevent",
        {
          _index: 828,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "fromevent(window",
        {
          _index: 823,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      ["front", { _index: 2109, title: {}, body: { "index.html": {} } }],
      ["frontend", { _index: 2129, title: {}, body: { "index.html": {} } }],
      [
        "function",
        {
          _index: 1676,
          title: {},
          body: {
            "classes/UserController.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "functions",
        {
          _index: 2043,
          title: { "miscellaneous/functions.html": {} },
          body: { "miscellaneous/functions.html": {} },
        },
      ],
      [
        "furniture",
        {
          _index: 2254,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gap",
        {
          _index: 88,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["german", { _index: 2193, title: {}, body: { "index.html": {} } }],
      [
        "getcountbycategory",
        {
          _index: 1485,
          title: {},
          body: {
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "getcountbycategory(req",
        {
          _index: 1492,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "getcountbycategory(token",
        {
          _index: 1554,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "getmessages",
        {
          _index: 1256,
          title: {},
          body: {
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
          },
        },
      ],
      [
        "getmessages(reciever",
        {
          _index: 1274,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        "getmessages(req",
        {
          _index: 1257,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "getoffers",
        {
          _index: 234,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "getoffersbyuser",
        { _index: 283, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "getoffersbyuser(token",
        { _index: 297, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "getpostbyid",
        {
          _index: 1486,
          title: {},
          body: {
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "getpostbyid(id",
        {
          _index: 1556,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "getpostbyid(req",
        {
          _index: 1494,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "getpostimage",
        {
          _index: 1021,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "getpostimage(req",
        {
          _index: 1024,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "getposts",
        {
          _index: 1487,
          title: {},
          body: {
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "getposts(req",
        {
          _index: 1496,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "getpostsbyuser",
        {
          _index: 1488,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "getpostsbyuser(req",
        {
          _index: 1498,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "getprofile",
        {
          _index: 284,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "getprofile(id",
        { _index: 299, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "getprofile(req",
        {
          _index: 1669,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "getprofilepicture",
        {
          _index: 1022,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "getprofilepicture(req",
        {
          _index: 1026,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      ["getting", { _index: 2045, title: { "index.html": {} }, body: {} }],
      [
        "getuserbyemail",
        {
          _index: 1659,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "getuserbyemail(_email",
        {
          _index: 1671,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "getuserbyid",
        {
          _index: 1660,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "getuserbyid(id",
        {
          _index: 1674,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "getusers",
        {
          _index: 11,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/AdminService.html": {},
          },
        },
      ],
      [
        "getusers(req",
        { _index: 13, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      [
        "getusers(token",
        {
          _index: 247,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "gfs",
        {
          _index: 1030,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gfs.files.findone",
        {
          _index: 1036,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "gotooffer",
        {
          _index: 771,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "gotooffer(offer",
        {
          _index: 794,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      ["graph", { _index: 2199, title: {}, body: { "modules.html": {} } }],
      [
        "gray",
        {
          _index: 901,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "green",
        {
          _index: 621,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "components/MessageComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "gridfs",
        { _index: 2003, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "gridfsbucket",
        {
          _index: 1949,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gridfsstorage",
        {
          _index: 2241,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "gridfsstream.grid",
        {
          _index: 2240,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "group",
        {
          _index: 740,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "group_index",
        {
          _index: 974,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "classes/MessageController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "grouppedmessages",
        {
          _index: 1148,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "guard",
        {
          _index: 202,
          title: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
          },
          body: { "coverage.html": {} },
        },
      ],
      [
        "guard.service",
        {
          _index: 421,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "guard.service.ts",
        {
          _index: 477,
          title: {},
          body: { "guards/AuthGuardService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "guard.service.ts:10",
        {
          _index: 479,
          title: {},
          body: { "guards/AuthGuardService.html": {} },
        },
      ],
      [
        "guard.service.ts:7",
        {
          _index: 478,
          title: {},
          body: { "guards/AuthGuardService.html": {} },
        },
      ],
      [
        "guard/adminguard.guard",
        {
          _index: 441,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "guard/adminguard.guard.ts",
        {
          _index: 206,
          title: {},
          body: { "guards/AdminGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "guard/adminguard.guard.ts:10",
        { _index: 216, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "guard/adminguard.guard.ts:7",
        { _index: 211, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "guard/auth",
        {
          _index: 420,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "guards",
        {
          _index: 204,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "h1",
        {
          _index: 350,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      ["hand/used", { _index: 2083, title: {}, body: { "index.html": {} } }],
      [
        "handleclass",
        {
          _index: 1289,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "hash",
        {
          _index: 1700,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["hashed", { _index: 2185, title: {}, body: { "index.html": {} } }],
      [
        "hashedpassword",
        {
          _index: 1665,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "hashing",
        {
          _index: 1694,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "header",
        {
          _index: 1070,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "headers",
        {
          _index: 232,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "height",
        {
          _index: 92,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "here",
        {
          _index: 1744,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "hidden",
        {
          _index: 548,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
          },
        },
      ],
      ["hochschule", { _index: 2060, title: {}, body: { "index.html": {} } }],
      ["holds", { _index: 2099, title: {}, body: { "index.html": {} } }],
      [
        "host",
        {
          _index: 2302,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "hostlistener",
        {
          _index: 827,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "hostlistener('window:resize",
        {
          _index: 805,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "hostlisteners",
        {
          _index: 777,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "hover",
        {
          _index: 504,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "html",
        {
          _index: 120,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "htmlelement",
        {
          _index: 1173,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "htmlinputelement",
        {
          _index: 869,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "http",
        {
          _index: 240,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "modules/AppModule.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "http.createserver(app",
        {
          _index: 2235,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "http://localhost:3000/user/get",
        {
          _index: 1187,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "httpclient",
        {
          _index: 238,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "httpclientmodule",
        { _index: 388, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "httploaderfactory",
        {
          _index: 444,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "https://mygit.th",
        { _index: 2210, title: {}, body: { "properties.html": {} } },
      ],
      [
        "icon",
        {
          _index: 1122,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "icon.style.display",
        {
          _index: 1634,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "id",
        {
          _index: 245,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "id).subscribe((data",
        {
          _index: 1206,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "idataset",
        {
          _index: 608,
          title: { "interfaces/IDataset.html": {} },
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["idea", { _index: 2075, title: {}, body: { "index.html": {} } }],
      [
        "identifier",
        { _index: 1937, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "if(!!file",
        {
          _index: 702,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "if(!this.issuer_email",
        {
          _index: 1052,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "if(!this.name",
        {
          _index: 1912,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "if(!value",
        {
          _index: 1635,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "if(answer",
        {
          _index: 1839,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "if(avatar",
        {
          _index: 1227,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "if(data.success",
        {
          _index: 1008,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "if(elem?.checked",
        {
          _index: 871,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "if(error",
        {
          _index: 1109,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "if(event",
        {
          _index: 876,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "if(existingimages",
        {
          _index: 1577,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "if(msg.avatar?.length",
        {
          _index: 1185,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "if(resp.success",
        {
          _index: 724,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/ResetPasswordComponent.html": {},
          },
        },
      ],
      [
        "if(this.featured.indexof(post.category",
        {
          _index: 855,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "if(this.type",
        {
          _index: 493,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "if(typeof",
        {
          _index: 1182,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "if(typeof(feature",
        {
          _index: 858,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "iissue",
        {
          _index: 959,
          title: { "interfaces/IIssue.html": {} },
          body: { "interfaces/IIssue.html": {}, "coverage.html": {} },
        },
      ],
      [
        "image",
        {
          _index: 534,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IPost.html": {},
            "classes/ImageController.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "image.not",
        {
          _index: 877,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "image/${id",
        {
          _index: 1576,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "image/${image",
        {
          _index: 539,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "image/${name",
        {
          _index: 863,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "imagecontroller",
        {
          _index: 1019,
          title: { "classes/ImageController.html": {} },
          body: { "classes/ImageController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "imagelength",
        {
          _index: 1365,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "imageurl",
        {
          _index: 520,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "imageurl(avatar",
        {
          _index: 1161,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "imageurl(image",
        {
          _index: 532,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "imageurl(name",
        {
          _index: 796,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "imessage",
        {
          _index: 972,
          title: { "interfaces/IMessage.html": {} },
          body: { "interfaces/IMessage.html": {}, "coverage.html": {} },
        },
      ],
      [
        "img",
        {
          _index: 562,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "imgurl",
        {
          _index: 1184,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "implements",
        {
          _index: 223,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "import",
        {
          _index: 29,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "imports",
        {
          _index: 201,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "include",
        {
          _index: 117,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["includes", { _index: 2102, title: {}, body: { "index.html": {} } }],
      ["including", { _index: 2135, title: {}, body: { "index.html": {} } }],
      [
        "index",
        {
          _index: 7,
          title: { "index.html": {} },
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "infinite",
        {
          _index: 558,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "info",
        {
          _index: 3,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "inherit",
        {
          _index: 570,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "initial",
        {
          _index: 1231,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "inject",
        {
          _index: 535,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "inject(document",
        {
          _index: 537,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "injectable",
        {
          _index: 219,
          title: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
          },
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "injectables",
        {
          _index: 227,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "inp",
        {
          _index: 749,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "input",
        {
          _index: 492,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "inputs",
        {
          _index: 487,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChartComponent.html": {},
          },
        },
      ],
      ["install", { _index: 2148, title: {}, body: { "index.html": {} } }],
      ["installation", { _index: 2143, title: {}, body: { "index.html": {} } }],
      [
        "instanceof",
        {
          _index: 1110,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      ["instead", { _index: 2121, title: {}, body: { "index.html": {} } }],
      [
        "instruction",
        {
          _index: 1612,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      ["interact", { _index: 2103, title: {}, body: { "index.html": {} } }],
      [
        "interface",
        {
          _index: 615,
          title: {
            "interfaces/Error.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "interfaces/Result.html": {},
          },
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/Error.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "interfaces/Result.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "interfaces",
        {
          _index: 947,
          title: {},
          body: {
            "interfaces/Error.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "interfaces/Result.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "io",
        {
          _index: 396,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/OfferComponent.html": {},
            "injectables/SocketService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ipost",
        {
          _index: 981,
          title: { "interfaces/IPost.html": {} },
          body: { "interfaces/IPost.html": {}, "coverage.html": {} },
        },
      ],
      [
        "ipv4",
        {
          _index: 2274,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "ipv6",
        {
          _index: 2277,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "irequestoptions",
        {
          _index: 988,
          title: { "interfaces/IRequestOptions.html": {} },
          body: {
            "interfaces/IRequestOptions.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "isactive",
        {
          _index: 1285,
          title: {},
          body: {
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "isadmin",
        {
          _index: 2299,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["isc", { _index: 2209, title: {}, body: { "properties.html": {} } }],
      [
        "ishandset",
        {
          _index: 1286,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "isloggedin",
        {
          _index: 1287,
          title: {},
          body: {
            "components/NavBarComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "ismatch",
        {
          _index: 1706,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "ismobile",
        {
          _index: 760,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "ismobiledevice(width",
        {
          _index: 2297,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "issue",
        {
          _index: 970,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "components/IssueComponent.html": {},
            "classes/UserIssueController.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "issue'},{'name",
        {
          _index: 149,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "issue.component",
        { _index: 1079, title: {}, body: { "modules/IssueModule.html": {} } },
      ],
      [
        "issue.component.html",
        {
          _index: 1044,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "issue.component.scss",
        {
          _index: 1043,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "issuecomponent",
        {
          _index: 148,
          title: { "components/IssueComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "issuemodule",
        {
          _index: 368,
          title: { "modules/IssueModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/IssueModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "issuer_email",
        {
          _index: 961,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "components/IssueComponent.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "issuer_name",
        {
          _index: 962,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "components/IssueComponent.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "issueschema",
        {
          _index: 968,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "item",
        {
          _index: 469,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/CreateNewItemComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "item'},{'name",
        {
          _index: 142,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "item.component",
        {
          _index: 456,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/CreateNewItemModule.html": {},
          },
        },
      ],
      [
        "item.component.html",
        {
          _index: 676,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.scss",
        {
          _index: 675,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts",
        {
          _index: 674,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "item.component.ts:15",
        {
          _index: 695,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:16",
        {
          _index: 696,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:17",
        {
          _index: 699,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:18",
        {
          _index: 697,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:19",
        {
          _index: 698,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:20",
        {
          _index: 689,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:29",
        {
          _index: 694,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:35",
        {
          _index: 691,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.component.ts:39",
        {
          _index: 693,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "item.module",
        { _index: 391, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "item.module.ts",
        {
          _index: 757,
          title: {},
          body: { "modules/CreateNewItemModule.html": {} },
        },
      ],
      [
        "item/create",
        {
          _index: 390,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "items",
        {
          _index: 95,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "iuser",
        {
          _index: 994,
          title: { "interfaces/IUser.html": {}, "interfaces/IUser-1.html": {} },
          body: {
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "json",
        {
          _index: 43,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/ApiService.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "json.parse(localstorage.getitem('user",
        {
          _index: 2295,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "json.stringify(payload",
        {
          _index: 993,
          title: {},
          body: {
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "json.stringify(response.user",
        {
          _index: 1106,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "jsonwebtoken",
        {
          _index: 1687,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "jsonwebtoken.sign",
        {
          _index: 1716,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "justify",
        {
          _index: 97,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "jwt",
        {
          _index: 1719,
          title: {},
          body: { "classes/UserController.html": {}, "dependencies.html": {} },
        },
      ],
      [
        "jwtfromrequest",
        {
          _index: 2280,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "jwtpayload",
        {
          _index: 2285,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "keepalive",
        {
          _index: 2269,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "keyframes",
        {
          _index: 586,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "keywords",
        { _index: 2207, title: {}, body: { "properties.html": {} } },
      ],
      ["kinfemichael", { _index: 2048, title: {}, body: { "index.html": {} } }],
      [
        "kinfemichaelalemu@gmail.com",
        { _index: 2214, title: {}, body: { "properties.html": {} } },
      ],
      [
        "label",
        {
          _index: 616,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "labels",
        {
          _index: 599,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "lang",
        {
          _index: 1323,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "langselect",
        {
          _index: 1336,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "language",
        {
          _index: 1356,
          title: {},
          body: { "components/NavBarComponent.html": {}, "index.html": {} },
        },
      ],
      [
        "largescreen",
        {
          _index: 560,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "layoutmodule",
        { _index: 402, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "left",
        {
          _index: 1240,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "legend",
        {
          _index: 119,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "leora.legros@ethereal.email",
        {
          _index: 2306,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["license", { _index: 2208, title: {}, body: { "properties.html": {} } }],
      ["link", { _index: 2056, title: {}, body: { "index.html": {} } }],
      [
        "listen",
        {
          _index: 1652,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "literal",
        {
          _index: 2259,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "loader",
        { _index: 434, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "localstorage.clear",
        {
          _index: 1321,
          title: {},
          body: {
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "localstorage.getitem('token",
        {
          _index: 2294,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "localstorage.setitem('token",
        {
          _index: 1103,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "localstorage.setitem('user",
        {
          _index: 1105,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login",
        {
          _index: 466,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "login'},{'name",
        {
          _index: 151,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "login.component",
        { _index: 1143, title: {}, body: { "modules/LoginModule.html": {} } },
      ],
      [
        "login.component.html",
        {
          _index: 1082,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login.component.scss",
        {
          _index: 1094,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "login/register",
        { _index: 2165, title: {}, body: { "index.html": {} } },
      ],
      [
        "logincomponent",
        {
          _index: 150,
          title: { "components/LoginComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "loginmodule",
        {
          _index: 369,
          title: { "modules/LoginModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/LoginModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "logout",
        {
          _index: 1290,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["lower", { _index: 2064, title: {}, body: { "index.html": {} } }],
      [
        "map",
        {
          _index: 1317,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "map(result",
        {
          _index: 1307,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "margin",
        {
          _index: 99,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      ["mark", { _index: 2192, title: {}, body: { "index.html": {} } }],
      [
        "marketplace",
        { _index: 2206, title: {}, body: { "properties.html": {} } },
      ],
      [
        "mat",
        {
          _index: 1326,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "matbuttonmodule",
        { _index: 406, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "match",
        {
          _index: 1265,
          title: {},
          body: {
            "classes/MessageController.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "matching",
        {
          _index: 58,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "routes.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "material",
        {
          _index: 2256,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "math.ceil(this._useroffers.length",
        {
          _index: 1829,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "math.ceil(this.posts.length",
        {
          _index: 853,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "math.random().tostring(36).slice",
        {
          _index: 1737,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "maticonmodule",
        { _index: 410, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "matlistmodule",
        { _index: 412, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "matriculation",
        { _index: 2049, title: {}, body: { "index.html": {} } },
      ],
      [
        "matsidenavmodule",
        { _index: 408, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "mattoolbarmodule",
        { _index: 404, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "max",
        {
          _index: 82,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "members",
        {
          _index: 2081,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["memeber", { _index: 2183, title: {}, body: { "index.html": {} } }],
      [
        "menu",
        {
          _index: 1339,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "menu__close",
        {
          _index: 1340,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "menu__container",
        {
          _index: 1353,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["mesasge", { _index: 2163, title: {}, body: { "index.html": {} } }],
      [
        "message",
        {
          _index: 46,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "interfaces/Error.html": {},
            "interfaces/IMessage.html": {},
            "classes/ImageController.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "interfaces/Result.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "message'},{'name",
        {
          _index: 153,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "message.aggregate",
        {
          _index: 1264,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "message.body",
        {
          _index: 1229,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "message.component",
        { _index: 1271, title: {}, body: { "modules/MessageModule.html": {} } },
      ],
      [
        "message.component.html",
        {
          _index: 1147,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "message.component.scss",
        {
          _index: 1146,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "message.deleteone",
        {
          _index: 1724,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "message.find",
        {
          _index: 1261,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "message.foreach((msg",
        {
          _index: 1181,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "message:this.message",
        {
          _index: 1410,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "message:this.outgoing",
        {
          _index: 1225,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "messagecomponent",
        {
          _index: 152,
          title: { "components/MessageComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "messagecontroller",
        {
          _index: 1254,
          title: { "classes/MessageController.html": {} },
          body: { "classes/MessageController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "messagelength",
        {
          _index: 1149,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "messagemodule",
        {
          _index: 370,
          title: { "modules/MessageModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/MessageModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "messages",
        {
          _index: 383,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "messages/${reciever}&${sender",
        {
          _index: 1278,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        "messageschema",
        {
          _index: 979,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "messageservice",
        {
          _index: 375,
          title: { "injectables/MessageService.html": {} },
          body: {
            "modules/AppModule.html": {},
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "metadata",
        {
          _index: 68,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "method",
        {
          _index: 334,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "methods",
        {
          _index: 8,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "middle",
        {
          _index: 116,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "min",
        {
          _index: 91,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "miscellaneous",
        {
          _index: 2042,
          title: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mobile",
        {
          _index: 118,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "mobilewidth",
        {
          _index: 1288,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["models", { _index: 2106, title: {}, body: { "index.html": {} } }],
      [
        "models/issue",
        {
          _index: 1754,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "models/message",
        {
          _index: 1259,
          title: {},
          body: {
            "classes/MessageController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "models/post",
        {
          _index: 1506,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "models/user",
        {
          _index: 32,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "module",
        {
          _index: 174,
          title: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
          body: {},
        },
      ],
      [
        "modules",
        {
          _index: 176,
          title: { "modules.html": {} },
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "mongoose",
        {
          _index: 966,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "dependencies.html": {},
          },
        },
      ],
      [
        "mongoose.connect(url",
        {
          _index: 2261,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mongoose.createconnection(dburl",
        {
          _index: 2237,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "mongoose.model('issue",
        {
          _index: 971,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mongoose.model('message",
        {
          _index: 980,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mongoose.model('post",
        {
          _index: 987,
          title: {},
          body: {
            "interfaces/IPost.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "mongoose.model('user",
        {
          _index: 999,
          title: {},
          body: {
            "interfaces/IUser.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "montserrat",
        {
          _index: 1119,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "more",
        {
          _index: 1433,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "ms",
        {
          _index: 551,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "msg",
        {
          _index: 1183,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "msg.avatar[msg.avatar.length",
        {
          _index: 1186,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "msg.scrolltop",
        {
          _index: 1217,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "msg.sender[msg.sender.length",
        {
          _index: 1191,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "msg.sender_name[msg.sender_name.length",
        {
          _index: 1192,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "msg.time[msg.time.length",
        {
          _index: 1193,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "multer",
        {
          _index: 2028,
          title: {},
          body: { "dependencies.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["mvc", { _index: 2092, title: {}, body: { "index.html": {} } }],
      [
        "name",
        {
          _index: 21,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "nav",
        {
          _index: 155,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "nav.dashboard",
        {
          _index: 1324,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "nav.login",
        {
          _index: 1111,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "nav.logout",
        {
          _index: 1325,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "nav.register",
        {
          _index: 1113,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "navbarcomponent",
        {
          _index: 154,
          title: { "components/NavBarComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "navigateto",
        {
          _index: 1291,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "navigateto(path",
        {
          _index: 1300,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      ["necessary", { _index: 2133, title: {}, body: { "index.html": {} } }],
      ["need", { _index: 2184, title: {}, body: { "index.html": {} } }],
      ["neede", { _index: 2178, title: {}, body: { "index.html": {} } }],
      ["needed", { _index: 2181, title: {}, body: { "index.html": {} } }],
      ["needs", { _index: 2164, title: {}, body: { "index.html": {} } }],
      [
        "new",
        {
          _index: 141,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "new_password",
        {
          _index: 1766,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "newimage",
        {
          _index: 1531,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "newimage?.push(img",
        {
          _index: 1535,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "newimage?.push(req.body.img",
        {
          _index: 1537,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "newissue",
        {
          _index: 1755,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "newissue.save",
        {
          _index: 1760,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "newoffer",
        {
          _index: 940,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "newuser",
        {
          _index: 1690,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "newuser.password",
        {
          _index: 1702,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "newuser.save",
        {
          _index: 1703,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["ng", { _index: 2154, title: {}, body: { "index.html": {} } }],
      [
        "ngafterviewchecked",
        {
          _index: 1153,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "ngmodule",
        {
          _index: 187,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "ngoninit",
        {
          _index: 601,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "ngx",
        {
          _index: 394,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/SocketService.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "node",
        {
          _index: 2038,
          title: {},
          body: { "dependencies.html": {}, "index.html": {} },
        },
      ],
      [
        "nodemailer",
        { _index: 2030, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "nodemailer.createtransport",
        {
          _index: 2301,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "none",
        {
          _index: 553,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "noreply@example.com",
        {
          _index: 1742,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "now",
        {
          _index: 1919,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      ["npm", { _index: 2150, title: {}, body: { "index.html": {} } }],
      [
        "null",
        {
          _index: 40,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "classes/ImageController.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "number",
        {
          _index: 630,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "numberofpages",
        {
          _index: 761,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "o",
        {
          _index: 1345,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "object",
        {
          _index: 809,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "interfaces/Error.html": {},
            "interfaces/IRequestOptions.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "interfaces/Result.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "object.entries(post).filter((entry",
        {
          _index: 712,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "object.entries(this._useroffers).filter((offer",
        {
          _index: 1854,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "object.entries(this.messages).foreach((message",
        {
          _index: 1180,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "object.entries(this.posts).slice(this.start",
        {
          _index: 862,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "object.keys(history.state).length",
        {
          _index: 1396,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "object.keys(post).foreach((key",
        {
          _index: 1570,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "observable",
        {
          _index: 822,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "offer",
        {
          _index: 633,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "offer'},{'name",
        {
          _index: 159,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "offer.category",
        {
          _index: 1472,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "offer.component",
        { _index: 1458, title: {}, body: { "modules/OfferModule.html": {} } },
      ],
      [
        "offer.component.html",
        {
          _index: 1362,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer.component.scss",
        {
          _index: 1361,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
          },
        },
      ],
      [
        "offer.price",
        {
          _index: 1859,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "offer.status",
        {
          _index: 1473,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "offer.title",
        {
          _index: 1470,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "offer.user_name",
        {
          _index: 1471,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "offer/offer.component",
        {
          _index: 461,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "offer/offer.component.ts",
        {
          _index: 1360,
          title: {},
          body: { "components/OfferComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:105",
        {
          _index: 1385,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:108",
        {
          _index: 1386,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:111",
        {
          _index: 1382,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:18",
        {
          _index: 1387,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:19",
        {
          _index: 1389,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:20",
        {
          _index: 1388,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:21",
        {
          _index: 1393,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:22",
        {
          _index: 1390,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:23",
        {
          _index: 1394,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:24",
        {
          _index: 1395,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:25",
        {
          _index: 1391,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:26",
        {
          _index: 1392,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:27",
        {
          _index: 1377,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:41",
        {
          _index: 1379,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:64",
        {
          _index: 1378,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:68",
        {
          _index: 1384,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:76",
        {
          _index: 1383,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.component.ts:80",
        {
          _index: 1380,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "offer/offer.module",
        { _index: 425, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "offer/offer.module.ts",
        { _index: 1457, title: {}, body: { "modules/OfferModule.html": {} } },
      ],
      [
        "offer[1]._id",
        {
          _index: 1855,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "offercomponent",
        {
          _index: 157,
          title: { "components/OfferComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "offerlookup",
        {
          _index: 1626,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "offermodule",
        {
          _index: 371,
          title: { "modules/OfferModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/OfferModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "offers",
        {
          _index: 884,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "components/UserProfileComponent.html": {},
            "index.html": {},
            "properties.html": {},
          },
        },
      ],
      [
        "offers'},{'name",
        {
          _index: 161,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "offers.component.html",
        {
          _index: 1460,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "offers/:id",
        {
          _index: 470,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "offers/offers.component",
        {
          _index: 200,
          title: {},
          body: { "modules/AdminDashboardModule.html": {} },
        },
      ],
      [
        "offerscomponent",
        {
          _index: 160,
          title: { "components/OffersComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "old_password",
        {
          _index: 1767,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "once",
        {
          _index: 1836,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "onchange",
        {
          _index: 682,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "onchange(event",
        {
          _index: 690,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "onchangecategory",
        {
          _index: 772,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
          },
        },
      ],
      [
        "onchangecategory(event",
        {
          _index: 799,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "onchangecategory(value",
        {
          _index: 929,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "onchangepassword",
        {
          _index: 1773,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "ondelete",
        {
          _index: 1774,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "ondeleteoffer",
        {
          _index: 1775,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "ondeleteoffer(id",
        {
          _index: 1789,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "ondeleteresponse",
        {
          _index: 1528,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      ["one", { _index: 2120, title: {}, body: { "index.html": {} } }],
      [
        "oneditoffer",
        {
          _index: 1776,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "oneditoffer(id",
        {
          _index: 1791,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "onfetchmessages",
        {
          _index: 1643,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "oninit",
        {
          _index: 593,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "onkeypressed",
        {
          _index: 1625,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "onkeypressed(value",
        {
          _index: 1631,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "onkeywordsearch",
        {
          _index: 773,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "onkeywordsearch(event",
        {
          _index: 801,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "onresize",
        {
          _index: 774,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "onresize(event",
        {
          _index: 803,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "onselect",
        {
          _index: 775,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "onselect(event",
        {
          _index: 806,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "onselectevent",
        {
          _index: 918,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "onselectevent(value",
        {
          _index: 931,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "onsendmessage",
        {
          _index: 1154,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "onsubmit",
        {
          _index: 1595,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "onupdateoffer",
        {
          _index: 1366,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "onupdateoffer(id",
        {
          _index: 1381,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "onupdateoffer(id:string",
        {
          _index: 1425,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "onuploadmore",
        {
          _index: 1367,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "opacity",
        {
          _index: 565,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "open",
        {
          _index: 969,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "components/NavBarComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "optional",
        {
          _index: 23,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "options",
        {
          _index: 642,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "origin",
        {
          _index: 2234,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "out",
        {
          _index: 183,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "components/NavBarComponent.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "index.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "outgoing",
        {
          _index: 1150,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "outline",
        {
          _index: 750,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "output",
        {
          _index: 536,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "outputs",
        {
          _index: 522,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "overflow",
        {
          _index: 543,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "overview",
        {
          _index: 2200,
          title: { "overview.html": {} },
          body: { "overview.html": {} },
        },
      ],
      [
        "package",
        {
          _index: 1985,
          title: { "dependencies.html": {}, "properties.html": {} },
          body: {},
        },
      ],
      ["packages", { _index: 2149, title: {}, body: { "index.html": {} } }],
      [
        "padding",
        {
          _index: 90,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "page",
        {
          _index: 883,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "pagenumber",
        {
          _index: 762,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "paginatedoffers",
        {
          _index: 1768,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "paginatedposts",
        {
          _index: 763,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "paginateoffers",
        {
          _index: 1777,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "paginateposts",
        {
          _index: 776,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "parameters",
        {
          _index: 19,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "parser",
        { _index: 1989, title: {}, body: { "dependencies.html": {} } },
      ],
      ["parsing", { _index: 2175, title: {}, body: { "index.html": {} } }],
      [
        "pass",
        {
          _index: 1953,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["passed", { _index: 2114, title: {}, body: { "index.html": {} } }],
      [
        "passport",
        {
          _index: 2032,
          title: {},
          body: { "dependencies.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "passport.use(new",
        {
          _index: 2283,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "password",
        {
          _index: 471,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "password'},{'name",
        {
          _index: 164,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "password.component",
        {
          _index: 459,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/ResetPasswordModule.html": {},
          },
        },
      ],
      [
        "password.component.html",
        {
          _index: 1594,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.component.scss",
        {
          _index: 1593,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.component.ts",
        {
          _index: 1592,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "password.component.ts:13",
        {
          _index: 1597,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.component.ts:21",
        {
          _index: 1599,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "password.module",
        { _index: 437, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "password.module.ts",
        {
          _index: 1619,
          title: {},
          body: { "modules/ResetPasswordModule.html": {} },
        },
      ],
      [
        "password/${email",
        { _index: 345, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "password/${id",
        { _index: 343, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "password/reset",
        {
          _index: 436,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "passwordnotmatch",
        {
          _index: 1893,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      ["passwords", { _index: 2189, title: {}, body: { "index.html": {} } }],
      [
        "path",
        {
          _index: 263,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppRoutingModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "path.extname(file.originalname",
        {
          _index: 2249,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["paths", { _index: 2100, title: {}, body: { "index.html": {} } }],
      ["pattern", { _index: 2094, title: {}, body: { "index.html": {} } }],
      [
        "payload",
        {
          _index: 251,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "payload).subscribe((data",
        {
          _index: 1428,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      ["per", { _index: 2172, title: {}, body: { "index.html": {} } }],
      [
        "perpage",
        {
          _index: 1769,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      ["phase", { _index: 2128, title: {}, body: { "index.html": {} } }],
      [
        "picture",
        {
          _index: 732,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "pictures",
        {
          _index: 1434,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "pipe",
        {
          _index: 1306,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "plain",
        {
          _index: 1695,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "plainpassword",
        {
          _index: 1667,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "please",
        {
          _index: 1056,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "pointer",
        {
          _index: 500,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "port",
        {
          _index: 1959,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["portal", { _index: 2074, title: {}, body: { "index.html": {} } }],
      [
        "position",
        {
          _index: 569,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      ["possible", { _index: 2117, title: {}, body: { "index.html": {} } }],
      [
        "post",
        {
          _index: 319,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IPost.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/UserController.html": {},
            "coverage.html": {},
            "index.html": {},
            "properties.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "post.aggregate",
        {
          _index: 1545,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.category",
        {
          _index: 873,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "post.deleteone",
        {
          _index: 1725,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "post.description",
        {
          _index: 879,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "post.find",
        {
          _index: 1522,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.findbyid(req.params.id",
        {
          _index: 1527,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.findbyidanddelete(req.params.id",
        {
          _index: 1529,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.findbyidandupdate(req.params.id",
        {
          _index: 1538,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.image",
        {
          _index: 1516,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.price",
        {
          _index: 874,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "post.save",
        {
          _index: 1520,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "post.title",
        {
          _index: 878,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "post.title.tolowercase().includes(event",
        {
          _index: 875,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "post.user_id",
        {
          _index: 1568,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "post.user_name",
        {
          _index: 881,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "post/${id",
        {
          _index: 1567,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "post/get",
        {
          _index: 538,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "post/save",
        {
          _index: 1573,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "post/update",
        {
          _index: 1575,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "post/update/${id",
        {
          _index: 1581,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "post[1",
        {
          _index: 851,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "post[key",
        {
          _index: 1572,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "postcontroller",
        {
          _index: 1482,
          title: { "classes/PostController.html": {} },
          body: { "classes/PostController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "postcount",
        {
          _index: 1544,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "postperpage",
        {
          _index: 764,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "posts",
        {
          _index: 277,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "posts/${store.state.user.id",
        { _index: 341, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "postschema",
        {
          _index: 985,
          title: {},
          body: {
            "interfaces/IPost.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "postservice",
        {
          _index: 376,
          title: { "injectables/PostService.html": {} },
          body: {
            "modules/AppModule.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "interfaces/IDataset.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "postservices",
        {
          _index: 1780,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      ["prerequisite", { _index: 2085, title: {}, body: { "index.html": {} } }],
      [
        "price",
        {
          _index: 680,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IPost.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "pricefilter",
        {
          _index: 921,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      ["prices", { _index: 2180, title: {}, body: { "index.html": {} } }],
      [
        "primary",
        {
          _index: 752,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "private",
        {
          _index: 231,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "process.env.database_url",
        {
          _index: 2238,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "process.env.secret_key",
        {
          _index: 1715,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "production",
        {
          _index: 2279,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["products", { _index: 2167, title: {}, body: { "index.html": {} } }],
      [
        "profile",
        {
          _index: 467,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/NavBarComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "profile'},{'name",
        {
          _index: 168,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "profile.component",
        {
          _index: 462,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/UserProfileModule.html": {},
          },
        },
      ],
      [
        "profile.component.html",
        {
          _index: 1764,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.scss",
        {
          _index: 1763,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts",
        {
          _index: 1762,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "profile.component.ts:106",
        {
          _index: 1782,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:113",
        {
          _index: 1788,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:127",
        {
          _index: 1787,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:165",
        {
          _index: 1790,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:17",
        {
          _index: 1813,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:179",
        {
          _index: 1792,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:18",
        {
          _index: 1797,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:19",
        {
          _index: 1811,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:20",
        {
          _index: 1796,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:21",
        {
          _index: 1802,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:22",
        {
          _index: 1803,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:23",
        {
          _index: 1798,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:24",
        {
          _index: 1807,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:25",
        {
          _index: 1805,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:26",
        {
          _index: 1810,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:27",
        {
          _index: 1808,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:28",
        {
          _index: 1812,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:29",
        {
          _index: 1800,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:30",
        {
          _index: 1801,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:31",
        {
          _index: 1806,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:32",
        {
          _index: 1804,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:33",
        {
          _index: 1781,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:44",
        {
          _index: 1794,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:57",
        {
          _index: 1786,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:62",
        {
          _index: 1785,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:87",
        {
          _index: 1795,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:91",
        {
          _index: 1783,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:95",
        {
          _index: 1793,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.component.ts:99",
        {
          _index: 1784,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile.module",
        { _index: 387, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "profile.module.ts",
        {
          _index: 1890,
          title: {},
          body: { "modules/UserProfileModule.html": {} },
        },
      ],
      [
        "profile/${_id",
        { _index: 328, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "profile/${id",
        { _index: 338, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "profile/${msg.sender[msg.avatar.length",
        {
          _index: 1188,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "profile/${this.user.id",
        {
          _index: 1824,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "profile/user",
        {
          _index: 386,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      ["project", { _index: 2076, title: {}, body: { "index.html": {} } }],
      [
        "project.git",
        { _index: 2212, title: {}, body: { "properties.html": {} } },
      ],
      [
        "projectdescription",
        { _index: 2058, title: {}, body: { "index.html": {} } },
      ],
      [
        "promise",
        {
          _index: 2260,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "promise((resolve",
        {
          _index: 2242,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "properties",
        {
          _index: 229,
          title: { "properties.html": {} },
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Result.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "properties.html": {},
          },
        },
      ],
      [
        "provide",
        { _index: 449, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "provided",
        {
          _index: 1540,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "providedin",
        {
          _index: 259,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
          },
        },
      ],
      [
        "providers",
        {
          _index: 186,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "public",
        {
          _index: 598,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "push",
        {
          _index: 1266,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "put",
        {
          _index: 340,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "query",
        {
          _index: 1128,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "queryresponse",
        {
          _index: 1584,
          title: { "classes/QueryResponse.html": {} },
          body: { "classes/QueryResponse.html": {}, "coverage.html": {} },
        },
      ],
      [
        "queryresponse.error",
        {
          _index: 2264,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "queryresponse.result",
        {
          _index: 2262,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "quryresponseinterface",
        { _index: 1590, title: {}, body: { "classes/QueryResponse.html": {} } },
      ],
      [
        "radius",
        {
          _index: 104,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "randomstring",
        {
          _index: 1736,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "receiver",
        {
          _index: 1202,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "recieved",
        {
          _index: 1246,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "reciever",
        {
          _index: 975,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/OfferComponent.html": {},
            "classes/UserController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "recover",
        {
          _index: 1838,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "red",
        {
          _index: 623,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "regex",
        {
          _index: 1600,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "regex.test(this.email",
        {
          _index: 1606,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "regexp",
        {
          _index: 1601,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "register",
        {
          _index: 465,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "register'},{'name",
        {
          _index: 170,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "registered",
        {
          _index: 1920,
          title: {},
          body: {
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "registeruser",
        {
          _index: 285,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "classes/UserController.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "registeruser(req",
        {
          _index: 1678,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "registeruser(user",
        { _index: 301, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "registration.component",
        {
          _index: 463,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "registration.component.html",
        {
          _index: 1892,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.scss",
        {
          _index: 1093,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "registration.component.scss,./login.component.scss",
        {
          _index: 1081,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "registration.component.ts",
        {
          _index: 1891,
          title: {},
          body: {
            "components/UserRegistrationComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "registration.component.ts:14",
        {
          _index: 1905,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:15",
        {
          _index: 1904,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:16",
        {
          _index: 1906,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:17",
        {
          _index: 1908,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:18",
        {
          _index: 1907,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:19",
        {
          _index: 1903,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:20",
        {
          _index: 1898,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:26",
        {
          _index: 1909,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:34",
        {
          _index: 1900,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:38",
        {
          _index: 1902,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.component.ts:42",
        {
          _index: 1901,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "registration.modules",
        { _index: 415, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "registration.modules.ts",
        {
          _index: 1926,
          title: {},
          body: { "modules/UserRegistrationModule.html": {} },
        },
      ],
      [
        "registration/user",
        {
          _index: 414,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "reject",
        {
          _index: 2243,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "reject(err",
        {
          _index: 2247,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "relative",
        {
          _index: 668,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "repeat",
        {
          _index: 1861,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "repeat_password",
        {
          _index: 1770,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "repository",
        {
          _index: 2057,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "req",
        {
          _index: 24,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "req.body.body",
        {
          _index: 1759,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "req.body.category",
        {
          _index: 1508,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.description",
        {
          _index: 1509,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.email",
        {
          _index: 1692,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "req.body.id",
        {
          _index: 1721,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "req.body.img",
        {
          _index: 1536,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.img.foreach((img",
        {
          _index: 1534,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.issuer_email",
        {
          _index: 1757,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "req.body.issuer_name",
        {
          _index: 1756,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "req.body.name",
        {
          _index: 1691,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "req.body.password",
        {
          _index: 1693,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "req.body.price",
        {
          _index: 1510,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.role",
        {
          _index: 53,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "req.body.status",
        {
          _index: 1512,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.subject",
        {
          _index: 1758,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "req.body.title",
        {
          _index: 1507,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.user_id",
        {
          _index: 1513,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.body.user_name",
        {
          _index: 1514,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.file",
        {
          _index: 1034,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "req.file?.filename",
        {
          _index: 1033,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "req.files",
        {
          _index: 1517,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.files?.length",
        {
          _index: 1515,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "req.params.email",
        {
          _index: 1735,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "req.params.id",
        {
          _index: 1262,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "req.params.name",
        {
          _index: 1040,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "req.params.sender",
        {
          _index: 1260,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "req.params.user_id",
        {
          _index: 1525,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "request",
        {
          _index: 14,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "components/LoginComponent.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
          },
        },
      ],
      [
        "requested",
        {
          _index: 1743,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "requestmethod",
        {
          _index: 991,
          title: {},
          body: {
            "interfaces/IRequestOptions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "requestoptions",
        {
          _index: 333,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "requestoptions)).json",
        {
          _index: 336,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "requestoptions.body",
        {
          _index: 992,
          title: {},
          body: {
            "interfaces/IRequestOptions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "require",
        {
          _index: 1983,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "require('socket.io')(server",
        {
          _index: 2233,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "require.context",
        {
          _index: 2257,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "required",
        {
          _index: 717,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "components/IssueComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["requirement", { _index: 2173, title: {}, body: { "index.html": {} } }],
      [
        "res",
        {
          _index: 15,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "res.json",
        {
          _index: 48,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
          },
        },
      ],
      [
        "res.status(404",
        {
          _index: 42,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "res.status(404).json",
        {
          _index: 1727,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "reset",
        {
          _index: 163,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "resetpassword",
        {
          _index: 286,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "resetpassword(email",
        { _index: 303, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "resetpassword(req",
        {
          _index: 1680,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "resetpasswordcomponent",
        {
          _index: 162,
          title: { "components/ResetPasswordComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "resetpasswordmodule",
        {
          _index: 372,
          title: { "modules/ResetPasswordModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      ["resides", { _index: 2110, title: {}, body: { "index.html": {} } }],
      [
        "resize",
        {
          _index: 824,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "resizeobservable",
        {
          _index: 765,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "resizesubscription",
        {
          _index: 843,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "resolve(fileinfo",
        {
          _index: 2251,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "resp",
        {
          _index: 722,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "resp.image",
        {
          _index: 1532,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "resp.success",
        {
          _index: 1850,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "resp.then((success",
        {
          _index: 1420,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "response",
        {
          _index: 16,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/DashboardComponent.html": {},
            "classes/ImageController.html": {},
            "components/LoginComponent.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/QueryResponse.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "response.message",
        {
          _index: 1102,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "response.posts",
        {
          _index: 848,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "response.token",
        {
          _index: 1104,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "response?.success",
        {
          _index: 1099,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "responsetype",
        {
          _index: 326,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
          },
        },
      ],
      [
        "result",
        {
          _index: 949,
          title: { "interfaces/Result.html": {} },
          body: {
            "interfaces/Error.html": {},
            "classes/QueryResponse.html": {},
            "interfaces/Result.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "result(response",
        { _index: 1588, title: {}, body: { "classes/QueryResponse.html": {} } },
      ],
      [
        "result.matches",
        {
          _index: 1308,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "results",
        {
          _index: 57,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "dependencies.html": {},
            "miscellaneous/functions.html": {},
            "index.html": {},
            "modules.html": {},
            "overview.html": {},
            "properties.html": {},
            "routes.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "return",
        {
          _index: 41,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IRequestOptions.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "returns",
        {
          _index: 25,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "rgb(13",
        {
          _index: 1871,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "rgb(145",
        {
          _index: 899,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "rgb(179",
        {
          _index: 1235,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "rgb(181",
        {
          _index: 110,
          title: {},
          body: { "components/AdminDashboardComponent.html": {} },
        },
      ],
      [
        "rgb(190",
        {
          _index: 1614,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "rgb(195",
        {
          _index: 1068,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "rgb(20",
        {
          _index: 1072,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "rgb(208",
        {
          _index: 1449,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "rgb(214",
        {
          _index: 1869,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "rgb(217",
        {
          _index: 1124,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "rgb(223",
        {
          _index: 502,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "rgb(234",
        {
          _index: 583,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "rgb(25",
        {
          _index: 743,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "rgb(251",
        {
          _index: 1248,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "rgb(3",
        {
          _index: 1874,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "rgb(33",
        {
          _index: 1864,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "rgb(4",
        {
          _index: 1242,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "rgb(5",
        {
          _index: 1251,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "rgb(8",
        {
          _index: 1442,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "rgb(80",
        {
          _index: 746,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "rgba(172",
        {
          _index: 1877,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "rgba(190",
        {
          _index: 1880,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "rgba(7",
        {
          _index: 353,
          title: {},
          body: { "components/AppComponent.html": {} },
        },
      ],
      [
        "right",
        {
          _index: 1335,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "role",
        {
          _index: 52,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/AdminService.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/UserController.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "role/${id",
        {
          _index: 273,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "roles",
        {
          _index: 1001,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "root",
        {
          _index: 260,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "root'},{'name",
        {
          _index: 127,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "rotate",
        {
          _index: 1351,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "route",
        {
          _index: 217,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
          },
        },
      ],
      [
        "router",
        {
          _index: 210,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "routermodule",
        {
          _index: 454,
          title: {},
          body: {
            "modules/AppRoutingModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/LoginModule.html": {},
            "modules/UserProfileModule.html": {},
          },
        },
      ],
      [
        "routermodule.forroot(routes",
        {
          _index: 474,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "routerstatesnapshot",
        {
          _index: 215,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
          },
        },
      ],
      [
        "routes",
        {
          _index: 455,
          title: { "routes.html": {} },
          body: {
            "modules/AppRoutingModule.html": {},
            "index.html": {},
            "overview.html": {},
            "routes.html": {},
          },
        },
      ],
      [
        "routing.module",
        { _index: 397, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "routing.module.ts",
        {
          _index: 453,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "row",
        {
          _index: 1453,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      ["run", { _index: 2118, title: {}, body: { "index.html": {} } }],
      ["running", { _index: 2122, title: {}, body: { "index.html": {} } }],
      [
        "rxjs",
        {
          _index: 829,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "rxjs/operators",
        {
          _index: 1318,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "sabing",
        {
          _index: 1696,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "safari",
        {
          _index: 1331,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "salt",
        {
          _index: 1698,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "sans",
        {
          _index: 1120,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "saved",
        {
          _index: 1521,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserIssueController.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "scale(1",
        {
          _index: 1357,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "scale(1.1",
        {
          _index: 898,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "scale(1.2",
        {
          _index: 887,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "scale(1.3",
        {
          _index: 1358,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "schema",
        {
          _index: 967,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["sciences", { _index: 2063, title: {}, body: { "index.html": {} } }],
      [
        "scroll",
        {
          _index: 545,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "scrollbar",
        {
          _index: 554,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "scroller",
        {
          _index: 556,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "search",
        {
          _index: 1621,
          title: {},
          body: { "components/SearchComponent.html": {}, "index.html": {} },
        },
      ],
      [
        "search'},{'name",
        {
          _index: 166,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "search.component.html",
        {
          _index: 1623,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "search.component.scss",
        {
          _index: 1622,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "search/serach.component",
        {
          _index: 912,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "searchcomponent",
        {
          _index: 165,
          title: { "components/SearchComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      ["second", { _index: 2082, title: {}, body: { "index.html": {} } }],
      [
        "secret",
        {
          _index: 1714,
          title: {},
          body: {
            "classes/UserController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "secretorkey",
        {
          _index: 2282,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "section",
        {
          _index: 102,
          title: {},
          body: { "components/AdminDashboardComponent.html": {} },
        },
      ],
      [
        "select",
        {
          _index: 733,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "selector",
        {
          _index: 69,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "selector:'app",
        {
          _index: 935,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "self",
        {
          _index: 1232,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "sell/giveaway",
        {
          _index: 2073,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["semester", { _index: 2070, title: {}, body: { "index.html": {} } }],
      [
        "send",
        {
          _index: 1432,
          title: {},
          body: { "components/OfferComponent.html": {}, "index.html": {} },
        },
      ],
      [
        "sender",
        {
          _index: 976,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/OfferComponent.html": {},
            "classes/UserController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "sender.name",
        {
          _index: 1228,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "sender:any=null",
        {
          _index: 1277,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        "sender_avatar",
        {
          _index: 977,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "classes/MessageController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "sender_name",
        {
          _index: 978,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "classes/MessageController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "senders",
        {
          _index: 1151,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "sendmessage",
        {
          _index: 1368,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "sendmessages",
        {
          _index: 1644,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "sendmessages(args",
        {
          _index: 1647,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "sendrequest",
        {
          _index: 313,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "interfaces/IRequestOptions.html": {},
            "injectables/PostService.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "sendrequest(url",
        {
          _index: 318,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "sent",
        {
          _index: 1061,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      ["separate", { _index: 2130, title: {}, body: { "index.html": {} } }],
      ["seprate", { _index: 2124, title: {}, body: { "index.html": {} } }],
      [
        "serif",
        {
          _index: 1121,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["serve", { _index: 2155, title: {}, body: { "index.html": {} } }],
      [
        "server",
        {
          _index: 1960,
          title: {},
          body: {
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "service",
        {
          _index: 1749,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "services/admin/adminservices",
        {
          _index: 1464,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "session",
        { _index: 1994, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "set",
        {
          _index: 51,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "settimeout",
        {
          _index: 1847,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "shadow",
        {
          _index: 107,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "sharereplay",
        {
          _index: 1309,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "showtooltip",
        {
          _index: 1771,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "side",
        {
          _index: 942,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar",
        {
          _index: 113,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "sidebar'},{'name",
        {
          _index: 145,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "sidebar.component.html",
        {
          _index: 917,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar.component.scss",
        {
          _index: 916,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component",
        {
          _index: 911,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts",
        {
          _index: 915,
          title: {},
          body: {
            "components/DashboardSidebarComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "sidebar/sidebar.component.ts:11",
        {
          _index: 923,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:12",
        {
          _index: 934,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:18",
        {
          _index: 933,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:20",
        {
          _index: 924,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:21",
        {
          _index: 925,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:22",
        {
          _index: 926,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:24",
        {
          _index: 932,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:28",
        {
          _index: 930,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidebar/sidebar.component.ts:32",
        {
          _index: 928,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "sidenav",
        {
          _index: 1328,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "signup",
        {
          _index: 1132,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "single",
        {
          _index: 158,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "size",
        {
          _index: 576,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "skip",
        {
          _index: 2275,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "slidebackward",
        {
          _index: 1369,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "slideforward",
        {
          _index: 1370,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "smooth",
        {
          _index: 550,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "smtp.ethereal.email",
        {
          _index: 2303,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "socket",
        {
          _index: 395,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/SocketService.html": {},
          },
        },
      ],
      [
        "socket.io",
        { _index: 2035, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "socketioconfig",
        {
          _index: 393,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "socketiomodule",
        { _index: 392, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "socketiomodule.forroot(config",
        { _index: 447, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "socketservice",
        {
          _index: 1156,
          title: { "injectables/SocketService.html": {} },
          body: {
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
            "injectables/SocketService.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "sockettimeoutms",
        {
          _index: 2272,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "soething",
        {
          _index: 1063,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      ["sold", { _index: 2191, title: {}, body: { "index.html": {} } }],
      [
        "solid",
        {
          _index: 1131,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "solved",
        {
          _index: 2268,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "something",
        {
          _index: 1917,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "sort",
        {
          _index: 1263,
          title: {},
          body: {
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "source",
        {
          _index: 4,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "modules/ButtonModule.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "modules/ChartModule.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "modules/MessageModule.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "span",
        {
          _index: 571,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "spec\\.ts",
        {
          _index: 2258,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["specific", { _index: 2177, title: {}, body: { "index.html": {} } }],
      ["src", { _index: 2097, title: {}, body: { "index.html": {} } }],
      [
        "src/.../app.module.ts",
        {
          _index: 2218,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../category",
        {
          _index: 2217,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../categoryrepository.ts",
        {
          _index: 2216,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../db_options.ts",
        {
          _index: 2220,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.prod.ts",
        {
          _index: 2221,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../environment.ts",
        {
          _index: 2222,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../file_upload.ts",
        {
          _index: 2044,
          title: {},
          body: {
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/.../helpers.ts",
        {
          _index: 2229,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../index.ts",
        {
          _index: 2215,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../issue.ts",
        {
          _index: 2223,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../mail_service.ts",
        {
          _index: 2231,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../message.ts",
        {
          _index: 2224,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../passport_config.ts",
        {
          _index: 2225,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../post.ts",
        {
          _index: 2226,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../routes.ts",
        {
          _index: 2228,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../store.ts",
        {
          _index: 2230,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../test.ts",
        {
          _index: 2219,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../user.ts",
        {
          _index: 2232,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/.../users.component.ts",
        {
          _index: 2227,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/components/admin/dashboard/admin",
        {
          _index: 438,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/components/create",
        {
          _index: 389,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/components/dashboard/dashboard.component",
        {
          _index: 457,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "src/components/dashboard/dashboard.module",
        { _index: 423, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/components/footer/footer.component",
        { _index: 428, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/components/issue/issue.component",
        {
          _index: 464,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "src/components/issue/issue.module",
        { _index: 442, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/components/login/login.component",
        {
          _index: 458,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "src/components/login/login.module",
        { _index: 417, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/components/message/message.component",
        {
          _index: 460,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "src/components/message/message.module",
        { _index: 427, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "src/components/reset",
        {
          _index: 435,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/components/single",
        {
          _index: 424,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/components/user",
        {
          _index: 385,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/config/db_options.ts",
        {
          _index: 1940,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/config/file_upload.ts",
        {
          _index: 1944,
          title: {},
          body: {
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/config/mail_service.ts",
        {
          _index: 1951,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/config/passport_config.ts",
        {
          _index: 1952,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/controllers/admincontroller.ts",
        {
          _index: 6,
          title: {},
          body: { "classes/AdminController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/controllers/admincontroller.ts:22",
        { _index: 28, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      [
        "src/controllers/admincontroller.ts:5",
        { _index: 18, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      [
        "src/controllers/imagecontroller.ts",
        {
          _index: 1020,
          title: {},
          body: { "classes/ImageController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/controllers/imagecontroller.ts:21",
        {
          _index: 1027,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "src/controllers/imagecontroller.ts:44",
        {
          _index: 1025,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "src/controllers/imagecontroller.ts:6",
        {
          _index: 1029,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "src/controllers/messagecontroller.ts",
        {
          _index: 1255,
          title: {},
          body: { "classes/MessageController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/controllers/messagecontroller.ts:5",
        {
          _index: 1258,
          title: {},
          body: { "classes/MessageController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts",
        {
          _index: 1483,
          title: {},
          body: { "classes/PostController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:107",
        {
          _index: 1505,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:142",
        {
          _index: 1503,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:162",
        {
          _index: 1493,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:37",
        {
          _index: 1497,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:5",
        {
          _index: 1501,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:55",
        {
          _index: 1499,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:72",
        {
          _index: 1495,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/postcontroller.ts:90",
        {
          _index: 1491,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts",
        {
          _index: 1656,
          title: {},
          body: { "classes/UserController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:109",
        {
          _index: 1685,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:12",
        {
          _index: 1679,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:129",
        {
          _index: 1668,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:160",
        {
          _index: 1683,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:187",
        {
          _index: 1677,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:191",
        {
          _index: 1672,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:195",
        {
          _index: 1666,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:199",
        {
          _index: 1681,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:44",
        {
          _index: 1663,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:88",
        {
          _index: 1670,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/usercontroller.ts:9",
        {
          _index: 1661,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "src/controllers/userissuecontroller.ts",
        {
          _index: 1752,
          title: {},
          body: { "classes/UserIssueController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/controllers/userissuecontroller.ts:5",
        {
          _index: 1753,
          title: {},
          body: { "classes/UserIssueController.html": {} },
        },
      ],
      [
        "src/helpers/helpers",
        {
          _index: 314,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "src/index.ts",
        {
          _index: 1958,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/models/issue.ts",
        {
          _index: 960,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/models/message.ts",
        {
          _index: 973,
          title: {},
          body: {
            "interfaces/IMessage.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/models/post.ts",
        {
          _index: 982,
          title: {},
          body: {
            "interfaces/IPost.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/models/user.ts",
        {
          _index: 995,
          title: {},
          body: {
            "interfaces/IUser.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["src/public", { _index: 2159, title: {}, body: { "index.html": {} } }],
      [
        "src/responseinterface/queryresponse.ts",
        {
          _index: 1585,
          title: {},
          body: { "classes/QueryResponse.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/responseinterface/queryresponse.ts:4",
        { _index: 1587, title: {}, body: { "classes/QueryResponse.html": {} } },
      ],
      [
        "src/responseinterface/queryresponse.ts:8",
        { _index: 1589, title: {}, body: { "classes/QueryResponse.html": {} } },
      ],
      [
        "src/responseinterface/quryresponseinterface.ts",
        {
          _index: 948,
          title: {},
          body: {
            "interfaces/Error.html": {},
            "interfaces/Result.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/routes/routes.ts",
        {
          _index: 1965,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/services/admin",
        {
          _index: 440,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/services/admin/adminservices",
        {
          _index: 189,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "src/services/api/api.service",
        {
          _index: 416,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "src/services/auth",
        {
          _index: 419,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/AppRoutingModule.html": {},
          },
        },
      ],
      [
        "src/services/messages/messageservice",
        {
          _index: 426,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
          },
        },
      ],
      [
        "src/services/messages/socketservice",
        {
          _index: 1172,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "modules/MessageModule.html": {},
          },
        },
      ],
      [
        "src/services/post/post.service",
        {
          _index: 422,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "interfaces/IDataset.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "src/store/categoryrepository",
        {
          _index: 613,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "src/store/store",
        {
          _index: 222,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "src/utils/button/button.module",
        {
          _index: 758,
          title: {},
          body: {
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      ["src/views", { _index: 2153, title: {}, body: { "index.html": {} } }],
      [
        "src/views/src/app/app",
        {
          _index: 452,
          title: {},
          body: { "modules/AppRoutingModule.html": {} },
        },
      ],
      [
        "src/views/src/app/app.component.ts",
        {
          _index: 346,
          title: {},
          body: { "components/AppComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/app/app.module.ts",
        {
          _index: 377,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/views/src/components/admin/category",
        {
          _index: 591,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/views/src/components/admin/dashboard/admin",
        {
          _index: 66,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/admin/offers/offers.component.ts",
        {
          _index: 1459,
          title: {},
          body: { "components/OffersComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/offers/offers.component.ts:11",
        {
          _index: 1462,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/offers/offers.component.ts:14",
        {
          _index: 1463,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts",
        {
          _index: 1000,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:27",
        {
          _index: 1934,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:28",
        {
          _index: 1932,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:29",
        {
          _index: 1933,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:30",
        {
          _index: 1928,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:37",
        {
          _index: 1930,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:45",
        {
          _index: 1931,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/admin/users/users.component.ts:58",
        {
          _index: 1929,
          title: {},
          body: { "components/UsersComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/carousel/carousel.component.ts",
        {
          _index: 515,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/carousel/carousel.component.ts:13",
        {
          _index: 526,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/carousel/carousel.component.ts:18",
        {
          _index: 528,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/carousel/carousel.component.ts:20",
        {
          _index: 533,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/carousel/carousel.component.ts:23",
        {
          _index: 530,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/chat",
        {
          _index: 659,
          title: {},
          body: { "components/ChatBoxComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/create",
        {
          _index: 673,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "modules/CreateNewItemModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard",
        {
          _index: 914,
          title: {},
          body: {
            "components/DashboardSidebarComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts",
        {
          _index: 759,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:101",
        {
          _index: 785,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:108",
        {
          _index: 807,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:112",
        {
          _index: 800,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:122",
        {
          _index: 789,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:132",
        {
          _index: 795,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:136",
        {
          _index: 802,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:146",
        {
          _index: 787,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:16",
        {
          _index: 810,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:17",
        {
          _index: 821,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:18",
        {
          _index: 816,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:19",
        {
          _index: 820,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:20",
        {
          _index: 825,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:21",
        {
          _index: 818,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:22",
        {
          _index: 811,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:23",
        {
          _index: 817,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:24",
        {
          _index: 813,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:25",
        {
          _index: 815,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:26",
        {
          _index: 814,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:27",
        {
          _index: 781,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:32",
        {
          _index: 826,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:40",
        {
          _index: 798,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:76",
        {
          _index: 784,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:82",
        {
          _index: 808,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:86",
        {
          _index: 797,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:90",
        {
          _index: 792,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.component.ts:94",
        {
          _index: 793,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/dashboard.module.ts",
        {
          _index: 909,
          title: {},
          body: { "modules/DashboardModule.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/search/serach.component.ts",
        {
          _index: 1620,
          title: {},
          body: { "components/SearchComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/search/serach.component.ts:10",
        {
          _index: 1627,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/search/serach.component.ts:16",
        {
          _index: 1628,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/search/serach.component.ts:18",
        {
          _index: 1632,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/dashboard/search/serach.component.ts:27",
        {
          _index: 1630,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/footer/footer.component.ts",
        {
          _index: 950,
          title: {},
          body: { "components/FooterComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/footer/footer.component.ts:10",
        {
          _index: 955,
          title: {},
          body: { "components/FooterComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts",
        {
          _index: 1042,
          title: {},
          body: { "components/IssueComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts:14",
        {
          _index: 1049,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts:15",
        {
          _index: 1048,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts:16",
        {
          _index: 1050,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts:17",
        {
          _index: 1046,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts:23",
        {
          _index: 1051,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.component.ts:31",
        {
          _index: 1047,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/issue/issue.module.ts",
        { _index: 1078, title: {}, body: { "modules/IssueModule.html": {} } },
      ],
      [
        "src/views/src/components/login/login.component.ts",
        {
          _index: 1080,
          title: {},
          body: { "components/LoginComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.component.ts:13",
        {
          _index: 1091,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.component.ts:14",
        {
          _index: 1089,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.component.ts:15",
        {
          _index: 1090,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.component.ts:16",
        {
          _index: 1086,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.component.ts:21",
        {
          _index: 1092,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.component.ts:29",
        {
          _index: 1088,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/login/login.module.ts",
        { _index: 1142, title: {}, body: { "modules/LoginModule.html": {} } },
      ],
      [
        "src/views/src/components/message/message.component.ts",
        {
          _index: 1144,
          title: {},
          body: { "components/MessageComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:108",
        {
          _index: 1158,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:112",
        {
          _index: 1162,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:14",
        {
          _index: 1166,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:15",
        {
          _index: 1169,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:16",
        {
          _index: 1171,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:17",
        {
          _index: 1167,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:18",
        {
          _index: 1170,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:19",
        {
          _index: 1168,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:20",
        {
          _index: 1157,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:29",
        {
          _index: 1163,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:34",
        {
          _index: 1164,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:70",
        {
          _index: 1160,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.component.ts:94",
        {
          _index: 1165,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "src/views/src/components/message/message.module.ts",
        { _index: 1270, title: {}, body: { "modules/MessageModule.html": {} } },
      ],
      [
        "src/views/src/components/nav",
        {
          _index: 1281,
          title: {},
          body: { "components/NavBarComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/components/reset",
        {
          _index: 1591,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "modules/ResetPasswordModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/single",
        {
          _index: 1359,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "modules/OfferModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/components/user",
        {
          _index: 1761,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "src/views/src/environments/environment.prod.ts",
        {
          _index: 1975,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/views/src/environments/environment.ts",
        {
          _index: 1977,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/views/src/helpers/helpers.ts",
        {
          _index: 989,
          title: {},
          body: {
            "interfaces/IRequestOptions.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "src/views/src/services/admin",
        {
          _index: 205,
          title: {},
          body: { "guards/AdminGuard.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts",
        {
          _index: 228,
          title: {},
          body: { "injectables/AdminService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:10",
        {
          _index: 257,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:11",
        {
          _index: 239,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:19",
        {
          _index: 248,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:32",
        {
          _index: 250,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:38",
        {
          _index: 253,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:50",
        {
          _index: 244,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/admin/adminservices.ts:63",
        {
          _index: 246,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "src/views/src/services/api/api.service.ts",
        {
          _index: 279,
          title: {},
          body: { "injectables/ApiService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/api/api.service.ts:11",
        { _index: 291, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:16",
        { _index: 302, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:22",
        { _index: 294, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:28",
        { _index: 300, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:42",
        { _index: 311, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:58",
        { _index: 309, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:65",
        { _index: 298, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:77",
        { _index: 296, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:84",
        { _index: 307, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/api/api.service.ts:91",
        { _index: 304, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "src/views/src/services/auth",
        {
          _index: 476,
          title: {},
          body: { "guards/AuthGuardService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/messageservice.ts",
        {
          _index: 1272,
          title: {},
          body: { "injectables/MessageService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/messageservice.ts:10",
        {
          _index: 1273,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/messageservice.ts:15",
        {
          _index: 1275,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/socketservice.ts",
        {
          _index: 1642,
          title: {},
          body: { "injectables/SocketService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/socketservice.ts:12",
        {
          _index: 1648,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/socketservice.ts:17",
        {
          _index: 1646,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "src/views/src/services/messages/socketservice.ts:8",
        {
          _index: 1645,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts",
        {
          _index: 1548,
          title: {},
          body: { "injectables/PostService.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:10",
        {
          _index: 1565,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:11",
        {
          _index: 1551,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:20",
        {
          _index: 1558,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:25",
        {
          _index: 1557,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:30",
        {
          _index: 1560,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:47",
        {
          _index: 1553,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:54",
        {
          _index: 1564,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:72",
        {
          _index: 1562,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/services/post/post.service.ts:84",
        {
          _index: 1555,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "src/views/src/store/categoryrepository.ts",
        {
          _index: 1979,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/views/src/store/store.ts",
        {
          _index: 1980,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/views/src/test.ts",
        {
          _index: 1981,
          title: {},
          body: { "coverage.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "src/views/src/utils/button/button.component.ts",
        {
          _index: 482,
          title: {},
          body: { "components/ButtonComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/utils/button/button.component.ts:10",
        {
          _index: 489,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/button/button.component.ts:12",
        {
          _index: 490,
          title: {},
          body: { "components/ButtonComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/button/button.module.ts",
        { _index: 513, title: {}, body: { "modules/ButtonModule.html": {} } },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts",
        {
          _index: 646,
          title: {},
          body: { "components/ChartComponent.html": {}, "coverage.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts:12",
        {
          _index: 652,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts:13",
        {
          _index: 648,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts:14",
        {
          _index: 647,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts:15",
        {
          _index: 649,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts:17",
        {
          _index: 650,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.component.ts:33",
        {
          _index: 651,
          title: {},
          body: { "components/ChartComponent.html": {} },
        },
      ],
      [
        "src/views/src/utils/chart/chart.module.ts",
        { _index: 658, title: {}, body: { "modules/ChartModule.html": {} } },
      ],
      [
        "staff",
        {
          _index: 2080,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "standard",
        { _index: 2019, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "start",
        {
          _index: 587,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      ["started", { _index: 2046, title: { "index.html": {} }, body: {} }],
      [
        "state",
        {
          _index: 214,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "statements",
        { _index: 1938, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "static",
        {
          _index: 9,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/QueryResponse.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "status",
        {
          _index: 963,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "interfaces/IPost.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "status(401",
        {
          _index: 1524,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "status(404",
        {
          _index: 1041,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "sticky",
        {
          _index: 664,
          title: {},
          body: {
            "components/ChatBoxComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "storage",
        {
          _index: 1950,
          title: {},
          body: {
            "coverage.html": {},
            "dependencies.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "store",
        {
          _index: 221,
          title: {},
          body: {
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "guards/AuthGuardService.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "injectables/SocketService.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "store(req",
        {
          _index: 1500,
          title: {},
          body: {
            "classes/PostController.html": {},
            "classes/UserIssueController.html": {},
          },
        },
      ],
      [
        "store.state",
        {
          _index: 256,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "store.state.apihost",
        {
          _index: 317,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "components/CarouselComponent.html": {},
            "injectables/MessageService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "store.state.authtoken",
        {
          _index: 625,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "store.state.authtoken).subscribe((data",
        {
          _index: 1013,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "store.state.isadmin",
        { _index: 225, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "store.state.isloggedin",
        {
          _index: 480,
          title: {},
          body: { "guards/AuthGuardService.html": {} },
        },
      ],
      [
        "store.state.user.id",
        {
          _index: 1654,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "storeissue",
        {
          _index: 1045,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "storeissues",
        {
          _index: 235,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "storeissues(payload",
        {
          _index: 249,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "storepost",
        {
          _index: 1550,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "storepost(post",
        {
          _index: 1559,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "storeprofileimage",
        {
          _index: 1023,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "storeprofileimage(req",
        {
          _index: 1028,
          title: {},
          body: { "classes/ImageController.html": {} },
        },
      ],
      [
        "strategy(options",
        {
          _index: 2284,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "stream",
        { _index: 1997, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "string",
        {
          _index: 242,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      ["structure", { _index: 2090, title: {}, body: { "index.html": {} } }],
      [
        "students",
        {
          _index: 2068,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "study",
        {
          _index: 2255,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["stuff", { _index: 2084, title: {}, body: { "index.html": {} } }],
      [
        "style",
        {
          _index: 552,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "styles",
        {
          _index: 63,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "styleurls",
        {
          _index: 73,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "subject",
        {
          _index: 964,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "components/IssueComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "submit",
        {
          _index: 734,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "submitpost",
        {
          _index: 683,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "success",
        {
          _index: 44,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AppComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "interfaces/Error.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "classes/MessageController.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Result.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "successful",
        {
          _index: 1731,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "successfully",
        {
          _index: 726,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "successfuly",
        {
          _index: 1704,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["sufiya", { _index: 2051, title: {}, body: { "index.html": {} } }],
      [
        "sum",
        {
          _index: 1547,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      ["support", { _index: 2196, title: {}, body: { "modules.html": {} } }],
      [
        "sure",
        {
          _index: 1835,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      ["svg", { _index: 2197, title: {}, body: { "modules.html": {} } }],
      [
        "tab",
        {
          _index: 1214,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "tab').foreach((element",
        {
          _index: 1212,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "tab')?.id",
        {
          _index: 1222,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "table",
        {
          _index: 1477,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
          },
        },
      ],
      [
        "tablesort(document.getelementbyid('coverage",
        { _index: 1984, title: {}, body: { "coverage.html": {} } },
      ],
      [
        "tablet",
        {
          _index: 896,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "td",
        {
          _index: 1475,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "teaching",
        {
          _index: 2078,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      ["technische", { _index: 2059, title: {}, body: { "index.html": {} } }],
      [
        "tempdata",
        {
          _index: 628,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "tempdata.push(post.count",
        {
          _index: 631,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "template",
        {
          _index: 62,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "templates/search",
        {
          _index: 737,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "templateurl",
        {
          _index: 75,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "text",
        {
          _index: 351,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IPost.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "textarea",
        {
          _index: 1071,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "th",
        {
          _index: 1476,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "thd",
        {
          _index: 506,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/FooterComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "then((resp",
        {
          _index: 1541,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "then((result",
        {
          _index: 1726,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "then((user",
        { _index: 54, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      [
        "then(async",
        {
          _index: 1722,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "this._api.deleteuser(this._state.user",
        {
          _index: 1840,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._api.getoffersbyuser(token)).subscribe((data",
        {
          _index: 1825,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._api.getprofile(this._state.user.id",
        {
          _index: 1819,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._api.updatepassword(this._state.user.id",
        {
          _index: 1849,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._api.updateprofile(this.user.id",
        {
          _index: 1816,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._api.uploadprofilepicture(this.user.id",
        {
          _index: 1815,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._apiservice.authenticateuser(user",
        {
          _index: 1098,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "this._file",
        {
          _index: 705,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        'this._flashmesgsrvc.show("please',
        {
          _index: 715,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        'this._flashmesgsrvc.show("you',
        {
          _index: 725,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        'this._flashmessagesservice.show("please',
        {
          _index: 1913,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        'this._flashmessagesservice.show("you',
        {
          _index: 1918,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        'this._flashmsgsrvc.show("something',
        {
          _index: 1843,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        'this._flashmsgsrvc.show("succesfully',
        {
          _index: 1818,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        'this._flashmsgsrvc.show("successfully',
        {
          _index: 1841,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._flashmsgsrvc.show(resp.message",
        {
          _index: 1851,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._headers",
        {
          _index: 322,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        'this._headers.append("content',
        { _index: 315, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "this._headers.append('authorization",
        { _index: 324, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "this._headers.append('content",
        {
          _index: 1566,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        'this._headers.set("authorization',
        {
          _index: 1574,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "this._headers.set('authorization",
        { _index: 339, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "this._httpclient.get(url",
        {
          _index: 325,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "injectables/MessageService.html": {},
          },
        },
      ],
      [
        "this._offer._id",
        {
          _index: 1419,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offer.description",
        {
          _index: 1403,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offer.image.foreach((img",
        {
          _index: 1416,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offer.image.length",
        {
          _index: 1406,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offer.price",
        {
          _index: 1402,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offer.title",
        {
          _index: 1404,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offered_by",
        {
          _index: 1397,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._offered_by.id",
        {
          _index: 1408,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._postservce.update(id",
        {
          _index: 1427,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._postservice.getposts",
        {
          _index: 847,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this._postservice.storepost(post",
        {
          _index: 723,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "this._router.navigate",
        {
          _index: 1107,
          title: {},
          body: { "components/LoginComponent.html": {} },
        },
      ],
      [
        "this._router.navigate(['/login",
        {
          _index: 1322,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "this._router.navigatebyurl",
        {
          _index: 728,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "this._state",
        {
          _index: 831,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this._state.apihost",
        {
          _index: 266,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/DashboardComponent.html": {},
            "injectables/PostService.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this._state.authtoken",
        {
          _index: 1205,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this._state.isloggedin",
        {
          _index: 1320,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "this._state.user.id",
        {
          _index: 1203,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "this._state.user.name",
        {
          _index: 1569,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "this._state?.apihost",
        {
          _index: 1407,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this._useroffers",
        {
          _index: 1826,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this._useroffers.slice(this.start",
        {
          _index: 1832,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.activatebody(reciever",
        {
          _index: 1226,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.activatebody(this.senders[0].id",
        {
          _index: 1200,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.adminapi.destroyuser(id",
        {
          _index: 1017,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.adminapi.getusers(store.state.authtoken).subscribe((data",
        {
          _index: 1007,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.adminapi.updaterole(id",
        {
          _index: 1011,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.adminservice.getoffers().subscribe((data",
        {
          _index: 1465,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "this.adminservice.storeissues(issue).subscribe((data",
        {
          _index: 1060,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "this.api.registeruser(user",
        {
          _index: 1916,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "this.apiservice.resetpassword(this.email",
        {
          _index: 1610,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "this.body",
        {
          _index: 1055,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "this.breakpointobserver.observe(breakpoints.handset",
        {
          _index: 1305,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "this.category",
        {
          _index: 708,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "this.categorychange.emit(value",
        {
          _index: 938,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "this.categoryselect.emit(value.tostring",
        {
          _index: 937,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "this.chart",
        {
          _index: 635,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.chart.resize(600",
        {
          _index: 644,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.checkifmatch",
        {
          _index: 1911,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "this.createchart",
        {
          _index: 634,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.datasets",
        {
          _index: 641,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.datasets.push({label",
        {
          _index: 632,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.description",
        {
          _index: 709,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "this.displayerrormessage",
        {
          _index: 1100,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "this.editing",
        {
          _index: 1016,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.email",
        {
          _index: 1096,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "this.emitcategory.emit(category",
        {
          _index: 540,
          title: {},
          body: { "components/CarouselComponent.html": {} },
        },
      ],
      [
        "this.end",
        {
          _index: 842,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this.error",
        {
          _index: 1846,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.errormessage",
        {
          _index: 1101,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "this.featured",
        {
          _index: 860,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.featured.foreach((feature",
        {
          _index: 857,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.featured.push(post.category",
        {
          _index: 856,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.featured.splice(index",
        {
          _index: 859,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        'this.flashmessages.show("successfully',
        {
          _index: 1411,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        'this.flashmessages.show("updated',
        {
          _index: 1429,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.flashmessages.show(data.message",
        {
          _index: 1430,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.flashmessages.show(error.message",
        {
          _index: 1423,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.flashmessages.show(success.message",
        {
          _index: 1421,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        'this.flashmessageservice.show("email',
        {
          _index: 1611,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        'this.flashmessageservice.show("please',
        {
          _index: 1604,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "this.flashmessageservice.show(resp.message",
        {
          _index: 1613,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "this.flashmsg.show",
        {
          _index: 1014,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.grouppedmessages",
        {
          _index: 1207,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.headers",
        {
          _index: 1280,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        'this.headers.append("content',
        {
          _index: 1276,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        'this.headers.set("content',
        {
          _index: 261,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        'this.headers?.set("authorization',
        {
          _index: 1279,
          title: {},
          body: { "injectables/MessageService.html": {} },
        },
      ],
      [
        "this.http.delete(url",
        {
          _index: 275,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "this.http.get(url",
        {
          _index: 268,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "this.http.post(url",
        {
          _index: 271,
          title: {},
          body: { "injectables/AdminService.html": {} },
        },
      ],
      [
        "this.http.request('put",
        {
          _index: 1582,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "this.image",
        {
          _index: 1414,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.imagelength",
        {
          _index: 1405,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.imageurl",
        {
          _index: 1822,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.isactive",
        {
          _index: 1424,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.isloggedin",
        {
          _index: 1319,
          title: {},
          body: {
            "components/NavBarComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "this.ismobile",
        {
          _index: 1176,
          title: {},
          body: {
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "this.issuer_email",
        {
          _index: 1059,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "this.issuer_name",
        {
          _index: 1053,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "this.istokenexpired(this.authtoken",
        {
          _index: 2296,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "this.labels",
        {
          _index: 640,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.message",
        {
          _index: 1412,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.messagelength",
        {
          _index: 1198,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.messages",
        {
          _index: 1177,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.messages.length",
        {
          _index: 1199,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.messageservice.getmessages(receiver",
        {
          _index: 1204,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.name",
        {
          _index: 1915,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "this.new_password",
        {
          _index: 1844,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.ngoninit",
        {
          _index: 861,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.numberofpages",
        {
          _index: 852,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this.offerlookup.emit(value.tostring",
        {
          _index: 1636,
          title: {},
          body: { "components/SearchComponent.html": {} },
        },
      ],
      [
        "this.offers",
        {
          _index: 1466,
          title: {},
          body: { "components/OffersComponent.html": {} },
        },
      ],
      [
        "this.old_password",
        {
          _index: 1848,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.outgoing",
        {
          _index: 1223,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.pagenumber",
        {
          _index: 865,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this.paginatedoffers",
        {
          _index: 1827,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.paginatedposts",
        {
          _index: 849,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.paginateoffers",
        {
          _index: 1828,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.paginateposts().map((post",
        {
          _index: 850,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.password",
        {
          _index: 1097,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "this.passwordnotmatch",
        {
          _index: 1910,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "this.perpage",
        {
          _index: 1799,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.post.getcountbycategory(token).subscribe((data",
        {
          _index: 626,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.postperpage",
        {
          _index: 812,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.posts",
        {
          _index: 846,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.posts.filter((post",
        {
          _index: 872,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.postservices.destroyoffer(id",
        {
          _index: 1852,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.price",
        {
          _index: 710,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "this.price?.tostring",
        {
          _index: 1426,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.pricefilter.emit(value",
        {
          _index: 939,
          title: {},
          body: { "components/DashboardSidebarComponent.html": {} },
        },
      ],
      [
        "this.repeat_password",
        {
          _index: 1845,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "this.resizeobservable$.subscribe",
        {
          _index: 844,
          title: {},
          body: { "components/DashboardComponent.html": {} },
        },
      ],
      [
        "this.role",
        {
          _index: 1012,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "this.router.navigate",
        { _index: 226, title: {}, body: { "guards/AdminGuard.html": {} } },
      ],
      [
        "this.router.navigate(['/login",
        {
          _index: 481,
          title: {},
          body: {
            "guards/AuthGuardService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "this.router.navigatebyurl",
        {
          _index: 1062,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "this.router.navigatebyurl(`offers/${id",
        {
          _index: 1856,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.senders",
        {
          _index: 1179,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.senders.push({id",
        {
          _index: 1190,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.senders.sort((a",
        {
          _index: 1194,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.showtooltip",
        {
          _index: 1830,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        'this.socket.emit("private',
        {
          _index: 1409,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "this.socket.emit('private",
        {
          _index: 1651,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "this.socket.fromevent('private",
        {
          _index: 1653,
          title: {},
          body: { "injectables/SocketService.html": {} },
        },
      ],
      [
        "this.socket.onfetchmessages().subscribe((msg",
        {
          _index: 1201,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.socket.sendmessages({reciever",
        {
          _index: 1224,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "this.start",
        {
          _index: 866,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "this.subject",
        {
          _index: 1054,
          title: {},
          body: { "components/IssueComponent.html": {} },
        },
      ],
      [
        "this.title",
        {
          _index: 707,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/OfferComponent.html": {},
          },
        },
      ],
      [
        "this.type",
        {
          _index: 637,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "this.user",
        {
          _index: 1817,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.user)).subscribe((data",
        {
          _index: 1820,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.user.avatar",
        {
          _index: 1821,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "this.user.role",
        {
          _index: 2300,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "this.users",
        {
          _index: 1009,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["through", { _index: 2176, title: {}, body: { "index.html": {} } }],
      [
        "time",
        {
          _index: 965,
          title: {},
          body: {
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "classes/UserIssueController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "timeout",
        {
          _index: 1057,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "title",
        {
          _index: 681,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IPost.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "components/UserProfileComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "togglealert",
        {
          _index: 1895,
          title: {},
          body: { "components/UserRegistrationComponent.html": {} },
        },
      ],
      [
        "toggletooltip",
        {
          _index: 1778,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "token",
        {
          _index: 243,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "toolbar",
        {
          _index: 1334,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "toolbar.mat",
        {
          _index: 1327,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "top",
        {
          _index: 100,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "tr",
        {
          _index: 1474,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "transform",
        {
          _index: 497,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "translate",
        {
          _index: 542,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "translate.addlangs(['en",
        {
          _index: 832,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "translate.getbrowserlang",
        {
          _index: 836,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "translate.setdefaultlang('en",
        {
          _index: 834,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "translate.use(browserlangs?.match(/en|de",
        {
          _index: 837,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "translate/core",
        {
          _index: 431,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "translate/http",
        { _index: 433, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translatehttploader",
        { _index: 432, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translatehttploader(http",
        {
          _index: 445,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "translateloader",
        { _index: 430, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translatemodule",
        {
          _index: 429,
          title: {},
          body: {
            "modules/AppModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "translatemodule.forroot",
        { _index: 448, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "translateservice",
        {
          _index: 780,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "modules/DashboardModule.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/IssueComponent.html": {},
            "modules/IssueModule.html": {},
            "components/LoginComponent.html": {},
            "modules/LoginModule.html": {},
            "components/NavBarComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
          },
        },
      ],
      [
        "translatey",
        {
          _index: 1349,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "translatey(8px",
        {
          _index: 1347,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "transparent",
        {
          _index: 1337,
          title: {},
          body: { "components/NavBarComponent.html": {} },
        },
      ],
      [
        "transporter",
        {
          _index: 1688,
          title: {},
          body: {
            "classes/UserController.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "transporter.sendmail",
        {
          _index: 1741,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "trash",
        {
          _index: 1480,
          title: {},
          body: {
            "components/OffersComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "tree",
        {
          _index: 65,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "true",
        {
          _index: 49,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "guards/AuthGuardService.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IUser.html": {},
            "classes/ImageController.html": {},
            "components/LoginComponent.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "try",
        {
          _index: 721,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "components/ResetPasswordComponent.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "trying",
        {
          _index: 2276,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["ts", { _index: 2037, title: {}, body: { "dependencies.html": {} } }],
      [
        "tslint",
        { _index: 2040, title: {}, body: { "dependencies.html": {} } },
      ],
      ["two", { _index: 2123, title: {}, body: { "index.html": {} } }],
      [
        "type",
        {
          _index: 22,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "guards/AdminGuard.html": {},
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "guards/AuthGuardService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "interfaces/Error.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IIssue.html": {},
            "interfaces/IMessage.html": {},
            "interfaces/IPost.html": {},
            "interfaces/IRequestOptions.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "classes/MessageController.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/QueryResponse.html": {},
            "components/ResetPasswordComponent.html": {},
            "interfaces/Result.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "miscellaneous/functions.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "typeof",
        {
          _index: 1814,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "types/bcrypt",
        { _index: 1986, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/body",
        { _index: 1988, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/cors",
        { _index: 1991, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/express",
        { _index: 1993, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/gridfs",
        { _index: 1996, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/jsonwebtoken",
        { _index: 1999, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/multer",
        { _index: 2001, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/nodemailer",
        { _index: 2005, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/passport",
        { _index: 2007, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "types/socket.io",
        { _index: 2010, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "typescript",
        { _index: 2020, title: {}, body: { "dependencies.html": {} } },
      ],
      [
        "undefined",
        {
          _index: 606,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "interfaces/IDataset.html": {},
            "interfaces/IRequestOptions.html": {},
            "components/IssueComponent.html": {},
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "unique",
        {
          _index: 998,
          title: {},
          body: {
            "interfaces/IUser.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "university",
        {
          _index: 2054,
          title: {},
          body: { "index.html": {}, "properties.html": {} },
        },
      ],
      [
        "unknown",
        {
          _index: 26,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "injectables/ApiService.html": {},
            "classes/ImageController.html": {},
            "classes/MessageController.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
            "classes/UserController.html": {},
            "classes/UserIssueController.html": {},
          },
        },
      ],
      [
        "unset",
        {
          _index: 505,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      ["up", { _index: 2116, title: {}, body: { "index.html": {} } }],
      [
        "update",
        {
          _index: 1437,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "injectables/PostService.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "update(id",
        {
          _index: 1561,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "updated",
        {
          _index: 1015,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "updatepassword",
        {
          _index: 287,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "updatepassword(id",
        { _index: 306, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "updatepassword(req",
        {
          _index: 1682,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "updatepost",
        {
          _index: 1489,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "updatepost(req",
        {
          _index: 1502,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "updateprofile",
        {
          _index: 288,
          title: {},
          body: {
            "injectables/ApiService.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "updateprofile(id",
        { _index: 308, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "updateprofile(req",
        {
          _index: 1684,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "updaterole",
        {
          _index: 236,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "updaterole(id",
        {
          _index: 252,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "updateuserrole",
        { _index: 12, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      [
        "updateuserrole(req",
        { _index: 27, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      ["updating", { _index: 2188, title: {}, body: { "index.html": {} } }],
      [
        "upload",
        {
          _index: 731,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/UserProfileComponent.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "uploadfile",
        {
          _index: 684,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "uploadmoreimages",
        {
          _index: 1418,
          title: {},
          body: {
            "components/OfferComponent.html": {},
            "classes/PostController.html": {},
            "injectables/PostService.html": {},
          },
        },
      ],
      [
        "uploadmoreimages(id",
        {
          _index: 1563,
          title: {},
          body: { "injectables/PostService.html": {} },
        },
      ],
      [
        "uploadmoreimages(req",
        {
          _index: 1504,
          title: {},
          body: { "classes/PostController.html": {} },
        },
      ],
      [
        "uploadprofilepicture",
        { _index: 289, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "uploadprofilepicture(_id",
        { _index: 310, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "uploads",
        {
          _index: 2236,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "uppercase",
        {
          _index: 498,
          title: {},
          body: {
            "components/ButtonComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "url",
        {
          _index: 265,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "modules/AppModule.html": {},
            "injectables/MessageService.html": {},
            "injectables/PostService.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "url('../../assets/images/campus.jpeg",
        {
          _index: 1860,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "url('https://mdbcdn.b",
        {
          _index: 735,
          title: {},
          body: {
            "components/CreateNewItemComponent.html": {},
            "components/LoginComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["usage", { _index: 2161, title: {}, body: { "index.html": {} } }],
      [
        "use",
        {
          _index: 2168,
          title: {},
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      [
        "usefactory",
        { _index: 450, title: {}, body: { "modules/AppModule.html": {} } },
      ],
      [
        "usenewurlparser",
        {
          _index: 2265,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "user",
        {
          _index: 31,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "injectables/ApiService.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IUser.html": {},
            "interfaces/IUser-1.html": {},
            "classes/ImageController.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "index.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "user,this._headers",
        { _index: 320, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user.avatar",
        {
          _index: 1038,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "user.deleteone",
        {
          _index: 1720,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "user.email",
        {
          _index: 1712,
          title: {},
          body: {
            "classes/UserController.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user.find({}).sort",
        { _index: 37, title: {}, body: { "classes/AdminController.html": {} } },
      ],
      [
        "user.findbyid(id",
        {
          _index: 1732,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "user.findbyid(req.params.id",
        {
          _index: 1035,
          title: {},
          body: {
            "classes/ImageController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "user.findbyidandupdate(req.params.id",
        {
          _index: 50,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "classes/ImageController.html": {},
            "classes/UserController.html": {},
          },
        },
      ],
      [
        "user.findbyidandupdate(user._id",
        {
          _index: 1740,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "user.findone",
        {
          _index: 1733,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "user.id",
        {
          _index: 1710,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "user.name",
        {
          _index: 1711,
          title: {},
          body: {
            "classes/UserController.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user.password",
        {
          _index: 1708,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "user.role",
        {
          _index: 1713,
          title: {},
          body: {
            "classes/UserController.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "user/destroy",
        {
          _index: 274,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
          },
        },
      ],
      [
        "user/get",
        {
          _index: 1823,
          title: {},
          body: { "components/UserProfileComponent.html": {} },
        },
      ],
      [
        "user/login",
        { _index: 321, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user/profile/${id",
        { _index: 323, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user/register",
        { _index: 316, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user/reset",
        { _index: 344, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user/set",
        { _index: 327, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user/update",
        { _index: 337, title: {}, body: { "injectables/ApiService.html": {} } },
      ],
      [
        "user__offered",
        {
          _index: 1438,
          title: {},
          body: { "components/OfferComponent.html": {} },
        },
      ],
      [
        "user_id",
        {
          _index: 983,
          title: {},
          body: {
            "interfaces/IPost.html": {},
            "classes/PostController.html": {},
            "classes/UserController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "user_name",
        {
          _index: 984,
          title: {},
          body: {
            "interfaces/IPost.html": {},
            "classes/PostController.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "usercontroller",
        {
          _index: 1655,
          title: { "classes/UserController.html": {} },
          body: { "classes/UserController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "usercontroller.comparepassword(req.body.old_password",
        {
          _index: 1728,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "usercontroller.comparepassword(req.body.password",
        {
          _index: 1707,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "usercontroller.getuserbyemail(req.body.email",
        {
          _index: 1705,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      [
        "usercontroller.getuserbyid(jwtpayload?._user.id",
        {
          _index: 2289,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      [
        "userissuecontroller",
        {
          _index: 1751,
          title: { "classes/UserIssueController.html": {} },
          body: { "classes/UserIssueController.html": {}, "coverage.html": {} },
        },
      ],
      [
        "userprofilecomponent",
        {
          _index: 167,
          title: { "components/UserProfileComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "modules/UserProfileModule.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "userprofilemodule",
        {
          _index: 373,
          title: { "modules/UserProfileModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "userregistrationcomponent",
        {
          _index: 169,
          title: { "components/UserRegistrationComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "modules/AppRoutingModule.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "modules/UserRegistrationModule.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "userregistrationmodule",
        {
          _index: 374,
          title: { "modules/UserRegistrationModule.html": {} },
          body: {
            "modules/AppModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "modules.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "users",
        {
          _index: 35,
          title: {},
          body: {
            "classes/AdminController.html": {},
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "users.component.html",
        {
          _index: 1002,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "users.component.scss",
        {
          _index: 1003,
          title: {},
          body: {
            "interfaces/IUser-1.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      [
        "users/users.component",
        {
          _index: 197,
          title: {},
          body: { "modules/AdminDashboardModule.html": {} },
        },
      ],
      [
        "userschema",
        {
          _index: 997,
          title: {},
          body: {
            "interfaces/IUser.html": {},
            "coverage.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "userscomponent",
        {
          _index: 171,
          title: { "components/UsersComponent.html": {} },
          body: {
            "components/AdminDashboardComponent.html": {},
            "modules/AdminDashboardModule.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "interfaces/IUser-1.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "coverage.html": {},
            "overview.html": {},
          },
        },
      ],
      [
        "useunifiedtopology",
        {
          _index: 2278,
          title: {},
          body: { "miscellaneous/variables.html": {} },
        },
      ],
      ["using", { _index: 2077, title: {}, body: { "index.html": {} } }],
      ["v4", { _index: 2086, title: {}, body: { "index.html": {} } }],
      [
        "valid",
        {
          _index: 1608,
          title: {},
          body: {
            "components/ResetPasswordComponent.html": {},
            "index.html": {},
          },
        },
      ],
      [
        "validator",
        {
          _index: 711,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "validator.length",
        {
          _index: 714,
          title: {},
          body: { "components/CreateNewItemComponent.html": {} },
        },
      ],
      [
        "value",
        {
          _index: 255,
          title: {},
          body: {
            "injectables/AdminService.html": {},
            "injectables/ApiService.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "injectables/MessageService.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "injectables/PostService.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "values",
        {
          _index: 638,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "var",
        {
          _index: 123,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/AppComponent.html": {},
            "components/ButtonComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
          },
        },
      ],
      ["variable", { _index: 1941, title: {}, body: { "coverage.html": {} } }],
      [
        "variables",
        {
          _index: 2141,
          title: { "miscellaneous/variables.html": {} },
          body: { "index.html": {}, "miscellaneous/variables.html": {} },
        },
      ],
      ["version", { _index: 2203, title: {}, body: { "properties.html": {} } }],
      [
        "via",
        {
          _index: 1750,
          title: {},
          body: { "classes/UserController.html": {} },
        },
      ],
      ["view", { _index: 2105, title: {}, body: { "index.html": {} } }],
      ["views", { _index: 2111, title: {}, body: { "index.html": {} } }],
      [
        "void",
        {
          _index: 531,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/SearchComponent.html": {},
            "injectables/SocketService.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "components/UsersComponent.html": {},
            "miscellaneous/functions.html": {},
          },
        },
      ],
      [
        "w",
        {
          _index: 1602,
          title: {},
          body: { "components/ResetPasswordComponent.html": {} },
        },
      ],
      [
        "way",
        {
          _index: 1837,
          title: {},
          body: {
            "components/UserProfileComponent.html": {},
            "index.html": {},
          },
        },
      ],
      ["web", { _index: 2204, title: {}, body: { "properties.html": {} } }],
      [
        "webkit",
        {
          _index: 585,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "weight",
        {
          _index: 579,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      ["well", { _index: 2170, title: {}, body: { "index.html": {} } }],
      [
        "went",
        {
          _index: 1064,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "white",
        {
          _index: 357,
          title: {},
          body: {
            "components/AppComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "whitesmoke",
        {
          _index: 885,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
          },
        },
      ],
      ["whol", { _index: 2119, title: {}, body: { "index.html": {} } }],
      [
        "width",
        {
          _index: 83,
          title: {},
          body: {
            "components/AdminDashboardComponent.html": {},
            "components/CarouselComponent.html": {},
            "components/ChatBoxComponent.html": {},
            "components/CreateNewItemComponent.html": {},
            "components/DashboardComponent.html": {},
            "components/DashboardSidebarComponent.html": {},
            "components/FooterComponent.html": {},
            "components/IssueComponent.html": {},
            "components/LoginComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/OfferComponent.html": {},
            "components/OffersComponent.html": {},
            "components/ResetPasswordComponent.html": {},
            "components/SearchComponent.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "window.innerheight",
        {
          _index: 1218,
          title: {},
          body: { "components/MessageComponent.html": {} },
        },
      ],
      [
        "window.innerwidth",
        {
          _index: 840,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "window.location.reload",
        {
          _index: 1108,
          title: {},
          body: {
            "components/LoginComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/UserProfileComponent.html": {},
          },
        },
      ],
      [
        "window:resize",
        {
          _index: 778,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      [
        "window:resize(event",
        {
          _index: 783,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
            "components/NavBarComponent.html": {},
          },
        },
      ],
      ["winter", { _index: 2069, title: {}, body: { "index.html": {} } }],
      ["without", { _index: 2162, title: {}, body: { "index.html": {} } }],
      [
        "wrap",
        {
          _index: 890,
          title: {},
          body: {
            "components/DashboardComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "wrong",
        {
          _index: 1065,
          title: {},
          body: {
            "components/IssueComponent.html": {},
            "classes/UserController.html": {},
            "components/UserProfileComponent.html": {},
            "components/UserRegistrationComponent.html": {},
          },
        },
      ],
      [
        "x",
        {
          _index: 544,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/CategoryChartComponent.html": {},
            "components/ChartComponent.html": {},
            "interfaces/IDataset.html": {},
          },
        },
      ],
      [
        "y",
        {
          _index: 547,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/MessageComponent.html": {},
          },
        },
      ],
      [
        "yellow",
        {
          _index: 622,
          title: {},
          body: {
            "components/CategoryChartComponent.html": {},
            "interfaces/IDataset.html": {},
            "miscellaneous/variables.html": {},
          },
        },
      ],
      [
        "z",
        {
          _index: 573,
          title: {},
          body: {
            "components/CarouselComponent.html": {},
            "components/NavBarComponent.html": {},
            "components/SearchComponent.html": {},
          },
        },
      ],
      [
        "zoom",
        {
          _index: 182,
          title: {},
          body: {
            "modules/AdminDashboardModule.html": {},
            "modules/AppModule.html": {},
            "modules/ButtonModule.html": {},
            "modules/ChartModule.html": {},
            "modules/CreateNewItemModule.html": {},
            "modules/DashboardModule.html": {},
            "modules/IssueModule.html": {},
            "modules/LoginModule.html": {},
            "modules/MessageModule.html": {},
            "modules/OfferModule.html": {},
            "modules/ResetPasswordModule.html": {},
            "modules/UserProfileModule.html": {},
            "modules/UserRegistrationModule.html": {},
            "overview.html": {},
          },
        },
      ],
    ],
    pipeline: ["stemmer"],
  },
  store: {
    "classes/AdminController.html": {
      url: "classes/AdminController.html",
      title: "class - AdminController",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/AdminController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getUsers\n                            \n                            \n                                    Static\n                                    Async\n                                updateUserRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/AdminController.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        updateUserRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserRole(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/AdminController.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\nimport { User } from '../models/User'\n\nexport class AdminController {\n  static async getUsers (req: Request, res: Response) {\n    const users = await User.find({}).sort({ name: 'ascending' }).exec()\n\n    if (users == null) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: 'No users found'\n        })\n    }\n\n    return res.json({\n      success: true,\n      users\n    })\n  }\n\n  static async updateUserRole (req: Request, res: Response) {\n    await User.findByIdAndUpdate(req.params.id, { $set: { role: req.body.role } })\n      .then((user) => {\n        return res.json({\n          success: true,\n          message: user\n        })\n      })\n      .catch((error) => {\n        return res.json({\n          success: false,\n          message: error.message\n        })\n      })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/AdminDashboardComponent.html": {
      url: "components/AdminDashboardComponent.html",
      title: "component - AdminDashboardComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  AdminDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/admin/dashboard/admin-dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-dashboard\n            \n\n            \n                styleUrls\n                ./admin-dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./admin-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-admin-dashboard',\n    templateUrl: './admin-dashboard.component.html',\n    styleUrls: ['./admin-dashboard.component.scss']\n})\n\nexport class AdminDashboardComponent {\n    \n}\n    \n\n    \n        \n    \n    \n    \n        \n            \n            \n        \n        \n          \n        \n    \n\n\n    \n\n    \n                \n                    ./admin-dashboard.component.scss\n                \n                @import '../../../assets/sass/mixins';\n\n.container{\n    display: flex;\n    max-width: 100vw;\n    background-color: #fff;\n    gap: 20px;\n    padding: 20px;\n    min-height: 100vh;\n    align-items: center;\n    justify-content: center;\n    margin-top: 100px;\n    .section {\n        border-radius: 4px;\n        box-shadow: 0 0 2px 2px rgb(181, 174, 174);\n        width: 100%;\n    }\n    .sidebar{\n        display: flex;\n\n    }\n    .content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n    }\n    .top, .middle {\n        display: flex;\n        gap: 20px;\n      width: 100%;\n      @include mobile {\n        flex-direction: column;\n      }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                  '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/AdminDashboardModule.html": {
      url: "modules/AdminDashboardModule.html",
      title: "module - AdminDashboardModule",
      body: '\n                   \n\n\n\n\n    Modules\n    AdminDashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminDashboardModule\n\n\n\ncluster_AdminDashboardModule_declarations\n\n\n\ncluster_AdminDashboardModule_providers\n\n\n\n\nAdminDashboardComponent\n\nAdminDashboardComponent\n\n\n\nAdminDashboardModule\n\nAdminDashboardModule\n\nAdminDashboardModule -->\n\nAdminDashboardComponent->AdminDashboardModule\n\n\n\n\n\nCategoryChartComponent\n\nCategoryChartComponent\n\nAdminDashboardModule -->\n\nCategoryChartComponent->AdminDashboardModule\n\n\n\n\n\nOffersComponent\n\nOffersComponent\n\nAdminDashboardModule -->\n\nOffersComponent->AdminDashboardModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAdminDashboardModule -->\n\nUsersComponent->AdminDashboardModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminDashboardModule -->\n\nAdminService->AdminDashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/admin/dashboard/admin-dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminDashboardComponent\n                        \n                        \n                            CategoryChartComponent\n                        \n                        \n                            OffersComponent\n                        \n                        \n                            UsersComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { AdminDashboardComponent } from "./admin-dashboard.component";\nimport { AdminService } from "src/services/admin/AdminServices";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\nimport { BrowserAnimationsModule } from "@angular/platform-browser/animations";\nimport { UsersComponent } from "../users/users.component";\nimport { CategoryChartComponent } from "../category-chart/category-chart.component";\nimport {OffersComponent} from "../offers/offers.component";\n\n@NgModule({\n    declarations: [\n        AdminDashboardComponent,\n        UsersComponent,\n        CategoryChartComponent,\n        OffersComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        BrowserAnimationsModule,\n    ],\n    providers: [AdminService]\n\n})\n\nexport class AdminDashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "guards/AdminGuard.html": {
      url: "guards/AdminGuard.html",
      title: "guard - AdminGuard",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/views/src/services/admin-guard/AdminGuard.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/admin-guard/AdminGuard.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/admin-guard/AdminGuard.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from "@angular/core";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from "@angular/router";\nimport { store } from "src/store/store";\n\n@Injectable()\n\nexport class AdminGuard implements CanActivate {\n\tconstructor(private router: Router) {}\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean{\n\t\tif (store.state.isAdmin()) return true;\n\t\telse {\n\t\t\tthis.router.navigate([\'/\']);\n\t\t\treturn false ;\n\t\t}\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/AdminService.html": {
      url: "injectables/AdminService.html",
      title: "injectable - AdminService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/services/admin/AdminServices.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _state\n                            \n                            \n                                    Private\n                                headers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyUser\n                            \n                            \n                                getOffers\n                            \n                            \n                                getUsers\n                            \n                            \n                                storeIssues\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/admin/AdminServices.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyUser\n                        \n                    \n                \n            \n            \n                \ndestroyUser(id: string, token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/admin/AdminServices.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOffers\n                        \n                    \n                \n            \n            \n                \ngetOffers()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/admin/AdminServices.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/admin/AdminServices.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeIssues\n                        \n                    \n                \n            \n            \n                \nstoreIssues(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/admin/AdminServices.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(id: string, role: string, token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/admin/AdminServices.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : store.state\n                    \n                \n                    \n                        \n                                Defined in src/views/src/services/admin/AdminServices.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Headers | any\n\n                    \n                \n                \n                    \n                        Default value : new Headers()\n                    \n                \n                    \n                        \n                                Defined in src/views/src/services/admin/AdminServices.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { store } from \"src/store/store\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AdminService {\n    _state: any = store.state;\n    private headers: Headers | any = new Headers();\n\n    constructor(\n        private http: HttpClient,\n    ) {\n        this.headers.set(\"content-type\", \"application/json\");\n    }\n\n    getUsers(token: any) {\n        const path = '/admin/getAllUsers';\n        const url = this._state.apiHost + path;\n        console.log(token)\n\n        return this.http.get(url, {\n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/json'\n              },\n        });\n    }\n\n    storeIssues(payload: any) {\n        const path = '/admin/issues';\n        const url = this._state.apiHost + path;\n        return this.http.post(url, payload);\n    }\n\n    updateRole(id: string, role: string, token: any) {\n        const path = `/admin/update-role/${id}`\n        const url = this._state.apiHost + path;\n        const payload = { role };\n        return this.http.post(url, payload, {\n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/json'\n              },\n        });\n    }\n\n    destroyUser(id: string, token: any) {\n        const path = `/user/destroy`\n        const url = this._state.apiHost + path;\n        const payload = { id };\n        return this.http.delete(url, {\n            headers: {\n                'Authorization': token,\n                'Content-Type': 'application/json'\n              },\n            body: payload\n        })\n    }\n\n    getOffers() {\n      const path = '/posts';\n      const url = this._state.apiHost + path;\n      return this.http.get(url);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/ApiService.html": {
      url: "injectables/ApiService.html",
      title: "injectable - ApiService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _headers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticateUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                getOffersByUser\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                registerUser\n                            \n                            \n                                resetPassword\n                            \n                            \n                                updatePassword\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                uploadProfilePicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/api/api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticateUser\n                        \n                    \n                \n            \n            \n                \nauthenticateUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(user: any, token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getOffersByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOffersByUser(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(id: any, token: any, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(id: any, payload: any, token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(id: string, token: string, user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadProfilePicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadProfilePicture(_id: string, token: string, file: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/api/api.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Headers()\n                    \n                \n                    \n                        \n                                Defined in src/views/src/services/api/api.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { sendRequest } from 'src/helpers/helpers';\nimport { store } from 'src/store/store';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  _headers = new Headers();\n  constructor(private _httpClient: HttpClient) {\n    this._headers.append(\"Content-Type\", \"application/json\");\n  }\n\n  registerUser(user: any) {\n    const path = '/user/register';\n    const url = store.state.apiHost + path;\n    return sendRequest(url, 'POST', user,this._headers);\n  }\n\n  authenticateUser(user: any) {\n    const path = '/user/login';\n    const url = store.state.apiHost + path;\n    return sendRequest(url, 'POST', user, this._headers);\n  }\n\n  async getProfile(id: any, token: any, user: any = \"\") {\n    const path = `/user/profile/${id}`;\n    const url = store.state.apiHost + path; \n    this._headers.append('Authorization', token);\n   \n    return this._httpClient.get(url, {\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json'\n    });\n  }\n\n  async uploadProfilePicture(_id: string, token: string, file: any) {\n    const path = `/user/set-profile/${_id}`\n    const url = store.state.apiHost + path; \n    const _headers = new Headers();\n    _headers.append(\"Authorization\", token);\n    const formdata = new FormData();\n    formdata.append(\"avatar\", file, file.name);\n    const requestOptions= {\n      method: 'POST',\n      headers: _headers,\n      body: formdata\n    };\n\n    return await (await fetch(url, requestOptions)).json()\n  }\n\n  async updateProfile(id: string, token: string, user: any) {\n    const path = `/user/update-profile/${id}`\n    const url = store.state.apiHost + path; \n    this._headers.set('Authorization', token);\n    return await sendRequest(url, 'PUT', user, this._headers);\n  }\n\n  async getOffersByUser(token: string) {\n    const path = `/posts/${store.state.user.id}`;\n    const url = store.state.apiHost + path;\n    return this._httpClient.get(url, {\n      headers: {\n        'Authorization': token,\n        'Content-Type': 'application/json'\n      },\n      responseType: 'json'\n    });\n  }\n\n  deleteUser(user: any, token: any) {\n    const path = `/user/destroy`;\n    const url = store.state.apiHost + path;\n    this._headers.set('Authorization', token);\n    return sendRequest(url, 'DELETE', user, this._headers);\n  }\n\n  updatePassword(id: any, payload: any, token: any) {\n    const path = `/user/update-password/${id}`;\n    const url = store.state.apiHost + path;\n    this._headers.set('Authorization', token);\n    return sendRequest(url, 'PUT', payload, this._headers);\n  }\n\n  resetPassword(email: string) {\n    const path = `/user/reset-password/${email}`;\n    const url = store.state.apiHost + path;\n    return sendRequest(url, 'GET', \"\", this._headers);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/AppComponent.html": {
      url: "components/AppComponent.html",
      title: "component - AppComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import '../assets/sass/variables.scss';\nh1 {\n    color: $text-color;\n}\n\n.alert-success {\n    background-color: rgba(7, 78, 7, 0.654);\n    color: white;\n    display: flex;\n    justify-content: center;\n    padding: 15px;\n}\n\n.container {\n    min-height: 100vh;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/AppModule.html": {
      url: "modules/AppModule.html",
      title: "module - AppModule",
      body: "\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAdminDashboardModule\n\nAdminDashboardModule\n\nAppModule -->\n\nAdminDashboardModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCreateNewItemModule\n\nCreateNewItemModule\n\nAppModule -->\n\nCreateNewItemModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nIssueModule\n\nIssueModule\n\nAppModule -->\n\nIssueModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nMessageModule\n\nMessageModule\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\n\n\nOfferModule\n\nOfferModule\n\nAppModule -->\n\nOfferModule->AppModule\n\n\n\n\n\nResetPasswordModule\n\nResetPasswordModule\n\nAppModule -->\n\nResetPasswordModule->AppModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nAppModule -->\n\nUserProfileModule->AppModule\n\n\n\n\n\nUserRegistrationModule\n\nUserRegistrationModule\n\nAppModule -->\n\nUserRegistrationModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nAppModule -->\n\nMessageService->AppModule\n\n\n\n\n\nPostService\n\nPostService\n\nAppModule -->\n\nPostService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            NavBarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                        \n                            MessageService\n                        \n                        \n                            PostService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminDashboardModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            CreateNewItemModule\n                        \n                        \n                            DashboardModule\n                        \n                        \n                            IssueModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            MessageModule\n                        \n                        \n                            OfferModule\n                        \n                        \n                            ResetPasswordModule\n                        \n                        \n                            UserProfileModule\n                        \n                        \n                            UserRegistrationModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'flash-messages-angular';\nimport { UserProfileModule } from 'src/components/user-profile/user-profile.module';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { CreateNewItemModule } from 'src/components/create-new-item/create-new-item.module';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavBarComponent } from '../components/nav-bar/nav-bar.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { UserRegistrationModule } from 'src/components/user-registration/user-registration.modules';\nimport { ApiService } from 'src/services/api/api.service';\nimport { LoginModule } from 'src/components/login/login.module';\nimport { AuthGuardService } from 'src/services/auth-guard/auth-guard.service';\nimport { PostService } from 'src/services/post/post.service';\nimport { DashboardModule } from 'src/components/dashboard/dashboard.module';\nimport { OfferModule } from 'src/components/single-offer/offer.module';\nimport { store } from 'src/store/store';\nimport { MessageService } from 'src/services/messages/MessageService';\nimport { MessageModule } from 'src/components/message/message.module';\nimport { FooterComponent } from 'src/components/footer/footer.component';\nimport { TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ResetPasswordModule } from 'src/components/reset-password/reset-password.module';\nimport { AdminDashboardModule } from 'src/components/admin/dashboard/admin-dashboard.module';\nimport { AdminGuard } from 'src/services/admin-guard/AdminGuard.guard';\nimport { IssueModule } from 'src/components/issue/issue.module';\n\nconst config:SocketIoConfig = {url: store.state.apiHost};\n\nexport const HttpLoaderFactory = (http: HttpClient) => {\n    return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    UserRegistrationModule,\n    FormsModule,\n    LoginModule,\n    FlashMessagesModule.forRoot(),\n    UserProfileModule,\n    HttpClientModule,\n    DashboardModule,\n    CreateNewItemModule,\n    OfferModule,\n    SocketIoModule.forRoot(config),\n    MessageModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    ResetPasswordModule,\n    AdminDashboardModule,\n    IssueModule\n  ],\n  providers: [\n    ApiService, \n    AuthGuardService,\n    PostService,\n    MessageService,\n    AdminGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/AppRoutingModule.html": {
      url: "modules/AppRoutingModule.html",
      title: "module - AppRoutingModule",
      body: "\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateNewItemComponent } from 'src/components/create-new-item/create-new-item.component';\nimport { DashboardComponent } from 'src/components/dashboard/dashboard.component';\nimport { LoginComponent } from 'src/components/login/login.component';\nimport { ResetPasswordComponent } from 'src/components/reset-password/reset-password.component';\nimport { MessageComponent } from 'src/components/message/message.component';\nimport { OfferComponent } from 'src/components/single-offer/offer.component';\nimport { UserProfileComponent } from 'src/components/user-profile/user-profile.component';\nimport { UserRegistrationComponent } from 'src/components/user-registration/user-registration.component';\nimport { AuthGuardService } from 'src/services/auth-guard/auth-guard.service';\nimport { AdminDashboardComponent } from 'src/components/admin/dashboard/admin-dashboard.component';\nimport { IssueComponent } from 'src/components/issue/issue.component';\nimport { AdminGuard } from 'src/services/admin-guard/AdminGuard.guard';\n\nconst routes: Routes = [\n  {path: 'register', component: UserRegistrationComponent},\n  {path: 'login', component: LoginComponent},\n  {path: '', component: DashboardComponent},\n  {path: 'profile', component: UserProfileComponent, canActivate:[AuthGuardService]},\n  {path: 'create-new-item', component: CreateNewItemComponent, canActivate:[AuthGuardService]},\n  {path: 'messages', component: MessageComponent, canActivate:[AuthGuardService]},\n  {path: 'offers/:id', component: OfferComponent, canActivate:[AuthGuardService]},\n  {path: 'reset-password', component: ResetPasswordComponent},\n  {path: 'admin', canActivate:[AdminGuard], component: AdminDashboardComponent},\n  {path: 'contact', component: IssueComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "guards/AuthGuardService.html": {
      url: "guards/AuthGuardService.html",
      title: "guard - AuthGuardService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/views/src/services/auth-guard/auth-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/auth-guard/auth-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/auth-guard/auth-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from "@angular/core";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from "@angular/router";\nimport { store } from "src/store/store";\n\n@Injectable()\n\nexport class AuthGuardService implements CanActivate {\n\tconstructor(private router: Router) {}\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean{\n\t\tif (store.state.isLoggedIn()) return true;\n\t\telse {\n\t\t\tthis.router.navigate([\'/login\']);\n\t\t\treturn false ;\n\t\t}\n\t}\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/ButtonComponent.html": {
      url: "components/ButtonComponent.html",
      title: "component - ButtonComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/utils/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cta\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                btnClass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'active'\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/utils/button/button.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        btnClass\n                        \n                    \n                \n            \n            \n                \nbtnClass()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/utils/button/button.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"--active\" | \"--danger\"\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from \"@angular/core\";\n\n@Component({\n    selector: 'app-cta',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss'],\n})\n\nexport class ButtonComponent {\n    @Input() type: string = 'active';\n\n    btnClass() {\n        if(this.type === 'active') {\n            return '--active'\n        }\n        return '--danger'\n    }\n}\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n                \n                    ./button.component.scss\n                \n                @import '../../assets/sass/variables.scss';\n\n.btn {\n    div{\n        display: flex;\n        padding: 15px 10px;\n        border-radius: 4px;\n        color: #fff;\n        text-transform: uppercase;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        box-shadow: 2px 3px rgb(223, 210, 210);\n        &:hover{\n            box-shadow: unset;\n        }\n    }\n    .--active {\n        background-color: $thd-blau;\n    }\n    .--danger{\n        background-color: crimson;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/ButtonModule.html": {
      url: "modules/ButtonModule.html",
      title: "module - ButtonModule",
      body: '\n                   \n\n\n\n\n    Modules\n    ButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ButtonModule\n\n\n\ncluster_ButtonModule_exports\n\n\n\ncluster_ButtonModule_declarations\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nButtonModule\n\nButtonModule\n\nButtonModule -->\n\nButtonComponent->ButtonModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nButtonModule->ButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/utils/button/button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { ButtonComponent } from "./button.component";\n\n@NgModule({\n    declarations: [\n        ButtonComponent\n    ],\n    exports: [\n        ButtonComponent\n    ]\n})\n\nexport class ButtonModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/CarouselComponent.html": {
      url: "components/CarouselComponent.html",
      title: "component - CarouselComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/carousel/carousel.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-carousel\n            \n\n            \n                styleUrls\n                ./carousel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCategory\n                            \n                            \n                                imageUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                featured\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                emitCategory\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/carousel/carousel.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        featured\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/components/carousel/carousel.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        emitCategory\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/components/carousel/carousel.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeCategory\n                        \n                    \n                \n            \n            \n                \nchangeCategory(category: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/carousel/carousel.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n            \n                \nimageUrl(image: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/carousel/carousel.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, EventEmitter, Output } from \"@angular/core\";\nimport { Input } from \"@angular/core\";\nimport { store } from \"src/store/store\";\nimport { DOCUMENT } from \"@angular/common\";\n\n@Component({\n    selector: 'app-carousel',\n    templateUrl: './carousel.component.html',\n    styleUrls: ['./carousel.component.scss']\n})\n\nexport class CarouselComponent {\n    @Input() featured: any[] = [];\n    constructor(\n        @Inject(DOCUMENT) document: Document,\n    ) {}\n\n    @Output() emitCategory: EventEmitter = new EventEmitter();\n\n    imageUrl(image: string) {\n        return store.state.apiHost + `/post/get-post-image/${image}`\n    }\n    changeCategory(category: string) {\n      this.emitCategory.emit(category);\n    }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                {{feature.category | translate}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./carousel.component.scss\n                \n                @import '../../assets/sass/variables.scss';\n@import '../../assets/sass/mixins';\n\n.carousel-container {\n    display: flex;\n    max-width: 100vw;\n    overflow-x: scroll;\n    max-height: 300px;\n    overflow-y: hidden;\n    padding: 10px 0 10px 0;\n    scroll-behavior: smooth;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    animation: scroller 8s infinite;\n    cursor: pointer;\n    margin-top: 30px;\n    @include largeScreen {\n      max-height: 350px;\n    }\n    img{\n        width: 450px;\n        height: 250px;\n        opacity: 0.6;\n        @include largeScreen {\n          width: 640px;\n          height: 330px;\n        }\n    }\n    .category{\n        position: inherit;\n        display: flex;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        .span {\n            margin-top: -25%;\n            width: 100%;\n            height: 100%;\n            text-align: center;\n            z-index: 1;\n            font-size: 1.4rem;\n            text-transform: capitalize;\n            font-weight: 600;\n\n            cursor: pointer;\n            color: #333;\n            // text-shadow: 1px 2px rgb(234, 228, 228);\n            span{\n                background-color: $thd-blau;\n                padding: 10px 20px;\n                border-radius: 4px;\n                color: #fff;\n                box-shadow: 2px 2px rgb(223, 210, 210);\n            }\n        }\n    }\n}\n.carousel-container::-webkit-scrollbar {\n    display: none;\n}\n\n@keyframes scroller {\n    0% {\n        justify-content: flex-start;\n    }\n    25% {\n        justify-content: center;\n    }\n    50% {\n        justify-content: flex-end;\n    }\n    75% {\n        justify-content: center;\n    }\n    100% {\n        justify-content: flex-start;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{feature.category | translate}}                        '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/CategoryChartComponent.html": {
      url: "components/CategoryChartComponent.html",
      title: "component - CategoryChartComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CategoryChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/admin/category-chart/category-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-category-chart\n            \n\n            \n                styleUrls\n                ./category-chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chart\n                            \n                            \n                                dataSets\n                            \n                            \n                                    Public\n                                labels\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(post: PostService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        post\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Chart | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDataset[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Default value : categories\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'doughnut'\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/category-chart/category-chart.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { categories } from \"src/store/categoryRepository\";\nimport { PostService } from \"src/services/post/post.service\";\nimport { store } from \"src/store/store\";\nimport { Chart } from \"chart.js/auto\";\n\ninterface IDataset {\n    label: string,\n    data: any[],\n    backgroundColor?: string[],\n    borderWidth: 1\n}\n\nconst colors = [\n    \"green\",\n    \"yellow\",\n    \"red\",\n    \"blue\"\n];\n\n@Component({\n    selector: 'app-admin-category-chart',\n    templateUrl: './category-chart.component.html',\n    styleUrls: ['./category-chart.component.scss']\n})\n\nexport class CategoryChartComponent implements OnInit {\n    public labels = categories;\n    dataSets: IDataset[] = []\n    chart: Chart | undefined;\n    type: any = 'doughnut';\n\n    constructor (private post: PostService) {}\n    async ngOnInit() {\n        const token: any = store.state.authToken;\n        this.post.getCountByCategory(token).subscribe((data: any) => {\n            if (data.success) {\n                let tempData: any[] = []\n                data.post.forEach((post: any, index: number) => {\n                    tempData.push(post.count)\n                });\n                this.dataSets.push({label: \"Offer by category\", data: tempData, borderWidth: 1, backgroundColor: colors})\n                this.createChart();\n            }\n        })\n    }\n\n    createChart(){\n\n        this.chart = new Chart(\"MyChart\", {\n          type: this.type,\n\n          data: {// values on X-Axis\n              labels: this.labels,\n              datasets: this.dataSets\n          },\n          options: {\n            aspectRatio:2.5\n          }\n\n        });\n\n        this.chart.resize(600, 600);\n      }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./category-chart.component.scss\n                \n                .categories {\n    max-height: 600px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/ChartComponent.html": {
      url: "components/ChartComponent.html",
      title: "component - ChartComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/utils/chart/chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-chart\n            \n\n            \n                styleUrls\n                ./chart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                datasets\n                            \n                            \n                                labels\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        datasets\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/utils/chart/chart.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labels\n                    \n                \n                \n                    \n                        Type :     string[] | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/utils/chart/chart.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/utils/chart/chart.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/utils/chart/chart.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/utils/chart/chart.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/utils/chart/chart.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from \"@angular/core\";\nimport { Chart } from \"chart.js/auto\";\n\n\n@Component({\n    selector: 'app-admin-chart',\n    templateUrl: './chart.component.html',\n    styleUrls: ['./chart.component.scss']\n})\n\nexport class ChartComponent implements OnInit {\n    public chart: any | undefined;\n    @Input() labels: string[] | any;\n    @Input() datasets: any[] = [];\n    @Input() type: string | any;\n\n    createChart(){\n  \n      this.chart = new Chart(\"MyChart\", {\n        type: this.type,\n  \n        data: {// values on X-Axis\n            labels: this.labels, \n            datasets: this.datasets\n        },\n        options: {\n          aspectRatio:2.5\n        }\n        \n      });\n    }\n\n    ngOnInit() {\n        console.log(this.datasets[0])\n        this.createChart();\n    }\n}\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./chart.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/ChartModule.html": {
      url: "modules/ChartModule.html",
      title: "module - ChartModule",
      body: '\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ChartModule_declarations\n\n\n\n\nChartComponent\n\nChartComponent\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartComponent->ChartModule\n\n\n\n\n\nChartComponent \n\nChartComponent \n\nChartComponent  -->\n\nChartModule->ChartComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/utils/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { ChartComponent } from "./chart.component";\n\n@NgModule({\n    declarations: [ChartComponent],\n    exports: [ChartComponent]\n})\n\nexport class ChartModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/ChatBoxComponent.html": {
      url: "components/ChatBoxComponent.html",
      title: "component - ChatBoxComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ChatBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/chat-box/chat-box.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chat-box\n            \n\n            \n                styleUrls\n                ./chat-box.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./chat-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-chat-box',\n    templateUrl: './chat-box.component.html',\n    styleUrls: ['./chat-box.component.scss']\n})\n\nexport class ChatBoxComponent{}\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n                \n                    ./chat-box.component.scss\n                \n                .box{\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n    position: sticky;\n    top: 100;\n    padding: 40px;\n    .container {\n        background-color: #e3e0e5;\n        padding: 20px;\n        border-radius: 50%;\n        font-size: 1.4rem;\n        cursor: pointer;\n        box-shadow: 2px 2px #d3c8c8;\n        position: relative;\n        animation: chatBox 5s infinite;\n    }\n}\n\n@keyframes chatBox {\n    0%   {border: 0;}\n    25%  {top: -10px}\n    50%  {top: -25px}\n    75%  {top: -50px}\n    100%  {top: 0;}\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ChatBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/CreateNewItemComponent.html": {
      url: "components/CreateNewItemComponent.html",
      title: "component - CreateNewItemComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  CreateNewItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/create-new-item/create-new-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-new-item\n            \n\n            \n                styleUrls\n                ./create-new-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./create-new-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _categories\n                            \n                            \n                                _file\n                            \n                            \n                                category\n                            \n                            \n                                description\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onChange\n                            \n                            \n                                    Async\n                                submitPost\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, _postService: PostService, _flashMesgSrvc: FlashMessagesService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _postService\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _flashMesgSrvc\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/create-new-item/create-new-item.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submitPost\n                        \n                    \n                \n            \n            \n                \n                    \n                    submitPost()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/create-new-item/create-new-item.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/create-new-item/create-new-item.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _categories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : categories\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/create-new-item/create-new-item.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { categories } from \"src/store/categoryRepository\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { PostService } from \"src/services/post/post.service\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-create-new-item',\n    templateUrl: './create-new-item.component.html',\n    styleUrls: ['./create-new-item.component.scss']\n})\n\nexport class CreateNewItemComponent {\n    _categories = categories;\n    _file: File | any;\n    title: string | undefined;\n    category: string | undefined;\n    description: string | undefined;\n    price: string | undefined;\n    constructor(\n        @Inject(DOCUMENT) document: Document,\n        private _postService: PostService,\n        private _flashMesgSrvc: FlashMessagesService,\n        private _router: Router\n    ) {\n    }\n\n    uploadFile() {\n        const file = document.getElementById('upload')\n        file?.click();\n        if(!!file) file.style.display = \"block\";\n    }\n\n    onChange(event: any) {\n        this._file = event.target.files[0];\n    }\n\n    async submitPost() {\n        const post = {\n            title: this.title,\n            category: this.category,\n            description: this.description,\n            price: this.price,\n            posts: this._file\n        }\n\n       const validator = Object.entries(post).filter((entry) => entry[1] == undefined);\n       \n       if (validator.length) {\n            this._flashMesgSrvc.show(\"Please fill all the required fields\", {cssClass: \"alert-error\"});\n            return ;\n       }\n        \n        try {\n           const resp = await this._postService.storePost(post);\n           if(resp.success) {\n                this._flashMesgSrvc.show(\"You have successfully created an offer\", {cssClass: \"alert-success\"})\n                this._router.navigateByUrl('/');\n           }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n    \n\n    \n        \n    \n        \n           \n                \n                \n                    Upload picture\n                \n           \n           \n                \n                \n                    Select a category\n                    {{category}}\n                \n                \n                \n                Submit\n           \n        \n    \n\n    \n\n    \n                \n                    ./create-new-item.component.scss\n                \n                .container{\n    background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\n    min-width: 100vw;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    .form-group{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 40px;\n        background-color: #fff;\n        border-radius: 4px;\n        .file{\n            .btn-group{\n                display: flex;\n                gap: 10px;\n                max-width: 600px;\n                margin: 10px;\n                \n                .btn-add{\n                    display: flex;\n                    width: 200px;\n                    background-color: rgb(25, 137, 166);\n                    color: #fff;\n                    box-shadow: 1px 2px rgb(80, 171, 194);\n                    &:hover {\n                        box-shadow: unset;\n                    }\n                    span{\n                        width: 100%;\n                    }\n                }\n            }\n        }\n        .inp{\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            select{\n                cursor: pointer;\n                height: 40px;\n            }\n            .input {\n                padding: 10px 20px;\n                width: 600px;\n                margin: 10px;\n                border: none;\n                outline: none;\n                border-radius: 4px;\n                background-color: #dadbdd;\n            }\n        }\n\n        .btn-primary{\n           width: 600px;\n           margin-top: 12px;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                           Upload picture                                                                                          Select a category                    {{category}}                                                                Submit                       '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateNewItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/CreateNewItemModule.html": {
      url: "modules/CreateNewItemModule.html",
      title: "module - CreateNewItemModule",
      body: '\n                   \n\n\n\n\n    Modules\n    CreateNewItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CreateNewItemModule\n\n\n\ncluster_CreateNewItemModule_declarations\n\n\n\ncluster_CreateNewItemModule_imports\n\n\n\n\nCreateNewItemComponent\n\nCreateNewItemComponent\n\n\n\nCreateNewItemModule\n\nCreateNewItemModule\n\nCreateNewItemModule -->\n\nCreateNewItemComponent->CreateNewItemModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nCreateNewItemModule -->\n\nButtonModule->CreateNewItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/create-new-item/create-new-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CreateNewItemComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { CreateNewItemComponent } from "./create-new-item.component";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\nimport { BrowserAnimationsModule } from "@angular/platform-browser/animations";\nimport { ButtonModule } from "src/utils/button/button.module";\n\n@NgModule({\n    declarations: [CreateNewItemComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        BrowserAnimationsModule,\n        ButtonModule\n    ],\n    providers: []\n})\n\nexport class CreateNewItemModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/DashboardComponent.html": {
      url: "components/DashboardComponent.html",
      title: "component - DashboardComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/dashboard/dashboard.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                styleUrls\n                ./dashboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _state\n                            \n                            \n                                categories\n                            \n                            \n                                end\n                            \n                            \n                                featured\n                            \n                            \n                                isMobile\n                            \n                            \n                                numberOfPages\n                            \n                            \n                                pageNumber\n                            \n                            \n                                paginatedPosts\n                            \n                            \n                                postPerPage\n                            \n                            \n                                posts\n                            \n                            \n                                resizeObservable$\n                            \n                            \n                                start\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                filterByCarousel\n                            \n                            \n                                filterByPrice\n                            \n                            \n                                formattedDate\n                            \n                            \n                                forward\n                            \n                            \n                                goToOffer\n                            \n                            \n                                imageUrl\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChangeCategory\n                            \n                            \n                                onKeyWordSearch\n                            \n                            \n                                onResize\n                            \n                            \n                                onSelect\n                            \n                            \n                                paginatePosts\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_postService: PostService, _router: Router, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _postService\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:76\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterByCarousel\n                        \n                    \n                \n            \n            \n                \nfilterByCarousel(event: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterByPrice\n                        \n                    \n                \n            \n            \n                \nfilterByPrice(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formattedDate\n                        \n                    \n                \n            \n            \n                \nformattedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forward\n                        \n                    \n                \n            \n            \n                \nforward()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToOffer\n                        \n                    \n                \n            \n            \n                \ngoToOffer(offer: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    offer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n            \n                \nimageUrl(name: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeCategory\n                        \n                    \n                \n            \n            \n                \nonChangeCategory(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyWordSearch\n                        \n                    \n                \n            \n            \n                \nonKeyWordSearch(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatePosts\n                        \n                    \n                \n            \n            \n                \npaginatePosts()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Object | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : categories\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.postPerPage\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        featured\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatedPosts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postPerPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 9\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resizeObservable$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : fromEvent(window, 'resize')\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit} from \"@angular/core\";\nimport {store} from \"src/store/store\";\nimport {PostService} from \"src/services/post/post.service\";\nimport {categories} from \"src/store/categoryRepository\";\nimport {Router} from \"@angular/router\";\nimport {fromEvent, Observable} from \"rxjs\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n\tselector: 'app-dashboard',\n\ttemplateUrl: './dashboard.component.html',\n\tstyleUrls: ['./dashboard.component.scss']\n})\n\nexport class DashboardComponent implements OnInit{\n\t_state: Object | any;\n\tposts: any | undefined;\n\tnumberOfPages: number | any;\n\tpostPerPage = 9;\n\tstart = 0;\n\tpaginatedPosts: any | undefined;\n\tcategories = categories;\n\tpageNumber = 1;\n\tend:number = this.postPerPage;\n\tisMobile = false;\n\tfeatured: any[] = [];\n\tresizeObservable$: Observable = fromEvent(window, 'resize');\n\n\tconstructor(\n\t\tprivate _postService: PostService,\n\t\tprivate _router: Router,\n\t\tpublic translate: TranslateService\n\t) {\n\t\tthis._state = store.state;\n\t\ttranslate.addLangs(['en', 'de']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLangs: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLangs?.match(/en|de/) ? browserLangs : 'en');\n\t}\n\tasync ngOnInit() {\n    const largeScreen: number  = 1900;\n    if (window.innerWidth > largeScreen) {\n      this.postPerPage = 20;\n      this.end = this.postPerPage;\n    }\n\t\tconst resizeSubscription$ = this.resizeObservable$.subscribe( evt => {\n\t\t\t    if (window.innerWidth > largeScreen) {\n            this.postPerPage = 20;\n            this.end = this.postPerPage;\n          }\n\t\t  })\n\t\ttry {\n\n\t\t\tif (this.posts == undefined) {\n\t\t\t\tconst response = await this._postService.getPosts();\n\t\t\t\tthis.posts = response.posts;\n\t\t\t}\n\t\t\tthis.paginatedPosts = this.paginatePosts().map((post: any) => post[1]);\n\t\t\tthis.numberOfPages = Math.ceil(this.posts.length / this.postPerPage);\n\t\t\tfor(let post of this.posts) {\n\t\t\t\tif(this.featured.indexOf(post.category) === -1) {\n\t\t\t\t\tthis.featured.push(post.category, post);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.featured.forEach((feature, index) => {\n\t\t\t\tif(typeof(feature) != 'object') {\n\t\t\t\t\tthis.featured.splice(index, 1);\n\t\t\t\t}\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.postPerPage = 9;\n    this.featured = [];\n    this.ngOnInit();\n  }\n\n\tpaginatePosts() {\n\t\treturn Object.entries(this.posts).slice(this.start, this.end);\n\t}\n\n\timageUrl(name: any) {\n\t\treturn this._state.apiHost + `/post/get-post-image/${name}`;\n\t}\n\n\tformattedDate(date: Date) {\n\t\treturn new Date(date).toLocaleString('en-us');\n\t}\n\n\tforward() {\n\t\tthis.pageNumber++;\n\t\tthis.start += this.postPerPage;\n\t\tthis.end += this.postPerPage;\n\t\tthis.ngOnInit();\n\t}\n\n\tback() {\n\t\tthis.pageNumber--;\n\t\tthis.start -= this.postPerPage;\n\t\tthis.end -= this.postPerPage;\n\t\tthis.ngOnInit();\n\t}\n\n\tonSelect(event: any) {\n\t\tdocument.getElementById(event)?.click()\n\t}\n\n\tonChangeCategory(event: any) {\n\t\tconst elem: HTMLInputElement | any = document.getElementById(event);\n\t\tif(elem?.checked == true) {\n      this.paginatedPosts = this.posts.filter((post: any) => post.category === event);\n\t\t} else {\n\t\t\tthis.featured = [];\n\t\t\tthis.ngOnInit();\n\t\t}\n\t}\n\n\tfilterByPrice(event: any) {\n\t\tconst elem: HTMLInputElement | any = document.getElementById(event);\n\t\tif(elem?.checked == true) {\n      this.paginatedPosts = this.posts.filter((post: any) => post.price  post.title.toLowerCase().includes(event));\n\t\tif(event) {\n\t\t\tthis.paginatedPosts = posts;\n\t\t} else {\n\t\t\tthis.featured = [];\n      this.ngOnInit();\n\t\t}\n\t}\n\n  filterByCarousel(event: string) {\n    this.paginatedPosts = this.posts.filter((post: any) => post.category === event);\n  }\n}\n\n    \n\n    \n        \n    \n    \n   \n        \n        \n        \n            \n                \n                    \n                        \n                        {{ 'IMAGE.not' | translate }}\n                        \n                            {{post.title}}\n                            {{post.description}}\n                            {{post.price}} &euro;\n                            {{post.user_name}}\n                        \n                    \n                    \n\n            \n            \n                 1\" (click)=\"back()\">\n                    \n                \n                Page {{pageNumber}} of {{numberOfPages}}\n                \n                    \n                \n            \n            \n       \n       {{ \"NO OFFERS\" | translate }}\n    \n\n\n    \n\n    \n                \n                    ./dashboard.component.scss\n                \n                @import '../../assets/sass/mixins';\n@import '../../assets/sass/variables.scss';\n.container{\n    background-color: whitesmoke;\n    min-height: 100vh;\n    max-width: 100vw;\n    width: 100vw;\n    .content{\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n        .page-number{\n            display: flex;\n            padding: 20px;\n            gap: 20px;\n            .number {\n                .active {\n                    font-weight: 600;\n                }\n            }\n            .arrow {\n                cursor: pointer;\n                &:hover{\n                    color: crimson;\n                    transform: scale(1.2);\n                }\n                i {\n                    font-weight: 600;\n                }\n            }\n        }\n    }\n\n    .dashboard-content{\n        display: flex;\n        gap: 60px;\n        padding: 20px 10px;\n        max-width: 100vw;\n        @include mobile{\n            display: flex;\n            flex-direction: column;\n        }\n        .content{\n            width: 100%;\n        }\n        .middle {\n            width: 100%;\n            display: flex;\n            gap: 20px;\n            max-width: calc(100vw - 200px);\n            flex-wrap: wrap;\n            @include mobile {\n                width: 100%;\n                max-width: 100%;\n            }\n            .post-img{\n                width: 320px;\n                height: fit-content;\n                display: flex;\n                flex-direction: column;\n                justify-content: center;\n                align-items: center;\n                border-radius: 4px;\n                padding: 6px;\n                cursor: pointer;\n                @include mobile {\n                    width: 160px;\n                    font-size: 0.8rem;\n                }\n                @include tablet {\n                    width: 160px;\n                    font-size: 1rem;\n                }\n                &:hover{\n                    box-shadow: unset;\n                    transform: scale(1.1);\n                }\n                .image {\n                    width: 300px;\n                    height: 200px;\n                    display: flex;\n                    box-shadow: 1px 2px rgb(145, 136, 136);\n                    background-color: gray;\n                    justify-content: center;\n                    align-items: center;\n                    @include mobile {\n                        width: 160px;\n                        height: 120px;\n                        font-size: 0.8rem;\n                    }\n                    @include tablet {\n                        width: 160px;\n                        height: 140px;\n                        font-size: 1rem;\n                    }\n                }\n            }\n            .title {\n                font-weight: 600;\n            }\n            .name {\n                font-size: 0.8rem;\n            }\n            .description {\n                display: flex;\n                flex-direction: column;\n                width: 100%;\n                padding: 8px;\n                gap: 4px;\n\n                .title {\n                    text-transform: capitalize;\n                }\n\n                .price {\n                    font-weight: 600;\n                }\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                   {{ \\'IMAGE.not\\' | translate }}                                                    {{post.title}}                            {{post.description}}                            {{post.price}} €                            {{post.user_name}}                                                                                                         1\" (click)=\"back()\">                                                    Page {{pageNumber}} of {{numberOfPages}}                                                                                          {{ \"NO OFFERS\" | translate }}    '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/DashboardModule.html": {
      url: "modules/DashboardModule.html",
      title: "module - DashboardModule",
      body: '\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_providers\n\n\n\ncluster_DashboardModule_declarations\n\n\n\n\nCarouselComponent\n\nCarouselComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nCarouselComponent->DashboardModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nDashboardModule -->\n\nChatBoxComponent->DashboardModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardSidebarComponent\n\nDashboardSidebarComponent\n\nDashboardModule -->\n\nDashboardSidebarComponent->DashboardModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nDashboardModule -->\n\nSearchComponent->DashboardModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nDashboardModule -->\n\nButtonModule->DashboardModule\n\n\n\n\n\nPostService\n\nPostService\n\nDashboardModule -->\n\nPostService->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/dashboard/dashboard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CarouselComponent\n                        \n                        \n                            ChatBoxComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            DashboardSidebarComponent\n                        \n                        \n                            SearchComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PostService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { PostService } from "src/services/post/post.service";\nimport { DashboardComponent } from "./dashboard.component";\nimport { BrowserAnimationsModule } from "@angular/platform-browser/animations";\nimport { CommonModule } from "@angular/common";\nimport { FormsModule } from "@angular/forms";\nimport { RouterModule } from "@angular/router";\nimport { CarouselComponent } from "../carousel/carousel.component";\nimport { DashboardSidebarComponent } from "./dashboard-sidebar/sidebar.component";\nimport { SearchComponent } from "./search/serach.component";\nimport { ChatBoxComponent } from "../chat-box/chat-box.component";\nimport { TranslateService, TranslateModule } from "@ngx-translate/core";\nimport { ButtonModule } from "src/utils/button/button.module";\n@NgModule({\n    declarations: [\n        DashboardComponent,\n        CarouselComponent,\n        DashboardSidebarComponent,\n        SearchComponent,\n        ChatBoxComponent,\n    ],\n    imports: [\n        BrowserAnimationsModule,\n        CommonModule,\n        FormsModule,\n        RouterModule,\n        TranslateModule,\n        ButtonModule\n    ],\n    providers: [\n        PostService,\n        TranslateService\n    ]\n})\n\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/DashboardSidebarComponent.html": {
      url: "components/DashboardSidebarComponent.html",
      title: "component - DashboardSidebarComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  DashboardSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-sidebar\n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterByPrice\n                            \n                            \n                                onChangeCategory\n                            \n                            \n                                onSelectEvent\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryChange\n                            \n                            \n                                categorySelect\n                            \n                            \n                                priceFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categoryChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        categorySelect\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        priceFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterByPrice\n                        \n                    \n                \n            \n            \n                \nfilterByPrice(value: number | string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeCategory\n                        \n                    \n                \n            \n            \n                \nonChangeCategory(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectEvent\n                        \n                    \n                \n            \n            \n                \nonSelectEvent(value: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : categories\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter } from \"@angular/core\";\nimport { Input, Output } from \"@angular/core\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { categories } from \"src/store/categoryRepository\";\n\n@Component({\n    selector:'app-dashboard-sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class DashboardSidebarComponent {\n    constructor(public translate: TranslateService) {\n\t\ttranslate.addLangs(['en', 'de']);\n\t\ttranslate.setDefaultLang('en');\n\t\tconst browserLangs: any = translate.getBrowserLang();\n\t\ttranslate.use(browserLangs?.match(/en|de/) ? browserLangs : 'en');\n    }\n    categories = categories;\n\n    @Output() categoryChange: EventEmitter = new EventEmitter();\n    @Output() categorySelect: EventEmitter = new EventEmitter();\n    @Output() priceFilter: EventEmitter = new EventEmitter();\n\n    onSelectEvent(value: string | number) {\n        this.categorySelect.emit(value.toString());\n    }\n\n    onChangeCategory(value: string) {\n        this.categoryChange.emit(value);\n    }\n\n    filterByPrice(value: number | string) {\n        this.priceFilter.emit(value);\n    }\n\n}\n\n    \n\n    \n        \n    \n        \n            {{ 'newOffer' | translate }} \n            \n        \n    \n    \n        \n            \n                \n                    \n                    {{ category | translate }}\n                \n            \n        \n        \n            \n                \n                0 - 50\n            \n            \n                \n                50 - 100\n            \n            \n                \n                100 - 1000\n            \n        \n    \n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                @import '../../../assets/sass/mixins';\n\n.side-bar {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    height: 100%;\n    .category{\n        background-color: #e3e0e5;\n        border-radius: 4px;\n        box-shadow: 1px 2px #e7e1ea;\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        width: 300px;\n        padding: 10px;\n        @include mobile {\n            width: unset;\n            font-size: 12px;\n        }\n        .btn{\n            background-color: #fff;\n            padding: 15px 20px;\n            width: 100%;\n            border-radius: 4px;\n            box-shadow: 1px 2px whitesmoke;\n            cursor: pointer;\n            &:hover {\n                box-shadow: unset;\n                color: crimson;\n            }\n            display: flex;\n            gap: 10px;\n            align-items: center;\n            @include mobile {\n                font-size: 12px;\n            }\n            input{\n                cursor: pointer;\n            }\n        }\n    }\n    .add-btn{\n        position: sticky;\n        top: 100px;\n        .cta_text {\n            width: 100%;\n        }\n    }\n\n    .bottom {\n        display: flex;\n        flex-direction: column;\n        gap: 20px;\n        @include mobile {\n            display: flex;\n            max-width: 100vw;\n            padding: 10px;\n            overflow: hidden;\n            gap: 10px;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ \\'newOffer\\' | translate }}                                                                                                         {{ category | translate }}                                                                                        0 - 50                                                        50 - 100                                                        100 - 1000                        '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/Error.html": {
      url: "interfaces/Error.html",
      title: "interface - Error",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ResponseInterface/QuryResponseInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Result {\n  success: boolean\n  message: object | string\n}\n\nexport interface Error {\n  success: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/FooterComponent.html": {
      url: "components/FooterComponent.html",
      title: "component - FooterComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./footer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date(Date.now()).getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/footer/footer.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.scss']\n})\n\nexport class FooterComponent {\n    date = new Date(Date.now()).getFullYear();\n}\n    \n\n    \n        \n    \n        ClassField\n        &copy;  {{ date }}\n    \n\n    \n\n    \n                \n                    ./footer.component.scss\n                \n                @import '../../assets/sass/variables.scss';\n\n.footer {\n    max-width: 100vw;\n    width: 100vw;\n    min-height: 80px;\n    background-color: $thd-blau;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    div{\n        width: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #fff;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ClassField        ©  {{ date }}    '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IDataset.html": {
      url: "interfaces/IDataset.html",
      title: "interface - IDataset",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDataset\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/components/admin/category-chart/category-chart.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            backgroundColor\n                                        \n                                \n                                \n                                        \n                                            borderWidth\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backgroundColor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backgroundColor:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        borderWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        borderWidth:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from "@angular/core";\nimport { categories } from "src/store/categoryRepository";\nimport { PostService } from "src/services/post/post.service";\nimport { store } from "src/store/store";\nimport { Chart } from "chart.js/auto";\n\ninterface IDataset {\n    label: string,\n    data: any[],\n    backgroundColor?: string[],\n    borderWidth: 1\n}\n\nconst colors = [\n    "green",\n    "yellow",\n    "red",\n    "blue"\n];\n\n@Component({\n    selector: \'app-admin-category-chart\',\n    templateUrl: \'./category-chart.component.html\',\n    styleUrls: [\'./category-chart.component.scss\']\n})\n\nexport class CategoryChartComponent implements OnInit {\n    public labels = categories;\n    dataSets: IDataset[] = []\n    chart: Chart | undefined;\n    type: any = \'doughnut\';\n\n    constructor (private post: PostService) {}\n    async ngOnInit() {\n        const token: any = store.state.authToken;\n        this.post.getCountByCategory(token).subscribe((data: any) => {\n            if (data.success) {\n                let tempData: any[] = []\n                data.post.forEach((post: any, index: number) => {\n                    tempData.push(post.count)\n                });\n                this.dataSets.push({label: "Offer by category", data: tempData, borderWidth: 1, backgroundColor: colors})\n                this.createChart();\n            }\n        })\n    }\n\n    createChart(){\n\n        this.chart = new Chart("MyChart", {\n          type: this.type,\n\n          data: {// values on X-Axis\n              labels: this.labels,\n              datasets: this.dataSets\n          },\n          options: {\n            aspectRatio:2.5\n          }\n\n        });\n\n        this.chart.resize(600, 600);\n      }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/IIssue.html": {
      url: "interfaces/IIssue.html",
      title: "interface - IIssue",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IIssue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Issue.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            issuer_email\n                                        \n                                \n                                \n                                        \n                                            issuer_name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer_email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer_email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import mongoose, { Schema } from 'mongoose'\n\ninterface IIssue {\n  issuer_name: string\n  issuer_email: string\n  subject: string\n  body: string\n  status: string\n  time: Date\n}\n\nconst issueSchema = new Schema ({\n  issuer_name: {\n    type: String,\n    required: true\n  },\n  issuer_email: {\n    type: String,\n    required: true\n  },\n  subject: {\n    type: String,\n    required: true\n  },\n  body: {\n    type: String,\n    required: true\n  },\n  status: {\n    type: String,\n    default: 'open'\n  },\n  time: Date\n})\n\nexport const Issue = mongoose.model('Issue', issueSchema)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IMessage.html": {
      url: "interfaces/IMessage.html",
      title: "interface - IMessage",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Message.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            group_index\n                                        \n                                \n                                \n                                        \n                                            reciever\n                                        \n                                \n                                \n                                        \n                                            sender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sender_avatar\n                                        \n                                \n                                \n                                        \n                                            sender_name\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group_index:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reciever\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reciever:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender_avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender_avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sender_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sender_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import mongoose, { Schema } from 'mongoose'\n\ninterface IMessage {\n  body: string\n  reciever: string\n  sender: string\n  sender_name: string\n  sender_avatar?: string\n  time: Date\n  group_index: string\n}\n\nconst messageSchema = new Schema({\n  body: String,\n  reciever: String,\n  sender: String,\n  sender_name: String,\n  time: Date,\n  group_index: String,\n  sender_avatar: String\n})\n\nexport const Message = mongoose.model('Message', messageSchema)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IPost.html": {
      url: "interfaces/IPost.html",
      title: "interface - IPost",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Post.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                                \n                                        \n                                            user_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:     Text\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Text\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import mongoose, { Schema } from 'mongoose'\n\ninterface IPost {\n  title: string\n  category: string\n  description: Text\n  price?: string\n  date: Date\n  status: number\n  image?: string[]\n  user_id: string\n  user_name: string\n}\n\nconst postSchema = new Schema({\n  title: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  price: String,\n  date: Date,\n  status: {\n    type: Number,\n    default: 1\n  },\n  image: {\n    type: Array,\n    default: null\n  },\n  user_id: String,\n  user_name: String\n})\n\nexport const Post = mongoose.model('Post', postSchema)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IRequestOptions.html": {
      url: "interfaces/IRequestOptions.html",
      title: "interface - IRequestOptions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRequestOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/helpers/helpers.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            headers\n                                        \n                                \n                                \n                                        \n                                            method\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:     string | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | undefined\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Headers\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Headers\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        method:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IRequestOptions {\n    method: string,\n    headers: Headers,\n    body?: string | undefined, \n}\n\n\nexport const sendRequest = async(url: string, requestMethod: Object, payload: string | File | number | object = "", _headers: Headers,) => {\n    const requestOptions: IRequestOptions = {\n        method: `${requestMethod}`,\n        headers: _headers,\n    };\n\n    if (requestMethod != \'GET\') {\n        requestOptions.body = JSON.stringify(payload);\n    }\n\n    return (await fetch(url, requestOptions)).json();\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/IUser.html": {
      url: "interfaces/IUser.html",
      title: "interface - IUser",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/User.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import mongoose, { Schema } from 'mongoose'\n\nexport interface IUser {\n  name: string\n  email: string\n  password: string\n  role?: string\n  avatar?: String\n}\n\nconst userSchema = new Schema({\n  name: { type: String, required: true },\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  role: { type: String, default: 'user' },\n  avatar: { type: String, default: null }\n})\n\nexport const User = mongoose.model('User', userSchema)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "interfaces/IUser-1.html": {
      url: "interfaces/IUser-1.html",
      title: "interface - IUser-1",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/components/admin/users/users.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from "@angular/core";\nimport { AdminService } from "src/services/admin/AdminServices";\nimport { store } from "src/store/store";\nimport { FlashMessagesService } from "flash-messages-angular";\n\ninterface IUser {\n    avatar: string,\n    email: string,\n    name: string\n    password: string\n    role: number\n    _id: string\n};\n\nconst Roles = [\n    "user",\n    "admin"\n]\n\n@Component({\n    selector: \'app-admin-users\',\n    templateUrl: \'./users.component.html\',\n    styleUrls: [\'./users.component.scss\']\n})\n\nexport class UsersComponent implements OnInit {\n    users: IUser[] = [];\n    editing: string = \'\';\n    roles = Roles;\n    role: string = \'user\';\n\n    constructor(\n        private adminApi: AdminService,\n        private flashMsg: FlashMessagesService\n    ){}\n\n    async ngOnInit() {\n        this.adminApi.getUsers(store.state.authToken).subscribe((data: any) => {\n            if(data.success) {\n                this.users = data.users;\n            }\n        });\n    }\n\n    updateRole(id: string) {\n        this.adminApi.updateRole(id, this.role, store.state.authToken).subscribe((data: any) => {\n            if(data.success) {\n                this.flashMsg.show(\n                    "User role updated successfully",\n                    {cssClass: "alert-success"}\n                );\n            }\n            this.ngOnInit();\n            this.editing = \'\';\n        });\n    }\n\n    destroyUser(id: string) {\n        this.adminApi.destroyUser(id, store.state.authToken).subscribe((data: any) => {\n            this.flashMsg.show(\n                "User deleted",\n                {cssClass: "alert-success"}\n            );\n            this.ngOnInit();\n        })\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "classes/ImageController.html": {
      url: "classes/ImageController.html",
      title: "class - ImageController",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/ImageController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getPostImage\n                            \n                            \n                                    Static\n                                    Async\n                                getProfilePicture\n                            \n                            \n                                    Static\n                                    Async\n                                storeProfileImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getPostImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPostImage(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/ImageController.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getProfilePicture\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfilePicture(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/ImageController.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        storeProfileImage\n                        \n                    \n                \n            \n            \n                \n                    \n                    storeProfileImage(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/ImageController.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\nimport { gfs, displayImage } from '../config/file_upload'\nimport { User } from '../models/User'\n\nexport class ImageController {\n  static async storeProfileImage (req: Request, res: Response) {\n    try {\n      await User.findByIdAndUpdate(req.params.id, { avatar: req.file?.filename })\n      res.json({\n        success: true,\n        file: req.file\n      })\n    } catch (error) {\n      res.json({\n        success: false,\n        file: req.file\n      })\n    }\n  }\n\n  static async getProfilePicture (req: Request, res: Response) {\n    const user = await User.findById(req.params.id)\n    if (user == null) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: 'User not found'\n        })\n    }\n\n    const file = await gfs.files.findOne({ filename: user.avatar })\n\n    if (file == null) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: 'Image not found'\n        })\n    }\n\n    displayImage(res, file)\n  }\n\n  static async getPostImage (req: Request, res: Response) {\n    const image = await gfs.files.findOne({ filename: req.params.name })\n\n    if (image == null) {\n      return res\n        .status(404)\n        .json({\n          success: false,\n          message: 'Image not found'\n        })\n    }\n\n    displayImage(res, image)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/IssueComponent.html": {
      url: "components/IssueComponent.html",
      title: "component - IssueComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  IssueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/issue/issue.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issue\n            \n\n            \n                styleUrls\n                ./issue.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./issue.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                body\n                            \n                            \n                                issuer_email\n                            \n                            \n                                issuer_name\n                            \n                            \n                                subject\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                storeIssue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, flashMsg: FlashMessagesService, adminService: AdminService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/issue/issue.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flashMsg\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        storeIssue\n                        \n                    \n                \n            \n            \n                \n                    \n                    storeIssue()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/issue/issue.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/issue/issue.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuer_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/issue/issue.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issuer_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/issue/issue.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/issue/issue.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/issue/issue.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\nimport { AdminService } from \"src/services/admin/AdminServices\";\n\n@Component({\n    selector: 'app-issue',\n    templateUrl: './issue.component.html',\n    styleUrls: ['./issue.component.scss']\n})\n\nexport class IssueComponent {\n    issuer_name: string | undefined;\n    issuer_email: string | undefined;\n    subject: string | undefined;\n    body: string | undefined;\n\n    constructor(\n        private router: Router,\n        private flashMsg: FlashMessagesService,\n        private adminService: AdminService,\n        public translate: TranslateService\n    ) {\n        translate.addLangs(['en', 'de']);\n        translate.setDefaultLang('en');\n        const browserLangs: any = translate.getBrowserLang();\n        translate.use(browserLangs?.match(/en|de/) ? browserLangs : 'en');\n    }\n\n    async storeIssue() {\n        if(!this.issuer_email \n            || !this.issuer_name \n            || !this.subject \n            || !this.body\n        ) {\n            this.flashMsg.show(\n                'Please fill all the required fields', \n                {cssClass: 'alert-error', timeout: 3000}\n            );\n            return ;\n        }\n        const issue = {\n            issuer_email: this.issuer_email,\n            issuer_name: this.issuer_name,\n            subject: this.subject,\n            body: this.body\n        };\n\n        try {\n            this.adminService.storeIssues(issue).subscribe((data) => {\n                this.flashMsg.show(\n                    'Successfully sent',\n                    {cssClass: 'alert-success', timeout: 3000}\n                );\n                this.router.navigateByUrl('/');\n            })\n            \n        } catch (error: any) {\n            this.flashMsg.show(\n                'Soething went wrong. please try again',\n                {cssClass: 'alert-error', timeout: 3000}\n            );\n        }\n    }\n}\n    \n\n    \n        \n    \n        {{ 'contact' | translate }}\n        \n            \n            \n            \n            \n            \n            {{ 'BUTTON.SUBMIT' | translate }}\n        \n    \n\n    \n\n    \n                \n                    ./issue.component.scss\n                \n                .container {\n    display: flex;\n    justify-content: center;\n    padding-top: 30px;\n    align-items: center;\n    margin-top: 100px;\n\n    //align-content: center;\n    .form-group {\n        border-radius: 4px;\n        box-shadow: 0 0 3px 3px rgb(195, 186, 186);\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: 20px;\n        gap: 20px;\n        header {\n            text-transform: uppercase;\n            font-size: 1.4rem;\n            font-weight: 600;\n        }\n        form {\n            display: flex;\n            flex-direction: column;\n            min-width: 600px;\n            gap: 10px;\n            input, textarea {\n                padding: 15px 20px;\n                border: none;\n                outline: none;\n                border-radius: 4px;\n                background-color: #e7e1ea;\n                font-size: 1rem;\n            }\n            textarea {\n                min-height: 200px;\n            }\n            .btn {\n                background-color: rgb(20, 119, 165);\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'contact\\' | translate }}                                                                                {{ \\'BUTTON.SUBMIT\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/IssueModule.html": {
      url: "modules/IssueModule.html",
      title: "module - IssueModule",
      body: '\n                   \n\n\n\n\n    Modules\n    IssueModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_IssueModule\n\n\n\ncluster_IssueModule_imports\n\n\n\ncluster_IssueModule_declarations\n\n\n\n\nIssueComponent\n\nIssueComponent\n\n\n\nIssueModule\n\nIssueModule\n\nIssueModule -->\n\nIssueComponent->IssueModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nIssueModule -->\n\nButtonModule->IssueModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/issue/issue.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IssueComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { IssueComponent } from "./issue.component";\nimport { ButtonModule } from "src/utils/button/button.module";\nimport { FormsModule } from "@angular/forms";\nimport { TranslateService } from "@ngx-translate/core";\nimport { TranslateModule } from "@ngx-translate/core";\n\n@NgModule({\n    declarations: [IssueComponent],\n    imports: [\n        ButtonModule,\n        FormsModule,\n        TranslateModule\n    ],\n    providers: [TranslateService]\n})\n\nexport class IssueModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/LoginComponent.html": {
      url: "components/LoginComponent.html",
      title: "component - LoginComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ../user-registration/user-registration.component.scss,./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrorMessage\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                password\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_apiService: ApiService, _router: Router, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/login/login.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        authenticateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticateUser()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/login/login.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayErrorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/login/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/login/login.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/login/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/login/login.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { ApiService } from \"src/services/api/api.service\";\nimport { Router } from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component ({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['../user-registration/user-registration.component.scss', './login.component.scss']\n})\n\nexport class LoginComponent {\n\terrorMessage: string | any;\n\tdisplayErrorMessage = false;\n\temail: string | any;\n\tpassword: string | any;\n\n\tconstructor (\n\t\tprivate _apiService:ApiService,\n\t\tprivate _router: Router,\n    public translate: TranslateService\n\t) {\n    translate.addLangs(['en', 'de']);\n    translate.setDefaultLang('en');\n    const browserLangs: any = translate.getBrowserLang();\n    translate.use(browserLangs?.match(/en|de/) ? browserLangs : 'en');\n\t}\n\n\tasync authenticateUser() {\n\t\tconst user = {\n\t\t\temail: this.email,\n\t\t\tpassword: this.password\n\t\t};\n\n\t\ttry {\n\t\t\tconst response = await this._apiService.authenticateUser(user);\n\t\t\tif (!response?.success) {\n\t\t\t\tthis.displayErrorMessage = true;\n\t\t\t\tthis.errorMessage = response.message;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocalStorage.setItem('token', response.token);\n\t\t\tlocalStorage.setItem('user', JSON.stringify(response.user));\n\t\t\tthis._router.navigate(['/'])\n\t\t\t.then(() => {\n\t\t\t\twindow.location.reload();\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tif(error instanceof Error) {\n\t\t\t\tthis.displayErrorMessage = true;\n\t\t\t\tthis.errorMessage = error.message;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            {{ 'NAV.LOGIN' | translate }}\n        \n        \n            \n                \n                \n            \n            \n                \n                \n            \n            \n                ** {{errorMessage}} **\n            \n\n            \n                {{ 'NAV.LOGIN' | translate}}\n            \n            \n                {{'PASSWORD REQUEST' | translate}}?\n            \n            \n            \n                {{'ACCOUNT REQUEST' | translate}}? {{ 'NAV.REGISTER' | translate}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ../user-registration/user-registration.component.scss\n                \n                @import '../../assets/sass/variables.scss';\n@import '../../assets/sass/mixins';\n.container {\n    display: flex;\n    min-height: 100vh;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    padding-top: 20px;\n    background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\n    .form-container {\n        background-color: #fff;\n        padding: 40px;\n        border-radius: 4px;\n        display: flex;\n        flex-direction: column;\n        gap: 30px;\n        @include mobile {\n            width: 90vw;\n            padding: 30px;\n        }\n        .form-header {\n            font-family: $header-font-family;\n            font-size: 2rem;\n            text-transform: uppercase;\n            font-weight: 600;\n            display: flex;\n            justify-content: center;\n            @include mobile {\n                font-size: 1.2rem;\n            }\n        }\n        .form-group {\n            display: flex;\n            flex-direction: column;\n            gap: 16px;\n            font-family: 'Montserrat', sans-serif;\n            .input-group {\n                display: flex;\n                gap: 12px;\n                align-items: center;\n                .icon {\n                    font-size: 1.4rem;\n                    min-width: 40px;\n                    @include mobile {\n                        min-width: 14px;\n                        font-size: 0.8rem;\n                    }\n                }\n                input {\n                    outline: none;\n                    border: none;\n                    border-radius: 4px;\n                    background: rgb(217, 217, 217);\n                    padding: 10px 20px;\n                    font-size: 1.2rem;\n                    width: 400px;\n                    @include mobile {\n                        width: 100%;\n                        font-size: 0.8rem;\n                    }\n                }\n            }\n            .alert-container {\n                display: flex;\n                justify-content: center;\n                .alert-danger {\n                    color: $primary;\n                }\n            }\n            .btn-container {\n                display: flex;\n                justify-content: flex-end;\n                .btn-primary {\n                    width: 400px;\n                    @include mobile {\n                        width: 430px;\n                        font-size: 0.8rem;\n                    }\n                }\n            }\n        }\n    }\n}\n                \n                    ./login.component.scss\n                \n                .password-query{\n    display: flex;\n    align-items: flex-end;\n    justify-content: flex-end;\n    width: 100%;\n    span{\n        cursor: pointer;\n        color: #333;\n        &:hover{\n            color: #1879ea;\n        }\n    }\n}\n.divider {\n    margin-top: 40px;\n    border-top: 1px solid #333;\n}\n\n.signup{\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    .focus{\n        text-transform: capitalize;\n        color: #333;\n        border-bottom:1px solid black;\n        padding-bottom:2px;\n        cursor: pointer;\n        &:hover{\n            color: #5697d8;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ \\'NAV.LOGIN\\' | translate }}                                                                                                                                                            ** {{errorMessage}} **                                        {{ \\'NAV.LOGIN\\' | translate}}                                        {{\\'PASSWORD REQUEST\\' | translate}}?                                                    {{\\'ACCOUNT REQUEST\\' | translate}}? {{ \\'NAV.REGISTER\\' | translate}}                        '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/LoginModule.html": {
      url: "modules/LoginModule.html",
      title: "module - LoginModule",
      body: '\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_imports\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_LoginModule_declarations\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nLoginModule -->\n\nButtonModule->LoginModule\n\n\n\n\n\nApiService\n\nApiService\n\nLoginModule -->\n\nApiService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { LoginComponent } from "./login.component";\nimport { FormsModule } from "@angular/forms";\nimport { CommonModule } from \'@angular/common\';\nimport { BrowserModule } from \'@angular/platform-browser\';\nimport { ApiService } from "src/services/api/api.service";\nimport { RouterModule } from "@angular/router";\nimport { ButtonModule } from "src/utils/button/button.module";\nimport { TranslateService, TranslateModule } from "@ngx-translate/core";\n\n@NgModule({\n\tdeclarations: [\n\t\tLoginComponent,\n\t],\n\timports: [\n\t\tFormsModule,\n\t\tBrowserModule,\n\t\tCommonModule,\n\t\tRouterModule,\n\t\tButtonModule,\n    TranslateModule\n\t],\n\tproviders: [ApiService, TranslateService]\n})\n\nexport class LoginModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/MessageComponent.html": {
      url: "components/MessageComponent.html",
      title: "component - MessageComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  MessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/message/message.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message\n            \n\n            \n                styleUrls\n                ./message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _state\n                            \n                            \n                                grouppedMessages\n                            \n                            \n                                isMobile\n                            \n                            \n                                messageLength\n                            \n                            \n                                messages\n                            \n                            \n                                outgoing\n                            \n                            \n                                senders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activateBody\n                            \n                            \n                                imageUrl\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onResize\n                            \n                            \n                                onSendMessage\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(socket: SocketService, messageService: MessageService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/message/message.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                        SocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:108\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        activateBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    activateBody(id: string | number)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n            \n                \nimageUrl(avatar: string | null)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    avatar\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSendMessage\n                        \n                    \n                \n            \n            \n                \nonSendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/message/message.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grouppedMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        outgoing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        senders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/message/message.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewChecked, Component, HostListener, Inject, OnInit} from \"@angular/core\";\nimport {store} from \"src/store/store\";\nimport {MessageService} from \"src/services/messages/MessageService\";\nimport {DOCUMENT} from \"@angular/common\";\nimport {SocketService} from \"src/services/messages/SocketService\";\n\n@Component({\n    selector: 'app-message',\n    templateUrl: './message.component.html',\n    styleUrls: ['./message.component.scss']\n})\n\nexport class MessageComponent implements OnInit, AfterViewChecked {\n    _state: any;\n    messages: any;\n    senders: any[] = [];\n    grouppedMessages: any;\n    outgoing: any;\n    messageLength: any;\n    isMobile: boolean = false;\n\n    constructor (\n        private socket: SocketService,\n        private messageService: MessageService,\n        @Inject(DOCUMENT) document: Document,\n        ) {\n        this._state = store.state\n    }\n    ngAfterViewChecked(): void {\n        const element: HTMLElement | any = document.getElementById('msg');\n        element.scrollTop = 3000\n    }\n\n    async ngOnInit() {\n      this.isMobile = window.innerWidth  {\n         if (data.success) {\n          this.messages = data.messages\n          this.senders = [];\n          Object.entries(this.messages).forEach((message: any) => {\n              message.forEach((msg: any) => {\n                  if(typeof msg == \"object\") {\n                      let imgUrl;\n                      if(msg.avatar?.length && msg.avatar[msg.avatar.length - 1] != null) {\n                          imgUrl = `http://localhost:3000/user/get-profile/${msg.sender[msg.avatar.length - 1]}`\n                      } else {\n                          imgUrl = '../../assets/images/dummy.jpg';\n                      }\n                      this.senders.push({id: msg.sender[msg.sender.length - 1],\n                          name: msg.sender_name[msg.sender_name.length - 1], avatar: imgUrl, time: msg.time[msg.time.length - 1]});\n                  }\n              })\n          })\n          this.senders.sort((a, b) => {\n              return Date.parse(b.time) - Date.parse(a.time);\n          })\n          this.messageLength = this.messages.length\n          this.activateBody(this.senders[0].id);\n         }\n      })\n\n     this.socket.onFetchMessages().subscribe((msg: any) => {\n          this.senders = [];\n          this.ngOnInit();\n     })\n    }\n\n    async activateBody(id: string | number) {\n        const receiver = this._state.user.id;\n      this.messageService.getMessages(receiver, this._state.authToken, id).subscribe((data: any) => {\n            this.grouppedMessages = data.messages;\n            document.querySelectorAll('.--active').forEach((ele) => {\n                ele.classList.remove('--active')\n            })\n\n            document.querySelectorAll('.active-tab').forEach((element) => {\n                element.classList.remove('active-tab')\n            })\n\n            document.querySelectorAll('.msg')?.forEach((doc: HTMLElement | any) => {\n                doc.classList.add('--active');\n            })\n\n            const msg: HTMLElement | any = document.getElementById('msg');\n            msg.scrollTop = window.innerHeight\n\n            const element = document.getElementById(id.toString());\n            element?.classList.add('active-tab');\n        })\n    }\n\n    onSendMessage() {\n        const sender = this._state.user.id;\n        const reciever: any = document.querySelector('.active-tab')?.id\n        if (!this.outgoing) {\n            return ;\n        }\n\n        this.socket.sendMessages({reciever, sender, message:this.outgoing});\n        this.ngOnInit();\n        this.outgoing = \"\";\n        this.activateBody(reciever);\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event: Event) {\n      this.ngOnInit();\n    }\n\n    imageUrl(avatar: string | null) {\n        if(avatar) {\n            return avatar;\n        }\n        return '../../assets/images/dummy.jpg';\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                    {{sender.name}}\n                \n            \n        \n        \n            \n                \n                    \n                        \n                            {{message.body}}\n                        \n                        \n                            \n                                {{message.body}}\n                            \n                        \n                    \n\n                \n                \n                    \n                    \n                \n            \n        \n    \n     No messages available\n\n\n    \n\n    \n                \n                    ./message.component.scss\n                \n                @import '../../assets/sass/mixins';\n@import '../../assets/sass/variables.scss';\n\n.container{\n    display: flex;\n    justify-content: center;\n    padding: 20px;\n    max-height: 100vh;\n    //height: max-content;\n    background-color: #fff;\n    font-size: 1.2rem;\n    margin-top: 100px;\n    align-content: center;\n    align-items: center;\n    max-width: 100vw;\n    flex-wrap: initial;\n    align-self: center;\n    justify-self: center;\n    @include mobile {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n    }\n    @include tablet {\n      padding: 8px;\n      display: flex;\n    }\n    .cmessages {\n        display: flex;\n        background-color: rgb(20, 119, 165);\n        border-radius: 4px;\n        //height: calc(100vh - 100px);\n        width: calc(100vw - 600px);\n        box-shadow: 0 0 2px 2px rgb(179, 205, 218);\n        @include mobile {\n            width: 90%;\n            display: flex;\n          font-size: .8rem;\n            //flex-direction: column;\n        }\n        @include tablet {\n          width: 90%;\n          display: flex;\n          //flex-direction: column;\n        }\n        .sidebar {\n            width: 50%;\n            padding-top: 8px;\n            padding-left: 4px;\n            overflow-y: scroll;\n            -ms-overflow-style: none;\n            scrollbar-width: none;\n            gap: 6px;\n            @include mobile {\n              width: 100%;\n              -ms-overflow-style: none;\n              scrollbar-width: none;\n            }\n          @include tablet {\n            width: 100%;\n            -ms-overflow-style: none;\n            scrollbar-width: none;\n          }\n            .__tab_header{\n                padding: 10px;\n                display: flex;\n                justify-content: center;\n                text-transform: capitalize;\n                gap: 20px;\n                align-items: center;\n                color: #fff;\n                cursor: pointer;\n                margin-bottom: 4px;\n                box-shadow: 0 0 1px 1px rgb(223, 210, 210);\n                &:hover{\n                    box-shadow: unset;\n                    background-color: rgb(4, 102, 147);;\n                }\n                img{\n                    width: 50px;\n                    height: 40px;\n                    border-radius: 50%;\n                    align-self: flex-start;\n                }\n                span{\n                    width: 100%;\n                }\n            }\n            .active-tab{\n                background-color: rgb(4, 102, 147);\n                color: #fff;\n                box-shadow: unset;\n            }\n        }\n        .middle {\n            width: 100%;\n            padding: 8px;\n            @include mobile{\n                width: 100%;\n                // width: 400px;\n            }\n            @include tablet{\n              width: 100%;\n            }\n            .msg-content{\n                background-color: #fff;\n                border-radius: 4px;\n                width: 100%;\n                height: 100%;\n                padding: 20px;\n                display: flex;\n                flex-direction: column;\n            }\n            .__tab_content{\n                display: flex;\n                flex-direction: column;\n                height: 100%;\n                overflow-y: scroll;\n                margin-bottom: 30px;\n                @include mobile{\n                    width: 100%;\n                }\n                @include tablet{\n                  width: 100%;\n                }\n\n                .msg {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 10px;\n                }\n\n                .recieved {\n                    background-color: #333;\n                    width: 50%;\n                    align-items: flex-start;\n                    padding: 10px;\n                    border-radius: 4px;\n                    margin-bottom: 10px;\n                    color: #fff;\n                }\n                .sent {\n                    background-color: #2497d1;\n                    width: 50%;\n                    align-items: flex-end;\n                    padding: 10px;\n                    border-radius: 4px;\n                    margin-bottom: 10px;\n                    align-self: flex-end;\n                    color: #fff;\n                }\n\n                .--active {\n                    display:  flex;\n                    flex-direction: column;\n                }\n            }\n\n            .input-box{\n                display: flex;\n                justify-content: center;\n                gap: 10px;\n                align-items: center;\n                input{\n                    width: 100%;\n                    border: none;\n                    outline: none;\n                    border-radius: 4px;\n                    background-color: #e3e0e5;\n                    padding: 10px 20px;\n                    font-size: 1.2rem;\n                }\n                i {\n                    color: green;\n                    font-size: 1.4rem;\n                    box-shadow: 0 0 1px 1px rgb(251, 252, 251);\n                    border: none;\n                    cursor: pointer;\n                    &:hover{\n                        box-shadow: unset;\n                        color: rgb(5, 73, 5);\n                    }\n                }\n            }\n        }\n    }\n}\n\n.cmessages::-webkit-scrollbar {\n  display: none;\n}\n\n.sidebar::-webkit-scrollbar {\n  display: none;\n}\n\n.__tab_content::-webkit-scrollbar {\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                {{sender.name}}                                                                                                                                                {{message.body}}                                                                                                            {{message.body}}                                                                                                                                                                                             No messages available'\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/MessageController.html": {
      url: "classes/MessageController.html",
      title: "class - MessageController",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/MessageController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                getMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getMessages\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMessages(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/MessageController.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\nimport { Message } from '../models/Message'\n\nexport class MessageController {\n  static async getMessages (req: Request, res: Response) {\n    let messages: any\n    if (req.params.sender != 'null') {\n      messages = await Message.find({\n        $or: [\n          { reciever: req.params.id, sender: req.params.sender },\n          { reciever: req.params.sender, sender: req.params.id }\n        ]\n      }).sort({\n        time: 'ascending'\n      }).exec()\n    } else {\n      messages = await Message.aggregate([\n        {\n          $match:\n                    {\n                      reciever: req.params.id\n                    }\n        }, {\n          $group: {\n            _id: '$group_index',\n            sender_name: {\n              $push: '$sender_name'\n            },\n            sender: {\n              $push: '$sender'\n            },\n            avatar: {\n              $push: '$sender_avatar'\n            },\n            time: {\n              $push: '$time'\n            }\n          }\n        }\n      ]).sort({ time: 'ascending' }).exec()\n    }\n\n    if (messages == null) {\n      return res\n        .status(404)\n        .json({\n          success: false,\n          message: 'No messages found'\n        })\n    }\n\n    return res.json({\n      success: true,\n      messages\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/MessageModule.html": {
      url: "modules/MessageModule.html",
      title: "module - MessageModule",
      body: '\n                   \n\n\n\n\n    Modules\n    MessageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_declarations\n\n\n\ncluster_MessageModule_providers\n\n\n\n\nMessageComponent\n\nMessageComponent\n\n\n\nMessageModule\n\nMessageModule\n\nMessageModule -->\n\nMessageComponent->MessageModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\nSocketService\n\nSocketService\n\nMessageModule -->\n\nSocketService->MessageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/message/message.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MessageComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            MessageService\n                        \n                        \n                            SocketService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { MessageComponent } from "./message.component";\nimport { MessageService } from "src/services/messages/MessageService";\nimport { FormsModule } from "@angular/forms";\nimport { CommonModule } from "@angular/common";\nimport { SocketService } from "src/services/messages/SocketService";\n\n@NgModule({\n    declarations: [MessageComponent],\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    providers: [\n        MessageService,\n        SocketService\n    ]\n})\n\nexport class MessageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "injectables/MessageService.html": {
      url: "injectables/MessageService.html",
      title: "injectable - MessageService",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/services/messages/MessageService.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                headers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/messages/MessageService.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages(reciever: string, token: string, sender: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/messages/MessageService.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    reciever\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    sender\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Headers()\n                    \n                \n                    \n                        \n                                Defined in src/views/src/services/messages/MessageService.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from "@angular/core";\nimport { HttpClient } from "@angular/common/http";\nimport { store } from "src/store/store";\n\n@Injectable({\n    providedIn: \'root\'\n  })\n\n  export class MessageService {\n        headers = new Headers();\n        constructor(private _httpClient: HttpClient) {\n            this.headers.append("Content-Type", "application/json");\n        }\n\n        getMessages(reciever: string, token: string, sender:any=null) {\n            const path = `/messages/${reciever}&${sender}`;\n            const url = store.state.apiHost + path;\n            // this.headers?.set("Authorization", token);\n            // return sendRequest(url, \'GET\', "", this.headers);\n\n            return this._httpClient.get(url, {\n                headers: {\n                  \'Authorization\': token,\n                  \'Content-Type\': \'application/json\'\n                },\n                responseType: \'json\'\n              });\n        }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/NavBarComponent.html": {
      url: "components/NavBarComponent.html",
      title: "component - NavBarComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  NavBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/nav-bar/nav-bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-bar\n            \n\n            \n                styleUrls\n                ./nav-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _state\n                            \n                            \n                                isActive\n                            \n                            \n                                isHandset$\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                mobileWidth\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleClass\n                            \n                            \n                                logout\n                            \n                            \n                                    Public\n                                navigateTo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, _router: Router, detectChange: ChangeDetectorRef, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                        BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        detectChange\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/nav-bar/nav-bar.component.ts:52\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleClass()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/nav-bar/nav-bar.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/nav-bar/nav-bar.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        navigateTo\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo(path: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/nav-bar/nav-bar.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/nav-bar/nav-bar.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onResize\n                        \n                    \n                \n            \n            \n                \nonResize(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/views/src/components/nav-bar/nav-bar.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHandset$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 780\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/nav-bar/nav-bar.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, HostListener, OnInit} from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { store } from 'src/store/store';\nimport { Router } from '@angular/router';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n  isLoggedIn = false;\n  _state: any;\n  public isMobile: boolean = false;\n  mobileWidth: number = 780;\n  isActive = false;\n\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private _router: Router,\n    private detectChange: ChangeDetectorRef,\n    public translate: TranslateService\n  )\n  {\n    this._state = store.state;\n    this.isLoggedIn = this._state.isLoggedIn();\n    translate.addLangs(['en', 'de']);\n    translate.setDefaultLang('en');\n    const browserLangs: any = translate.getBrowserLang();\n    translate.use(browserLangs?.match(/en|de/) ? browserLangs : 'en');\n  }\n\n  logout() {\n    localStorage.clear();\n    this._router.navigate(['/login'])\n    .then(() => {\n      window.location.reload()\n    });\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) {\n    this.ngOnInit();\n  }\n\n  ngOnInit(): void {\n    this.isMobile = window.innerWidth \n    \n\n    \n        \n    \n      \n        ClassField\n        \n          \n            {{lang}}\n             | \n          \n        \n        \n          \n            \n          \n        \n      \n      \n        \n          \n            {{ 'NAV.DASHBOARD' | translate }}\n          \n        \n        \n          {{ 'NAV.LOGIN' | translate }}\n        \n        \n          {{ 'NAV.REGISTER' | translate }}\n        \n        \n          Profile \n        \n        \n          Messages\n        \n        \n          {{ 'NAV.LOGOUT' | translate }}\n        \n      \n    \n    \n        \n            \n                ClassField\n                \n                    {{ 'NAV.DASHBOARD' | translate }}\n                \n            \n            \n                \n                    \n                        {{lang}}\n                    \n                \n                \n                    {{ 'NAV.LOGIN' | translate }}\n                \n                \n                    {{ 'NAV.REGISTER' | translate }}\n                \n                \n                    \n                \n                \n                    \n                \n                \n                    {{ 'NAV.LOGOUT' | translate }}\n                \n            \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./nav-bar.component.scss\n                \n                @import '../../assets/sass/mixins';\n@import '../../assets/sass/variables.scss';\n.mat-toolbar.mat-primary{\n    background-color: $thd-blau;\n}\n.sidenav-container {\n    position: -ms-device-fixed;\n    width: 100vw;\n    /* Safari */\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 2;\n    .sidenav {\n        width: 200px;\n        @include desktop {\n            display: none;\n        }\n        @include tablet {\n            display: none;\n        }\n    }\n    .sidenav .mat-toolbar {\n        background: inherit;\n    }\n    .mat-toolbar.mat-primary {\n        position: sticky;\n        top: 0;\n        z-index: 1;\n    }\n}\n\n.nav {\n    display: flex;\n    padding-right: 10px;\n    .nav-left {\n        display: flex;\n        gap: 20px;\n        width: 100%;\n        a {\n            color: #fff;\n            cursor: pointer;\n        }\n        @include mobile {\n            display: none;\n        }\n    }\n    .nav-right {\n        display: flex;\n        gap: 20px;\n        a {\n            color: #fff;\n            cursor: pointer;\n        }\n        @include mobile {\n            display: none;\n        }\n    }\n\n    .langselect {\n        padding: 6px;\n        border: none;\n        outline: none;\n        border-radius: 4px;\n        text-transform: uppercase;\n        background-color: transparent;\n        color: $white;\n        cursor: pointer;\n    }\n}\n\n.c-mobile-menu{\n  //position: relative;\n  .c-mobile-menu__close {\n    display: flex;\n    align-content: flex-end;\n    justify-content: flex-end;\n    padding: 10px;\n    .menu-bars {\n      width: 50px;\n      height: 50px;\n      border: 1px solid $white;\n      border-radius: 50%;\n      background: transparent;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      &:after{\n        width: 50px;\n        height: 50px;\n        border: 1px solid $white;\n        border-radius: 50%;\n        background: transparent;\n        display: flex;\n        position: absolute;\n        content: '';\n        -webkit-animation: border-animation 3s ease-out infinite;\n        -o-animation: border-animation 3s ease-out infinite;\n        animation: border-animation 3s ease-out infinite;\n      }\n      .open {\n        border-bottom: 2px solid $white;\n        width: 24px;\n        //position: absolute;\n        margin-bottom: 2px;\n        &:after {\n          border-bottom: 2px solid $white;\n          width: 24px;\n          position: absolute;\n          transform: translateY(8px);\n          content: '';\n        }\n        &:before {\n          border-bottom: 2px solid $white;\n          width: 24px;\n          position: absolute;\n          transform: translateY(-8px);\n          content: '';\n        }\n      }\n      .close {\n        border-bottom: 2px solid crimson;\n        width: 24px;\n        rotate: 60deg;\n        position: absolute;\n        &:after {\n          border-bottom: 2px solid crimson;\n          width: 24px;\n          rotate: 60deg;\n          position: absolute;\n          content: '';\n        }\n      }\n    }\n  }\n  .c-mobile-menu__container{\n    background: $black;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n    height: 80vh;\n    gap: 20px;\n    a {\n      color: $white;\n      font-size: 1.6rem;\n      cursor: pointer;\n      text-transform: uppercase;\n      &:hover{\n        color: crimson;\n      }\n    }\n  }\n}\n\n.c-language-selector{\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  padding: 10px;\n  justify-self: flex-end;\n  span {\n    font-size: 1rem;\n    color: $white;\n    padding: 2px;\n    text-transform: uppercase;\n    cursor: pointer;\n    &:hover {\n      color: crimson;\n    }\n    &:active {\n      color: crimson;\n    }\n  }\n}\n\n@keyframes border-animation {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n\n  100% {\n    opacity: 0;\n    transform: scale(1.3);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  ClassField                              {{lang}}             |                                                                                                             {{ \\'NAV.DASHBOARD\\' | translate }}                                    {{ \\'NAV.LOGIN\\' | translate }}                          {{ \\'NAV.REGISTER\\' | translate }}                          Profile                           Messages                          {{ \\'NAV.LOGOUT\\' | translate }}                                                          ClassField                                    {{ \\'NAV.DASHBOARD\\' | translate }}                                                                                                    {{lang}}                                                                        {{ \\'NAV.LOGIN\\' | translate }}                                                    {{ \\'NAV.REGISTER\\' | translate }}                                                                                                                                                            {{ \\'NAV.LOGOUT\\' | translate }}                                                '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/OfferComponent.html": {
      url: "components/OfferComponent.html",
      title: "component - OfferComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  OfferComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/single-offer/offer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-single-offer\n            \n\n            \n                styleUrls\n                ./offer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./offer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _offer\n                            \n                            \n                                _offered_by\n                            \n                            \n                                _state\n                            \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                imageLength\n                            \n                            \n                                isActive\n                            \n                            \n                                message\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                imageUrl\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                    Async\n                                onUpdateOffer\n                            \n                            \n                                onUploadMore\n                            \n                            \n                                sendMessage\n                            \n                            \n                                slideBackward\n                            \n                            \n                                slideForward\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _routerActivated: ActivatedRoute, _postServce: PostService, _api: ApiService, socket: Socket, flashMessages: FlashMessagesService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/single-offer/offer.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _routerActivated\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _postServce\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flashMessages\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n            \n                \nimageUrl(image: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onUpdateOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    onUpdateOffer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUploadMore\n                        \n                    \n                \n            \n            \n                \nonUploadMore()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideBackward\n                        \n                    \n                \n            \n            \n                \nslideBackward()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slideForward\n                        \n                    \n                \n            \n            \n                \nslideForward()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/single-offer/offer.component.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _offer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _offered_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     object | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :     File | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/single-offer/offer.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { PostService } from \"src/services/post/post.service\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { store } from \"src/store/store\";\nimport { ApiService } from \"src/services/api/api.service\";\nimport { Socket } from \"ngx-socket-io\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\nimport { DOCUMENT } from \"@angular/common\";\n\n@Component({\n    selector: 'app-single-offer',\n    templateUrl: './offer.component.html',\n    styleUrls: ['./offer.component.scss']\n})\n\nexport class OfferComponent implements OnInit {\n    _offer: object | any;\n    _state: object | any\n    _offered_by: any;\n    message: string | undefined;\n    description: string | undefined;\n    price: number | undefined;\n    title: string | undefined;\n    image: File | undefined;\n    isActive = 0;\n    imageLength = 0;\n\n    constructor(\n        private _router: Router,\n        private _routerActivated: ActivatedRoute,\n        private _postServce: PostService,\n        private _api: ApiService,\n        private socket: Socket,\n        private flashMessages: FlashMessagesService,\n        @Inject(DOCUMENT) document: Document,\n    ) {\n        this._state = store.state\n    }\n\n    async ngOnInit() {\n        if (Object.keys(history.state).length  {\n\t\t\tthis._offered_by= {\n\t\t\t\tid: data.user.id,\n\t\t\t\tname: data.user.name,\n\t\t\t\temail: data.user.email,\n\t\t\t\tavatar: data.user.avatar,\n\t\t\t}\n        });\n        this.price = this._offer.price;\n        this.description = this._offer.description;\n        this.title = this._offer.title;\n        this.imageLength = this._offer.image.length;\n    }\n\n    imageUrl(image: string) {\n        return this._state?.apiHost + `/post/get-post-image/${image}`;\n    }\n\n    sendMessage() {\n        const reciever = this._offered_by.id;\n        const sender = this._state.user.id\n        this.socket.emit(\"private message\", {reciever, sender, message:this.message});\n        this.flashMessages.show(\"successfully sent\", {cssClass: \"alert-success\"});\n        this.message = \"\";\n    }\n\n    onUploadMore() {\n        document.getElementById('image')?.click();\n    }\n\n    onChange(event: any) {\n        this.image = event.target.files[0];\n        let existingImages: any[] = [];\n        this._offer.image.forEach((img: any) => {\n            existingImages.push(img);\n        })\n        try {\n            const resp = this\n                        ._postServce\n                        .uploadMoreImages(\n                            this._offer._id, \n                            this._state.authToken, \n                            this.image,\n                            existingImages,\n                        );\n            resp.then((success) => {\n                this.flashMessages.show(success.message, {cssClass: \"alert-success\", timeout: 2000});\n                this.ngOnInit();\n            })\n        } catch (error: any) {\n            console.log(error)\n            this.flashMessages.show(error.message, {cssClass: \"alert-error\", timeout: 2000})\n        }\n    }\n\n    slideBackward() {\n        this.isActive--;\n    }\n    slideForward() {\n        this.isActive++;\n    }\n    async onUpdateOffer(id:string) {\n        const payload = {\n            'title': this.title,\n            'description': this.description,\n            'price': this.price?.toString()\n        };\n        try {\n            this._postServce.update(id, this._state.authToken, payload).subscribe((data: any) => {\n                if (data.success) {\n                    this.flashMessages.show(\"updated successfully\", {cssClass: \"alert-success\", timeout: 2000});\n                    this.ngOnInit();\n                } else {\n                    this.flashMessages.show(data.message, {cssClass: \"alert-error\", timeout: 2000});\n                }\n            })\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n    \n\n    \n        \n    \n        \n            \n                \n            \n            \n                {{ _offered_by.name}}\n            \n        \n\n        \n            \n            \n                \n                Send Message\n            \n        \n\n    \n\n    \n        \n            \n                \n            \n            \n                \n            \n            \n                \n            \n        \n        \n            \n        \n        \n            Add more pictures\n                \n            \n        \n        \n                \n                    \n                        \n                        \n                        \n                        \n                    \n                    \n                       \n                            {{ _offer.description}}\n                       \n                        \n                          {{ _offer.price}} &euro;\n                        \n                    \n                \n            \n                \n                    Update offer\n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./offer.component.scss\n                \n                @import '../../assets/sass/mixins';\n.container {\n    display: flex;\n    padding: 20px;\n    justify-content: center;\n    align-items: flex-start;\n    width: 100vw;\n    max-width: 100vw;\n    gap: 30px;\n    .sidebar{\n        display: flex;\n        flex-direction: column;\n        background-color: #e3e0e5;\n        justify-content: center;\n        align-items: center;\n        justify-items: center;\n        padding: 20px;\n        border-radius: 4px;\n        .user__offered-by{\n            display: flex;\n            flex-direction: column;\n            padding: 40px;\n            align-items: center;\n            justify-content: center;\n            gap: 10px;\n            .__image{\n                img{\n                    width: 200px;\n                    height: 200px;\n                    border-radius: 50%;\n                }\n            }\n\n            .__name{\n                span{\n                    font-weight: 600;\n                }\n            }\n\n        }\n        .msg{\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n            textarea{\n                padding: 10px 20px;\n                border: none;\n                outline: none;\n                border-radius: 4px;\n                width: 400px;\n            }\n            button{\n                padding: 10px 20px;\n                border: none;\n                outline: none;\n                background-color: rgb(20, 119, 165);\n                box-shadow: 1px 2px rgb(8, 54, 75);\n                border-radius: 4px;\n                color: #fff;\n                cursor: pointer;\n                &:hover{\n                    box-shadow: unset;\n                }\n            }\n        }\n    }\n\n    .middle{\n        border: 1px solid #333;\n        padding: 20px;\n        border-radius: 4px;\n        gap: 20px;\n        display: flex;\n        flex-direction: column;\n        .img{\n            img{\n                width: 500px;\n                height: calc(100vh - 400px);\n                border-radius: 4px;\n                @include largeScreen {\n                  width: auto;\n                  height: 450px;\n                }\n            }\n        }\n        .offer{\n            display: flex;\n            justify-content: center;\n            flex-direction: column;\n            align-items: center;\n            gap: 20px;\n\n            .__description{\n                font-size: 1rem;\n            }\n\n        }\n        .btn {\n            display: flex;\n            width: 100%;\n            justify-content: center;\n            .btn-edit {\n                background-color: #288eb9;\n                padding: 10px 20px;\n                border-radius: 4px;\n                color: white;\n                box-shadow: 4px 4px rgb(208, 224, 227);\n                min-width: 200px;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                gap: 10px;\n                cursor: pointer;\n                &:hover {\n                    box-shadow: unset;\n                }\n                i {\n                    align-self: flex-end;\n                }\n            }\n        }\n        .input {\n            padding: 10px 20px;\n            width: 100%;\n            height: max-content;\n            border-radius: 4px;\n            border: none;\n            outline: none;\n            background-color: #e3e0e5;\n            font-size: 1rem;\n        }\n    }\n    .input-container {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n        div{\n            width: 100%;\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n        }\n        .__price{\n            display: flex;\n            justify-content: center;\n            font-size: 1.2rem;\n            font-weight: 600;\n            width: 100%;\n            flex-direction: row;\n        }\n        .__description{\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            width: 100%;\n            font-size: 1rem;\n        }\n    }\n    .img-container {\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n        gap: 10px;\n        align-items: center;\n        span{\n            font-weight: 500;\n            font-size: 2rem;\n            cursor: pointer;\n            &:hover {\n                transform: scale(1.1);\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                {{ _offered_by.name}}                                                                                    Send Message                                                                                                                                                                                                                    Add more pictures                                                                                                                                                                                                                                                                           {{ _offer.description}}                                                                         {{ _offer.price}} €                                                                                                            Update offer                                        '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OfferComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/OfferModule.html": {
      url: "modules/OfferModule.html",
      title: "module - OfferModule",
      body: '\n                   \n\n\n\n\n    Modules\n    OfferModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OfferModule\n\n\n\ncluster_OfferModule_declarations\n\n\n\n\nOfferComponent\n\nOfferComponent\n\n\n\nOfferModule\n\nOfferModule\n\nOfferModule -->\n\nOfferComponent->OfferModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/single-offer/offer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OfferComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { FormsModule } from "@angular/forms";\nimport { CommonModule } from "@angular/common";\nimport { BrowserAnimationsModule } from "@angular/platform-browser/animations";\nimport { OfferComponent } from "./offer.component";\nimport { FlashMessagesService } from "flash-messages-angular";\n\n@NgModule({\n    declarations: [OfferComponent],\n    imports: [\n        CommonModule,\n        FormsModule,\n        BrowserAnimationsModule,\n    ],\n    providers: [FlashMessagesService]\n})\n\nexport class OfferModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/OffersComponent.html": {
      url: "components/OffersComponent.html",
      title: "component - OffersComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  OffersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/admin/offers/offers.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-offers\n            \n\n            \n                styleUrls\n                ./offer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./offers.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                offers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminService: AdminService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/admin/offers/offers.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminService\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/admin/offers/offers.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/offers/offers.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from \"@angular/core\";\nimport {AdminService} from \"../../../services/admin/AdminServices\";\n\n@Component({\n  selector: 'app-admin-offers',\n  templateUrl: './offers.component.html',\n  styleUrls: ['./offer.component.scss']\n})\n\nexport class OffersComponent implements OnInit{\n  offers: any[] = [];\n  constructor(private adminService: AdminService) {\n  }\n  ngOnInit(): void {\n    this.adminService.getOffers().subscribe((data: any) => {\n        if (data.success) {\n          this.offers = data.posts\n        }\n        console.log(this.offers)\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n        title\n        user\n        category\n        Status\n        Actions\n    \n    \n      \n        {{ offer.title }}\n        {{ offer.user_name }}\n        {{ offer.category }}\n        {{ offer.status }}\n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./offer.component.scss\n                \n                tr, td, th {\n  padding: 8px;\n  border-bottom: 1px solid #333;\n}\nth {\n  border-bottom: 1px solid #333;\n}\n.table {\n  padding: 10px;\n  width: 100%;\n  .actions {\n    .fa-edit {\n      color: green;\n      padding: 4px;\n      &:hover {\n        color: #2b542c;\n      }\n    }\n    .fa-trash {\n      color: crimson;\n      padding: 4px;\n      cursor: pointer;\n      &:hover {\n        color: darkred;\n      }\n    }\n  }\n}\ntable {\n  width: 100%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              title        user        category        Status        Actions                      {{ offer.title }}        {{ offer.user_name }}        {{ offer.category }}        {{ offer.status }}                                      '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OffersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/PostController.html": {
      url: "classes/PostController.html",
      title: "class - PostController",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/PostController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                destroy\n                            \n                            \n                                    Static\n                                    Async\n                                getCountByCategory\n                            \n                            \n                                    Static\n                                    Async\n                                getPostById\n                            \n                            \n                                    Static\n                                    Async\n                                getPosts\n                            \n                            \n                                    Static\n                                    Async\n                                getPostsByUser\n                            \n                            \n                                    Static\n                                    Async\n                                store\n                            \n                            \n                                    Static\n                                    Async\n                                updatePost\n                            \n                            \n                                    Static\n                                    Async\n                                uploadMoreImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getCountByCategory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountByCategory(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getPostById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPostById(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPosts(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getPostsByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPostsByUser(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        store\n                        \n                    \n                \n            \n            \n                \n                    \n                    store(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePost(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        uploadMoreImages\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadMoreImages(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/PostController.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\nimport { Post } from '../models/Post'\n\nexport class PostController {\n  static async store (req: Request, res: Response) {\n    const post = new Post({\n      title: req.body.title,\n      category: req.body.category,\n      description: req.body.description,\n      price: req.body.price,\n      date: Date.now(),\n      status: req.body.status,\n      user_id: req.body.user_id,\n      user_name: req.body.user_name\n    })\n\n    if (req.files?.length != 0) {\n      post.image = (req.files as Express.Multer.File[]).map((file) => file.filename)\n    }\n\n    try {\n      await post.save()\n      return res.json({\n        success: true,\n        message: 'post saved'\n      })\n    } catch (error) {\n      if (error instanceof Error) {\n        return res.json({\n          success: false,\n          message: error.message\n        })\n      }\n    }\n  }\n\n  static async getPosts (req: Request, res: Response) {\n    const posts = await Post.find({ status: 1 }).sort({ date: 'descending' }).exec()\n\n    if (posts == null) {\n      return res\n        .status(401)\n        .json({\n          success: false,\n          message: 'No posts found'\n        })\n    }\n\n    return res.json({\n      success: true,\n      posts\n    })\n  }\n\n  static async getPostsByUser (req: Request, res: Response) {\n    const posts = await Post.find({ user_id: req.params.user_id }).sort({ date: 'desc' }).exec()\n    if (posts == null) {\n      return res\n        .status(404)\n        .json({\n          success: false,\n          message: 'No offers available'\n        })\n    }\n\n    return res.json({\n      status: true,\n      posts\n    })\n  }\n\n  static async getPostById (req: Request, res: Response) {\n    const post = await Post.findById(req.params.id)\n\n    if (post == null) {\n      return res\n        .status(404)\n        .json({\n          success: false,\n          message: 'Offer not found!'\n        })\n    }\n\n    return res.json({\n      status: true,\n      post\n    })\n  }\n\n  static async destroy (req: Request, res: Response) {\n    const onDeleteResponse = await Post.findByIdAndDelete(req.params.id)\n    console.log(onDeleteResponse)\n    if (onDeleteResponse == null) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: 'offer not found'\n        })\n    }\n\n    return res.json({\n      success: true,\n      message: 'Offer deleted successfully'\n    })\n  }\n\n  static async uploadMoreImages (req: Request, res: Response) {\n    if (req.files?.length != 0) {\n      const image = (req.files as Express.Multer.File[]).map((file) => file.filename)\n      try {\n        const resp = await Post.findById(req.params.id, { image })\n        if (resp != null) {\n          const newImage = resp.image\n          if (Array.isArray(req.body.img)) {\n            req.body.img.forEach((img: any) => {\n              newImage?.push(img)\n            })\n          } else if (req.body.img) {\n            newImage?.push(req.body.img)\n          }\n          await Post.findByIdAndUpdate(req.params.id, { $set: { image: newImage } })\n        }\n        return res.json({\n          success: true,\n          message: 'Updated successfully'\n        })\n      } catch (error: any) {\n        return res.status(404)\n          .json({\n            success: false,\n            message: error?.message\n          })\n      }\n    }\n    return res.status(404)\n      .json({\n        success: false,\n        message: 'no file provided'\n      })\n  }\n\n  static async updatePost (req: Request, res: Response) {\n    await Post.findByIdAndUpdate(req.params.id, {\n      $set: {\n        title: req.body.title,\n        description: req.body.description,\n        price: req.body.price\n      }\n    }).then((resp) => {\n      return res.json({\n        success: true,\n        offer: resp\n      })\n    }).catch((e) => {\n      return res.json({\n        success: false,\n        message: e.message\n      })\n    })\n  }\n\n  static async getCountByCategory (req: Request, res: Response) {\n    const postCount = await Post.aggregate([\n      {\n        $group: {\n          _id: '$category',\n          count: { $sum: 1 }\n        }\n      }\n    ]).sort({ _id: 'ascending' }).exec()\n\n    if (!postCount) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: 'Not found'\n        })\n    }\n\n    return res.json({\n      success: true,\n      post: postCount\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/PostService.html": {
      url: "injectables/PostService.html",
      title: "injectable - PostService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/services/post/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _headers\n                            \n                            \n                                _state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyOffer\n                            \n                            \n                                getCountByCategory\n                            \n                            \n                                getPostById\n                            \n                            \n                                getPosts\n                            \n                            \n                                    Async\n                                storePost\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                uploadMoreImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/post/post.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyOffer\n                        \n                    \n                \n            \n            \n                \ndestroyOffer(id: string, token: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCountByCategory\n                        \n                    \n                \n            \n            \n                \ngetCountByCategory(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPostById\n                        \n                    \n                \n            \n            \n                \ngetPostById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosts\n                        \n                    \n                \n            \n            \n                \ngetPosts()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        storePost\n                        \n                    \n                \n            \n            \n                \n                    \n                    storePost(post: object | any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    post\n                                    \n                                            object | any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, token: any, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadMoreImages\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadMoreImages(id: string, token: any, image: any, existingImages: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/post/post.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    image\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    existingImages\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Headers\n\n                    \n                \n                \n                    \n                        Default value : new Headers()\n                    \n                \n                    \n                        \n                                Defined in src/views/src/services/post/post.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/services/post/post.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { sendRequest } from 'src/helpers/helpers';\nimport { store } from 'src/store/store';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  _state: any | undefined;\n  _headers: Headers = new Headers();\n\n  constructor(\n    private http: HttpClient,\n  ) {\n    this._state = store.state;\n    this._headers.append('Content-type', 'application/json');\n   }\n\n   getPosts() {\n      const url = this._state.apiHost + '/posts';\n      return  sendRequest(url, 'GET', \"\", this._headers);\n   }\n\n   getPostById(id: string) {\n    const url = this._state.apiHost + `/post/${id}`;\n    return  sendRequest(url, 'GET', \"\", this._headers);\n }\n\n   async storePost(post: object | any) {\n      post.user_id = this._state.user.id;\n      post.user_name = this._state.user.name;\n      const formData = new FormData();\n      Object.keys(post).forEach((key) => {\n          formData.append(key, post[key])\n      })\n      const path = '/post/save';\n      const url = this._state.apiHost + path;\n      const requestOptions= {\n        method: 'POST',\n        body: formData\n      };\n  \n      return await (await fetch(url, requestOptions)).json()\n   }\n\n   destroyOffer(id: string, token: any) {\n      const path = `/post/${id}`;\n      const url = this._state.apiHost + path;\n      this._headers.set(\"Authorization\", token);\n      return sendRequest(url, 'DELETE', \"\", this._headers);\n   }\n\n   async uploadMoreImages(id: string, token: any, image: any, existingImages: any = \"\") {\n      const path = `/post/update-image/${id}`\n      const url = this._state.apiHost + path;\n      this._headers.set(\"Authorization\", token);\n      const formData = new FormData()\n      if(existingImages) {\n        existingImages.forEach((img: any) => {\n          formData.append(\"img\", img);\n        })\n      }\n      formData.append('posts', image);\n      const requestOptions= {\n        method: 'PUT',\n        body: formData,\n      };\n      return await (await fetch(url, requestOptions)).json()\n   }\n\n   update(id: string, token: any, payload: any) {\n      const path = `/post/update/${id}`;\n      const url = this._state.apiHost + path;\n      return this.http.request('PUT', url, {\n        body: JSON.stringify(payload),\n        headers: {\n          \"Authorization\": token,\n          'Content-type': 'application/json'\n        }\n      });\n   }\n\n   getCountByCategory(token: string) {\n      const path = '/category/get-count';\n      const url = this._state.apiHost + path;\n\n      return this.http.get(url, {\n        headers: {\n          \"Authorization\": token,\n          'Content-type': 'application/json'\n        }\n      })\n   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/QueryResponse.html": {
      url: "classes/QueryResponse.html",
      title: "class - QueryResponse",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ResponseInterface/QueryResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                error\n                            \n                            \n                                    Static\n                                result\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(response: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/ResponseInterface/QueryResponse.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Error\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        result\n                        \n                    \n                \n            \n            \n                \n                    \n                    result(response: Result)\n                \n            \n\n\n            \n                \n                    Defined in src/ResponseInterface/QueryResponse.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                Result\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Result\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Result, Error } from \'./QuryResponseInterface\'\n\nexport default class QueryResponse {\n  static error (response: Error) {\n    return response\n  }\n\n  static result (response: Result) {\n    return response\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/ResetPasswordComponent.html": {
      url: "components/ResetPasswordComponent.html",
      title: "component - ResetPasswordComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(flashMessageService: FlashMessagesService, apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/reset-password/reset-password.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        flashMessageService\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/reset-password/reset-password.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/reset-password/reset-password.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\nimport { ApiService } from \"src/services/api/api.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.scss']\n})\n\nexport class ResetPasswordComponent{\n    email: string | undefined;\n\n    constructor(\n        private flashMessageService: FlashMessagesService,\n        private apiService: ApiService,\n        private router: Router\n    ){}\n\n    async onSubmit() {\n        const regex: RegExp = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n        if (!this.email) {\n            this.flashMessageService.show(\"Please fill the required field\", {cssClass: \"alert-error\", timeout: 3000});\n            return ;\n        }\n\n        if (!regex.test(this.email)) {\n            this.flashMessageService.show(\"Please enter a valid email address\", {cssClass: \"alert-error\", timeout: 3000});\n            return ;\n        }\n\n        try {\n            const resp = await this.apiService.resetPassword(this.email);\n            if(resp.success) {\n                this.flashMessageService.show(\"Email with an instruction to reset password has been sent to \" + this.email, {cssClass: \"alert-success\", timeout: 3000});\n                this.email = '';\n                this.router.navigate(['/login']);\n            } else {\n                this.flashMessageService.show(resp.message, {cssClass: \"alert-error\", timeout: 3000});\n                return ;\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n    \n\n    \n        \n    \n        \n        Submit\n    \n\n    \n\n    \n                \n                    ./reset-password.component.scss\n                \n                .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\n    min-height: 100vh;\n    max-width: 100vw;\n    .form-container {\n        display: flex;\n        flex-direction: column;\n        padding: 80px;\n        background-color: #fff;\n        border-radius: 4px;\n        font-size: 1rem;\n        gap: 20px;\n        box-shadow: 0 0 2px 2px rgb(190, 180, 180);\n        input{\n            padding: 15px 20px;\n            border-radius: 4px;\n            border: none;\n            outline: none;\n            width: 400px;\n            font-size: 1rem;\n            background-color: rgb(217, 217, 217);\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Submit    '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/ResetPasswordModule.html": {
      url: "modules/ResetPasswordModule.html",
      title: "module - ResetPasswordModule",
      body: '\n                   \n\n\n\n\n    Modules\n    ResetPasswordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResetPasswordModule\n\n\n\ncluster_ResetPasswordModule_imports\n\n\n\ncluster_ResetPasswordModule_declarations\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\n\n\nResetPasswordModule\n\nResetPasswordModule\n\nResetPasswordModule -->\n\nResetPasswordComponent->ResetPasswordModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nResetPasswordModule -->\n\nButtonModule->ResetPasswordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/reset-password/reset-password.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResetPasswordComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { FormsModule } from "@angular/forms";\nimport { ResetPasswordComponent } from "./reset-password.component";\nimport { FlashMessagesService } from "flash-messages-angular";\nimport { ButtonModule } from "src/utils/button/button.module";\n\n@NgModule({\n    declarations: [ResetPasswordComponent],\n    imports: [\n        FormsModule,\n        ButtonModule\n    ],\n    providers: [FlashMessagesService]\n})\n\nexport class ResetPasswordModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "interfaces/Result.html": {
      url: "interfaces/Result.html",
      title: "interface - Result",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Result\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ResponseInterface/QuryResponseInterface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     object | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     object | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Result {\n  success: boolean\n  message: object | string\n}\n\nexport interface Error {\n  success: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/SearchComponent.html": {
      url: "components/SearchComponent.html",
      title: "component - SearchComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/dashboard/search/serach.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n            \n                styleUrls\n                ./search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backSpaceEvent\n                            \n                            \n                                onKeyPressed\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                offerLookUp\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/dashboard/search/serach.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        offerLookUp\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/views/src/components/dashboard/search/serach.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backSpaceEvent\n                        \n                    \n                \n            \n            \n                \nbackSpaceEvent(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/search/serach.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyPressed\n                        \n                    \n                \n            \n            \n                \nonKeyPressed(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/dashboard/search/serach.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, Output, EventEmitter } from \"@angular/core\";\n\n@Component({\n    selector: 'app-search',\n    templateUrl: './search.component.html',\n    styleUrls: ['./search.component.scss']\n})\n\nexport class SearchComponent {\n\n    constructor(\n        @Inject(DOCUMENT) document: Document\n    ) {}\n\n    @Output() offerLookUp: EventEmitter  = new EventEmitter();\n\n    onKeyPressed(value: string) {\n       const icon: any =  document.querySelector('.icon')\n       icon.style.display = \"none\";\n       if(!value) {\n            icon.style.display = \"block\";\n       }\n       this.offerLookUp.emit(value.toString());\n    }\n\n    backSpaceEvent(value: string) {\n        this.offerLookUp.emit(value.toString());\n    }\n}\n\n    \n\n    \n        \n    \n    \n\n    \n\n    \n                \n                    ./search.component.scss\n                \n                @import '../../../assets/sass/mixins';\n\n.search-bar{\n    width: 40%;\n    padding: 10px;\n    position: sticky;\n    top: 0;\n    display: flex;\n    align-self: center;\n    justify-content: center;\n    align-items: center;\n    z-index: 3;\n    left: 30%;\n    input{\n        padding: 10px 20px;\n        width: 100%;\n        font-size: 14px;\n        border: none;\n        outline: none;\n        border-radius: 4px;\n        background-color: #e3e0e5;\n        @include mobile {\n            width: 100%;\n        }\n        @include tablet {\n            width: 100%;\n        }\n    }\n    .icon {\n        margin-left: -30px;\n        opacity: 0.2;\n        color: #333;\n        @include mobile {\n            margin-left: -10%;\n        }\n        @include tablet {\n            margin-left: -5%;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "injectables/SocketService.html": {
      url: "injectables/SocketService.html",
      title: "injectable - SocketService",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/views/src/services/messages/SocketService.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFetchMessages\n                            \n                            \n                                sendMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socket: Socket)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/services/messages/SocketService.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socket\n                                                  \n                                                        \n                                                                    Socket\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onFetchMessages\n                        \n                    \n                \n            \n            \n                \nonFetchMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/messages/SocketService.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessages\n                        \n                    \n                \n            \n            \n                \nsendMessages(args: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/services/messages/SocketService.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';  \nimport { store } from 'src/store/store';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class SocketService {\n    constructor(private socket: Socket) { }\n\n\t// emit event\n\tsendMessages(args: any) {\n\t\tthis.socket.emit('private message', args);\n\t} \n\n\t// listen event\n\tonFetchMessages() {\n\t\treturn this.socket.fromEvent('private message-'+store.state.user.id);\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/UserController.html": {
      url: "classes/UserController.html",
      title: "class - UserController",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/UserController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                authenticate\n                            \n                            \n                                    Static\n                                    Async\n                                comparePassword\n                            \n                            \n                                    Static\n                                    Async\n                                destroy\n                            \n                            \n                                    Static\n                                    Async\n                                getProfile\n                            \n                            \n                                    Static\n                                    Async\n                                getUserByEmail\n                            \n                            \n                                    Static\n                                getUserById\n                            \n                            \n                                    Static\n                                    Async\n                                registerUser\n                            \n                            \n                                    Static\n                                    Async\n                                resetPassword\n                            \n                            \n                                    Static\n                                    Async\n                                updatePassword\n                            \n                            \n                                    Static\n                                    Async\n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/controllers/UserController.ts:9\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        comparePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    comparePassword(plainPassword: string, hashedPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:195\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    plainPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashedPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:88\n                \n            \n\n\n            \n                \n                    Returns user profile\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(_email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string, callback: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    callback\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        updateProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserController.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../models/User'\nimport { Request, Response } from 'express'\nimport bcrypt from 'bcrypt'\nimport jsonwebtoken from 'jsonwebtoken'\nimport { Message } from '../models/Message'\nimport { Post } from '../models/Post'\nimport { transporter } from '../config/mail_service'\n\nexport class UserController {\n  constructor () {}\n\n  static async registerUser (req: Request, res: Response) {\n    const newUser = new User({\n      name: req.body.name,\n      email: req.body.email,\n      password: req.body.password,\n      role: req.body.role\n    })\n\n    /**\n\t\t* Hashing the plain password before sabing the user to the db\n\t\t*/\n    const salt = await bcrypt.genSalt(10)\n    const hash = await bcrypt.hash(newUser.password, salt)\n\n    newUser.password = hash\n\n    try {\n      await newUser.save()\n      res.json({\n        success: true,\n        message: 'user created successfuly'\n      })\n    } catch (error) {\n      if (error instanceof Error) {\n        res.json({\n          success: false,\n          message: error.message\n        })\n      }\n    }\n  }\n\n  static async authenticate (req: Request, res: Response) {\n    const user: any = await UserController.getUserByEmail(req.body.email)\n\n    if (user == null) {\n      return res\n        .status(404)\n        .json({\n          success: false,\n          message: 'User not found!'\n        })\n    }\n\n    const isMatch = await UserController.comparePassword(req.body.password, user.password)\n\n    if (!isMatch) {\n      return res\n        .status(401)\n        .json({\n          success: false,\n          message: 'wrong Password!'\n        })\n    }\n\n    const _user = {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      role: user.role\n    }\n\n    const secret: any = process.env.SECRET_KEY\n    const token = jsonwebtoken.sign({ _user }, secret, { expiresIn: 7200 })\n\n    return res.json({\n      success: true,\n      token: `jwt ${token}`,\n      user: _user\n    })\n  }\n\n  /**\n\t * Returns user profile\n\t */\n\n  static async getProfile (req: Request, res: Response) {\n    const user = await User.findById(req.params.id)\n    if (user == null) {\n      return res\n        .status(404)\n        .json({\n          success: false,\n          message: 'User not found'\n        })\n    }\n    return res.json({\n      success: true,\n      user: {\n        id: user.id,\n        name: user.name,\n        email: user.email,\n        avatar: user.avatar\n      }\n    })\n  }\n\n  static async updateProfile (req: Request, res: Response) {\n    try {\n      await User.findByIdAndUpdate(req.params.id, {\n        name: req.body.name,\n        email: req.body.email\n      })\n      return res.json({\n        success: true,\n        message: 'successfully updated'\n      })\n    } catch (error) {\n      if (error instanceof Error) {\n        return res.json({\n          success: false,\n          message: error.message\n        })\n      }\n    }\n  }\n\n  static async destroy (req: Request, res: Response) {\n\t\t User.deleteOne({ _id: req.body.id }).then(async (acknowledged) => {\n      await Message.deleteOne({\n        $or: [\n          {\n            sender: req.body.id\n          },\n          {\n            reciever: req.body.id\n          }\n        ]\n      }).then(async (success) => {\n        await Post.deleteOne({ user_id: req.body.id }).then((result) => {\n          return res.json({\n            success: true\n          })\n        })\n      }).catch((error) => {\n        res.status(404).json({\n          success: false,\n          message: error.message\n        })\n\t\t\t })\n\t\t }).catch((error) => {\n      res.status(404).json({\n        success: false,\n        message: error.message\n      })\n\t\t })\n  }\n\n  static async updatePassword (req: Request, res: Response) {\n    const user = await User.findById(req.params.id)\n    if (user === null) {\n      return res.status(404)\n        .json({\n          status: false,\n          message: 'User not found'\n        })\n    }\n    const isMatch = await UserController.comparePassword(req.body.old_password, user.password)\n\n    if (!isMatch) {\n      return res\n        .json({\n          status: false,\n          message: \"Password doesn't match\"\n        })\n    }\n    const salt = await bcrypt.genSalt(10)\n    const hash = await bcrypt.hash(req.body.new_password, salt)\n    await User.findByIdAndUpdate(req.params.id, { password: hash })\n    return res.json({\n      success: true,\n      message: 'Update successful'\n    })\n  }\n\n  static getUserById (id: string, callback: Function) {\n    User.findById(id, callback)\n  }\n\n  static async getUserByEmail (_email: string) {\n    return await User.findOne({ email: _email })\n  }\n\n  static async comparePassword (plainPassword: string, hashedPassword: string) {\n    return await bcrypt.compare(plainPassword, hashedPassword)\n  }\n\n  static async resetPassword (req: Request, res: Response) {\n    const user = await User.findOne({ email: req.params.email })\n    if (user == null) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: 'User not found'\n        })\n    }\n\n    const randomString = Math.random().toString(36).slice(-8)\n    const salt = await bcrypt.genSalt(10)\n    const hash = await bcrypt.hash(randomString, salt)\n\n    try {\n      await User.findByIdAndUpdate(user._id, { $set: { password: hash } })\n      await transporter.sendMail({\n        from: 'noreply@example.com',\n        to: req.params.email,\n        subject: 'Password reset',\n        html: `you have requested a password reset. here is your new password ${randomString}.\n\t\t\t\tPlease don't forget to change your password. If you didn't request this service please contact the admin.`\n      })\n      return res.json({\n        success: true,\n        message: 'Password has been sent via email successfully!'\n      })\n    } catch (error: any) {\n      return res.status(404)\n        .json({\n          success: false,\n          message: error.message\n        })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "classes/UserIssueController.html": {
      url: "classes/UserIssueController.html",
      title: "class - UserIssueController",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserIssueController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/UserIssueController.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        store\n                        \n                    \n                \n            \n            \n                \n                    \n                    store(req: Request, res: Response)\n                \n            \n\n\n            \n                \n                    Defined in src/controllers/UserIssueController.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Request, Response } from 'express'\nimport { Issue } from '../models/Issue'\n\nexport class UserIssueController {\n  static async store (req: Request, res: Response) {\n    const newIssue = new Issue({\n      issuer_name: req.body.issuer_name,\n      issuer_email: req.body.issuer_email,\n      subject: req.body.subject,\n      body: req.body.body,\n      time: Date.now()\n    })\n\n    try {\n      await newIssue.save()\n      return res.json({\n        success: true,\n        message: 'Successfully saved'\n      })\n    } catch (error: any) {\n      return res.json({\n        success: false,\n        message: error.message\n      })\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "components/UserProfileComponent.html": {
      url: "components/UserProfileComponent.html",
      title: "component - UserProfileComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/user-profile/user-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _file\n                            \n                            \n                                    Public\n                                _state\n                            \n                            \n                                _userOffers\n                            \n                            \n                                end\n                            \n                            \n                                error\n                            \n                            \n                                imageUrl\n                            \n                            \n                                message\n                            \n                            \n                                new_password\n                            \n                            \n                                numberOfPages\n                            \n                            \n                                old_password\n                            \n                            \n                                pageNumber\n                            \n                            \n                                paginatedOffers\n                            \n                            \n                                perPage\n                            \n                            \n                                repeat_password\n                            \n                            \n                                showTooltip\n                            \n                            \n                                start\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                fileUpload\n                            \n                            \n                                forward\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChange\n                            \n                            \n                                    Async\n                                onChangePassword\n                            \n                            \n                                onDelete\n                            \n                            \n                                    Async\n                                onDeleteOffer\n                            \n                            \n                                onEditOffer\n                            \n                            \n                                paginateOffers\n                            \n                            \n                                    Async\n                                submit\n                            \n                            \n                                toggleTooltip\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, _api: ApiService, router: Router, _flashMsgSrvc: FlashMessagesService, postservices: PostService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _flashMsgSrvc\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        postservices\n                                                  \n                                                        \n                                                                        PostService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        back\n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileUpload\n                        \n                    \n                \n            \n            \n                \nfileUpload()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forward\n                        \n                    \n                \n            \n            \n                \nforward()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChange\n                        \n                    \n                \n            \n            \n                \nonChange(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onChangePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    onChangePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onDeleteOffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeleteOffer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEditOffer\n                        \n                    \n                \n            \n            \n                \nonEditOffer(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginateOffers\n                        \n                    \n                \n            \n            \n                \npaginateOffers()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTooltip\n                        \n                    \n                \n            \n            \n                \ntoggleTooltip()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-profile/user-profile.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _file\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _userOffers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.perPage\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        old_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatedOffers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        perPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repeat_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-profile/user-profile.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { OnInit } from \"@angular/core\";\nimport { store } from \"src/store/store\";\nimport { DOCUMENT } from \"@angular/common\";\nimport { ApiService } from \"src/services/api/api.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\nimport { PostService } from \"src/services/post/post.service\";\n\n@Component({\n\tselector: 'app-user-profile',\n\ttemplateUrl: './user-profile.component.html',\n\tstyleUrls: ['./user-profile.component.scss']\n})\n\nexport class UserProfileComponent implements OnInit{\n\tuser: any;\n\tpublic _state: any\n\tshowTooltip: boolean = false;\n\t_file: string | any;\n\timageUrl: string | undefined;\n\tmessage: string | any;\n\t_userOffers: any;\n\tpageNumber: number = 1;\n\tnumberOfPages: any;\n\tperPage: number = 4;\n\tpaginatedOffers: any;\n\tstart: number = 0;\n\tend:number = this.perPage;\n\terror: string ='';\n\told_password: string | undefined;\n\tnew_password: string | undefined;\n\trepeat_password: string | undefined;\n\tconstructor(\n\t\t@Inject(DOCUMENT) document: Document,\n\t\tprivate _api: ApiService,\n\t\tprivate router: Router,\n\t\tprivate _flashMsgSrvc: FlashMessagesService,\n\t\tprivate postservices: PostService,\n\t) {\n\n\t}\n\n\tasync submit() {\n\t\ttry {\n\t\t\tif (typeof this._file != \"undefined\") {\n\t\t\t\tawait this._api.uploadProfilePicture(this.user.id, this._state.authToken, this._file);\n\t\t\t}\n\t\t\tconst response = await this._api.updateProfile(this.user.id, this._state.authToken, this.user);\n\t\t\tthis._flashMsgSrvc.show(\"Succesfully updated!\", {cssClass: \"alert-success\"});\n\t\t\twindow.location.reload();\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t}\t\n\t}\n\n\tonChange(event: any) {\n        this._file = event.target.files[0];\n    }\n\n\n\tasync ngOnInit() {\n\t\tthis._state = store.state;\n\t\t(await this._api.getProfile(this._state.user.id, this._state.authToken, this.user)).subscribe((data: any) => {\n\t\t\tthis.user= {\n\t\t\t\tid: data.user.id,\n\t\t\t\tname: data.user.name,\n\t\t\t\temail: data.user.email,\n\t\t\t\tavatar: data.user.avatar,\n\t\t\t}\n\n\t\t\tif (this.user.avatar !== null) {\n\t\t\t\tthis.imageUrl = this._state.apiHost + `/user/get-profile/${this.user.id}`;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.imageUrl = '../../assets/images/dummy.jpg';\n\t\t\t}\n\t\t});\n\n\t\tconst token: any = this._state.authToken;\n\t\t(await this._api.getOffersByUser(token)).subscribe((data: any) => {\n\t\t\tthis._userOffers = data.posts;\n\t\t\tthis.paginatedOffers = this.paginateOffers()\n\t\t\tthis.numberOfPages = Math.ceil(this._userOffers.length / this.perPage);\n\t\t});\n\t}\n\ttoggleTooltip() {\n\t\tthis.showTooltip = !this.showTooltip;\n\t}\n\n\tfileUpload() {\n\t\tdocument.getElementById('avatar')?.click();\n\t}\n\n\tpaginateOffers() {\n\t\treturn this._userOffers.slice(this.start, this.end);\n\t}\n\n\tforward() {\n\t\tthis.pageNumber++;\n\t\tthis.start += this.perPage;\n\t\tthis.end += this.perPage;\n\t\tthis.ngOnInit();\n\t}\n\n\tback() {\n\t\tthis.pageNumber--;\n\t\tthis.start -= this.perPage;\n\t\tthis.end -= this.perPage;\n\t\tthis.ngOnInit();\n\t}\n\n\tonDelete() {\n\t\tconst answer = confirm(\"Are you sure? once you delete this account there is no way to recover it.\")\n\t\tif(answer) {\n\t\t\ttry {\n\t\t\t\tthis._api.deleteUser(this._state.user, this._state.authToken);\n\t\t\t\tlocalStorage.clear();\n\t\t\t\twindow.location.reload();\n\t\t\t\tthis._flashMsgSrvc.show(\"Successfully deleted\", {cssClass: \"alert-success\"})\n\t\t\t} catch(error) {\n\t\t\t\tthis._flashMsgSrvc.show(\"Something went wrong please try again\", {cssClass: \"alert-error\"})\n\t\t\t}\n\t\t}\n\t}\n\n\tasync onChangePassword() {\n\t\tif (this.new_password != this.repeat_password) {\n\t\t\tthis.error = \"Password doesn't match\"; \n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.error = '';\n\t\t\t}, 2000)\n\t\t\treturn ;\n\t\t}\n\t\tif (!this.old_password || !this.new_password) {\n\t\t\tthis.error = \"Please fill all the required fields\"; \n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.error = '';\n\t\t\t}, 2000)\n\t\t\treturn ;\n\t\t}\n\n\t\tconst payload = {\n\t\t\t'old_password': this.old_password,\n\t\t\t'new_password': this.new_password\n\t\t};\n\n\t\ttry {\n\t\t\tconst resp = await this._api.updatePassword(this._state.user.id, payload, this._state.authToken);\n\t\t\tif (!resp.success) {\n\t\t\t\tthis._flashMsgSrvc.show(resp.message, {cssClass: \"alert-error\", timeout: 3000});\n\t\t\t\treturn ;\n\t\t\t}\n\n\t\t\tthis._flashMsgSrvc.show(resp.message, {cssClass: \"alert-success\", timeout: 3000});\n\t\t\tthis.old_password = '';\n\t\t\tthis.new_password = '';\n\t\t\tthis.repeat_password = '';\n\t\t\t\n\t\t} catch (error) {\n\t\t\tthis._flashMsgSrvc.show(\"Something went wrong please try again\", {cssClass: \"alert-error\", timeout: 3000});\n\t\t}\n\t}\n\n\tasync onDeleteOffer(id: string) {\n\t\ttry {\n\t\t\tconst resp = await this.postservices.destroyOffer(id, this._state.authToken);\n\t\t\tif (!resp.success) {\n\t\t\t\tthis._flashMsgSrvc.show(resp.message, {cssClass: \"alert-error\", timeout: 2000});\n\t\t\t\treturn ;\n\t\t\t}\n\t\t\tthis._flashMsgSrvc.show(resp.message, {cssClass: \"alert-success\", timeout: 2000});\n\t\t\tthis.ngOnInit();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n\n\tonEditOffer(id: string) {\n\t\tconst filtedOffer = Object.entries(this._userOffers).filter((offer: any) => offer[1]._id == id);\n\t\tthis.router.navigateByUrl(`offers/${id}`, {state: filtedOffer[1]});\n\t}\n}\n    \n\n    \n        \n    \n        \n           \n                \n                upload picture\n           \n            \n            Chang profile picture\n        \n        \n            \n                \n            \n            \n                \n            \n            Update profile\n            \n                Delete account\n            \n            \n                change to admin\n                \n            \n        \n    \n\n   \n    \n        \n            \n                \n                    {{offer.title}}\n                \n                \n                    {{offer.price}} &euro;\n                \n                \n                    \n                    \n                \n            \n        \n        \n             1\" (click)=\"back()\">\n            Page {{pageNumber}} of {{numberOfPages}}\n            \n        \n    \n    \n        \n            \n            \n            \n            {{error}}\n            Change password    \n        \n    \n   \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                @import '../../assets/sass/mixins';\n@import '../../assets/sass/variables.scss';\n.container {\n    padding: 40px;\n    max-width: 100vw;\n    display: flex;\n    // flex-direction: column;\n     align-items: center;\n    min-height: 100vh;\n    width: 100vw;\n    background-image: url('../../assets/images/campus.jpeg');\n    background-repeat: no-repeat;\n    background-size: 100% 100%;\n    justify-content: center;\n    gap: 20px;\n     margin-top: 50px;\n    @include mobile {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      align-content: center;\n      margin-top: 50px;\n    }\n\n    .profile-content {\n        display: flex;\n        flex-direction: column;\n        background-color: #fff;\n        box-shadow: 1px 2px gray;\n        padding: 40px;\n        border-radius: 4px;\n        gap: 30px;\n        height: min-content;\n        .img {\n            max-width: 300px;\n            max-height: 300px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            gap: 10px;\n            .img-container {\n                cursor: pointer;\n                width: 200px;\n                height: 240px;\n                div{\n                    width: 200px;\n                    height: 240px;\n                    border-radius: 50%;\n                    justify-self: flex-start;\n                    margin-top: -250px;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    background-color: $black;\n                    opacity: 0.8;\n                    color: $white;\n\n                    span {\n                        box-shadow: unset;\n                    }\n                }\n            }\n            img {\n                width: 100%;\n                border-radius: 50%;\n                max-width: 200px;\n                max-height: 240px;\n                cursor: pointer;\n            }\n            span {\n                font-size: 0.8rem;\n                background-color: $black;\n                padding: 8px;\n                color: $white;\n                border-radius: 4px;\n                box-shadow: 1px 2px rgb(33, 29, 29);\n                cursor: pointer;\n                &:hover {\n                    box-shadow: unset;\n                }\n            }\n        }\n        .profile-items {\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n            align-items: center;\n            .header {\n                display: flex;\n                justify-content: center;\n                background-color: #fea470;\n                padding: 10px 25px;\n                border-radius: 4px;\n                font-size: 1rem;\n                color: #000;\n                width: 300px;\n                border: none;\n                outline: none;\n            }\n        }\n    }\n\n    .offers {\n        gap: 10px;\n        padding: 20px;\n        min-width: 350px;\n        max-height: 540px;\n        background-color: #e3e0e5;\n        .offer-content {\n            display: flex;\n            width: 100%;\n            background-color: #fea470;\n            align-items: center;\n            border-radius: 4px;\n            gap: 20px;\n            background-color: #fff;\n            cursor: pointer;\n            box-shadow: 1px 2px rgb(214, 184, 184);\n            &:hover{\n                box-shadow: unset;\n            }\n            .title-container {\n                width: 100%;\n            }\n            .content {\n                padding: 15px 25px;\n                display: flex;\n                gap: 20px;\n                .price {\n                    font-weight: 600;\n                    width: 100%;\n                    min-width: 80px;\n                }\n            }\n            .actions{\n                display: flex;\n                gap: 10px;\n                padding: 10px;\n                .fa-edit {\n                    color: rgb(13, 128, 132);\n                    cursor: pointer;\n                    &:hover {\n                        color: rgb(3, 37, 39);\n                    }\n                }\n                .fa-trash {\n                    color: rgba(172, 19, 19, 0.866);\n                    cursor: pointer;\n                    &:hover {\n                        color:  rgba(190, 24, 24, 0.602);\n                    }\n                }\n            }\n        }\n        .page-number {\n            display: flex;\n            gap: 10px;\n            padding: 10px;\n            span {\n                font-weight: 600;\n            }\n            .fa {\n                font-weight: 600;\n                cursor: pointer;\n                &:hover {\n                    color: crimson;\n                    transform: scale(1.2);\n                }\n            }\n        }\n    }\n\n    .password{\n        gap: 10px;\n        padding: 20px;\n        min-width: 350px;\n        max-height: 540px;\n        background-color: #e3e0e5;\n        form{\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n            input{\n                padding: 10px 20px;\n                border: none;\n                outline: none;\n                min-width: 300px;\n                border-radius: 4px;\n                font-size: 1rem;\n            }\n            span {\n                padding: 0px 10px;\n                margin-left: 20px;\n                color: crimson;\n            }\n        }\n    }\n    .middle {\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n    }\n\n    .btn {\n        min-width: 300px;\n     }\n\n     .admin-span{\n        width: 100%;\n        display: flex;\n        background: #1a4273;\n        justify-content: center;\n        padding: 10px 20px;\n        border-radius: 4px;\n        color: white;\n        box-shadow: 0 0 1px 1px #777578;\n        cursor: pointer;\n        align-items: center;\n        text-transform: uppercase;\n        &:hover{\n            box-shadow: unset;\n        }\n        span{\n            width: 100%;\n        }\n     }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                       upload picture                                   Chang profile picture                                                                                                            Update profile                            Delete account                                        change to admin                                                                                                       {{offer.title}}                                                    {{offer.price}} €                                                                                                                                 1\" (click)=\"back()\">            Page {{pageNumber}} of {{numberOfPages}}                                                                                    {{error}}            Change password                   '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/UserProfileModule.html": {
      url: "modules/UserProfileModule.html",
      title: "module - UserProfileModule",
      body: '\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_providers\n\n\n\ncluster_UserProfileModule_imports\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nUserProfileModule -->\n\nButtonModule->UserProfileModule\n\n\n\n\n\nApiService\n\nApiService\n\nUserProfileModule -->\n\nApiService->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/user-profile/user-profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { UserProfileComponent } from "./user-profile.component";\nimport { ApiService } from "src/services/api/api.service";\nimport { FormsModule } from "@angular/forms";\nimport { BrowserAnimationsModule } from "@angular/platform-browser/animations";\nimport { CommonModule } from "@angular/common";\nimport { ButtonModule } from "src/utils/button/button.module";\nimport { RouterModule } from "@angular/router";\n\n@NgModule({\n\tdeclarations: [UserProfileComponent],\n\timports: [\n\t\tFormsModule,\n\t\tBrowserAnimationsModule,\n\t\tCommonModule,\n\t\tButtonModule,\n\t\tRouterModule\n\t],\n\tproviders: [ApiService]\n})\n\nexport class UserProfileModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/UserRegistrationComponent.html": {
      url: "components/UserRegistrationComponent.html",
      title: "component - UserRegistrationComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/user-registration/user-registration.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-register\n            \n\n            \n                styleUrls\n                ./user-registration.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayErrorMessage\n                            \n                            \n                                email\n                            \n                            \n                                errorMessage\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                passwordNotMatch\n                            \n                            \n                                repeat_password\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkIfMatch\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                toggleAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(api: ApiService, router: Router, _flashMessagesService: FlashMessagesService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _flashMessagesService\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfMatch\n                        \n                    \n                \n            \n            \n                \ncheckIfMatch()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-registration/user-registration.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-registration/user-registration.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAlert\n                        \n                    \n                \n            \n            \n                \ntoggleAlert()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/user-registration/user-registration.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayErrorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordNotMatch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repeat_password\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/user-registration/user-registration.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from \"@angular/core\";\nimport { ApiService } from \"src/services/api/api.service\";\nimport { Router } from \"@angular/router\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n\tselector: 'app-user-register',\n\ttemplateUrl: './user-registration.component.html',\n\tstyleUrls: ['./user-registration.component.scss']\n})\n\nexport class UserRegistrationComponent {\n\tname: string | undefined;\n\temail: string | undefined;\n\tpassword: string | undefined;\n\trepeat_password: string | undefined;\n\tpasswordNotMatch = false;\n\tdisplayErrorMessage = false;\n\terrorMessage: string | undefined;\n\n\tconstructor (\n\t\tprivate api: ApiService,\n\t\tprivate router: Router,\n\t\tprivate _flashMessagesService: FlashMessagesService,\n    public translate: TranslateService\n\t\t) {\n    translate.addLangs(['en', 'de']);\n    translate.setDefaultLang('en');\n    const browserLangs: any = translate.getBrowserLang();\n    translate.use(browserLangs?.match(/en|de/) ? browserLangs : 'en');\n\t}\n\n\tcheckIfMatch() {\n\t\treturn this.password === this.repeat_password\n\t}\n\n\ttoggleAlert() {\n\t\tthis.passwordNotMatch = false;\n\t}\n\n\tasync registerUser() {\n\t\tif (!this.checkIfMatch()) {\n\t\t\tthis.passwordNotMatch = true;\n\t\t\tthis.repeat_password = \"\";\n\t\t\treturn ;\n\t\t}\n\t\tif(!this.name || !this.password || !this.email) {\n\t\t\tthis._flashMessagesService.show(\"Please fill al the required field\", {cssClass: \"alert-error\", timeout: 3000});\n\t\t\treturn ;\n\t\t}\n\t\tconst user = {\n\t\t\tname: this.name,\n\t\t\temail: this.email,\n\t\t\tpassword: this.password,\n\t\t}\n\n\t\ttry {\n\t\t\tconst resp = await this.api.registerUser(user);\n\t\t\tif (!resp.success) {\n\t\t\t\tthis.displayErrorMessage = true;\n\t\t\t\tthis.errorMessage = \"Something went wrong try again\"\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis._flashMessagesService.show(\"You are now successfully registered and can login\", {cssClass: 'alert-success', timeout: 3000});\n\t\t\tthis.router.navigate(['/login'])\n\t\t} catch (error) {\n\t\t\tthis.displayErrorMessage = true;\n\t\t\tthis.errorMessage = \"Something went wrong try again\"\n\t\t\treturn\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            {{'CREATE ACCOUNT' | translate}}\n        \n        \n            \n                {{errorMessage}}\n            \n            \n                \n                \n            \n            \n                \n                \n            \n            \n                \n                \n            \n            \n                \n                \n            \n            \n                ** password doesn't match **\n            \n\n            \n                {{'NAV.REGISTER' | translate}}\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./user-registration.component.scss\n                \n                @import '../../assets/sass/variables.scss';\n@import '../../assets/sass/mixins';\n.container {\n    display: flex;\n    min-height: 100vh;\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    padding-top: 20px;\n    background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\n    .form-container {\n        background-color: #fff;\n        padding: 40px;\n        border-radius: 4px;\n        display: flex;\n        flex-direction: column;\n        gap: 30px;\n        @include mobile {\n            width: 90vw;\n            padding: 30px;\n        }\n        .form-header {\n            font-family: $header-font-family;\n            font-size: 2rem;\n            text-transform: uppercase;\n            font-weight: 600;\n            display: flex;\n            justify-content: center;\n            @include mobile {\n                font-size: 1.2rem;\n            }\n        }\n        .form-group {\n            display: flex;\n            flex-direction: column;\n            gap: 16px;\n            font-family: 'Montserrat', sans-serif;\n            .input-group {\n                display: flex;\n                gap: 12px;\n                align-items: center;\n                .icon {\n                    font-size: 1.4rem;\n                    min-width: 40px;\n                    @include mobile {\n                        min-width: 14px;\n                        font-size: 0.8rem;\n                    }\n                }\n                input {\n                    outline: none;\n                    border: none;\n                    border-radius: 4px;\n                    background: rgb(217, 217, 217);\n                    padding: 10px 20px;\n                    font-size: 1.2rem;\n                    width: 400px;\n                    @include mobile {\n                        width: 100%;\n                        font-size: 0.8rem;\n                    }\n                }\n            }\n            .alert-container {\n                display: flex;\n                justify-content: center;\n                .alert-danger {\n                    color: $primary;\n                }\n            }\n            .btn-container {\n                display: flex;\n                justify-content: flex-end;\n                .btn-primary {\n                    width: 400px;\n                    @include mobile {\n                        width: 430px;\n                        font-size: 0.8rem;\n                    }\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{\\'CREATE ACCOUNT\\' | translate}}                                            {{errorMessage}}                                                                                                                                                                                                                                                                        ** password doesn\\'t match **                                        {{\\'NAV.REGISTER\\' | translate}}                        '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "modules/UserRegistrationModule.html": {
      url: "modules/UserRegistrationModule.html",
      title: "module - UserRegistrationModule",
      body: '\n                   \n\n\n\n\n    Modules\n    UserRegistrationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserRegistrationModule\n\n\n\ncluster_UserRegistrationModule_declarations\n\n\n\ncluster_UserRegistrationModule_imports\n\n\n\ncluster_UserRegistrationModule_providers\n\n\n\n\nUserRegistrationComponent\n\nUserRegistrationComponent\n\n\n\nUserRegistrationModule\n\nUserRegistrationModule\n\nUserRegistrationModule -->\n\nUserRegistrationComponent->UserRegistrationModule\n\n\n\n\n\nButtonModule\n\nButtonModule\n\nUserRegistrationModule -->\n\nButtonModule->UserRegistrationModule\n\n\n\n\n\nApiService\n\nApiService\n\nUserRegistrationModule -->\n\nApiService->UserRegistrationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/views/src/components/user-registration/user-registration.modules.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserRegistrationComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ButtonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from "@angular/core";\nimport { UserRegistrationComponent } from "./user-registration.component";\nimport { FormsModule } from \'@angular/forms\';\nimport { CommonModule } from \'@angular/common\';\nimport { BrowserModule } from \'@angular/platform-browser\';\nimport { ApiService } from "src/services/api/api.service";\nimport { ButtonModule } from "src/utils/button/button.module";\nimport { TranslateModule, TranslateService } from \'@ngx-translate/core\';\n\n@NgModule({\n\tdeclarations: [UserRegistrationComponent],\n\timports: [\n\t\tFormsModule,\n\t\tCommonModule,\n\t\tBrowserModule,\n\t\tButtonModule,\n    TranslateModule\n\t],\n\tproviders: [ApiService, TranslateService]\n})\n\nexport class UserRegistrationModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "components/UsersComponent.html": {
      url: "components/UsersComponent.html",
      title: "component - UsersComponent",
      body: "\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/views/src/components/admin/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-users\n            \n\n            \n                styleUrls\n                ./users.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editing\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyUser\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(adminApi: AdminService, flashMsg: FlashMessagesService)\n                    \n                \n                        \n                            \n                                Defined in src/views/src/components/admin/users/users.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminApi\n                                                  \n                                                        \n                                                                        AdminService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        flashMsg\n                                                  \n                                                        \n                                                                        FlashMessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroyUser\n                        \n                    \n                \n            \n            \n                \ndestroyUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/admin/users/users.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/admin/users/users.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/views/src/components/admin/users/users.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/users/users.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/users/users.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Roles\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/users/users.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUser[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/views/src/components/admin/users/users.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { AdminService } from \"src/services/admin/AdminServices\";\nimport { store } from \"src/store/store\";\nimport { FlashMessagesService } from \"flash-messages-angular\";\n\ninterface IUser {\n    avatar: string,\n    email: string,\n    name: string\n    password: string\n    role: number\n    _id: string\n};\n\nconst Roles = [\n    \"user\",\n    \"admin\"\n]\n\n@Component({\n    selector: 'app-admin-users',\n    templateUrl: './users.component.html',\n    styleUrls: ['./users.component.scss']\n})\n\nexport class UsersComponent implements OnInit {\n    users: IUser[] = [];\n    editing: string = '';\n    roles = Roles;\n    role: string = 'user';\n\n    constructor(\n        private adminApi: AdminService,\n        private flashMsg: FlashMessagesService\n    ){}\n\n    async ngOnInit() {\n        this.adminApi.getUsers(store.state.authToken).subscribe((data: any) => {\n            if(data.success) {\n                this.users = data.users;\n            }\n        });\n    }\n\n    updateRole(id: string) {\n        this.adminApi.updateRole(id, this.role, store.state.authToken).subscribe((data: any) => {\n            if(data.success) {\n                this.flashMsg.show(\n                    \"User role updated successfully\",\n                    {cssClass: \"alert-success\"}\n                );\n            }\n            this.ngOnInit();\n            this.editing = '';\n        });\n    }\n\n    destroyUser(id: string) {\n        this.adminApi.destroyUser(id, store.state.authToken).subscribe((data: any) => {\n            this.flashMsg.show(\n                \"User deleted\",\n                {cssClass: \"alert-success\"}\n            );\n            this.ngOnInit();\n        })\n    }\n}\n    \n\n    \n        \n    \n        \n            Name\n            Email\n            Role\n            Actions\n        \n        \n            \n                {{user.name}}\n                {{user.email}}\n                {{user.role}}\n                \n                    \n                        \n                            {{role}}\n                        \n                    \n                \n                \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./users.component.scss\n                \n                @import '../../../assets/sass/mixins';\ntr, td, th {\n  padding: 8px;\n  border-bottom: 1px solid #333;\n}\nth {\n  border-bottom: 1px solid #333;\n}\n.table {\n    padding: 10px;\n  .actions {\n    .fa-edit {\n      color: green;\n      padding: 4px;\n      cursor: pointer;\n      &:hover {\n        color: #2b542c;\n      }\n    }\n    .fa-trash {\n      color: crimson;\n      padding: 4px;\n      cursor: pointer;\n      &:hover {\n        color: darkred;\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Name            Email            Role            Actions                                            {{user.name}}                {{user.email}}                {{user.role}}                                                                                        {{role}}                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AdminDashboardComponent', 'selector': 'app-admin-dashboard'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ButtonComponent', 'selector': 'app-cta'},{'name': 'CarouselComponent', 'selector': 'app-carousel'},{'name': 'CategoryChartComponent', 'selector': 'app-admin-category-chart'},{'name': 'ChartComponent', 'selector': 'app-admin-chart'},{'name': 'ChatBoxComponent', 'selector': 'app-chat-box'},{'name': 'CreateNewItemComponent', 'selector': 'app-create-new-item'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DashboardSidebarComponent', 'selector': 'app-dashboard-sidebar'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'IssueComponent', 'selector': 'app-issue'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'NavBarComponent', 'selector': 'app-nav-bar'},{'name': 'OfferComponent', 'selector': 'app-single-offer'},{'name': 'OffersComponent', 'selector': 'app-admin-offers'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationComponent', 'selector': 'app-user-register'},{'name': 'UsersComponent', 'selector': 'app-admin-users'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
    "coverage.html": {
      url: "coverage.html",
      title: "coverage - coverage",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/ResponseInterface/QueryResponse.ts\n            \n            class\n            QueryResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ResponseInterface/QuryResponseInterface.ts\n            \n            interface\n            Error\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ResponseInterface/QuryResponseInterface.ts\n            \n            interface\n            Result\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/db_options.ts\n            \n            variable\n            dbConnect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/db_options.ts\n            \n            variable\n            options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            function\n            displayImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            bucketName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            connect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            dburl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            gfs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            gridfsBucket\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            storage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/file_upload.ts\n            \n            variable\n            upload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/mail_service.ts\n            \n            variable\n            transporter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/passport_config.ts\n            \n            variable\n            pass\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/AdminController.ts\n            \n            class\n            AdminController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/controllers/ImageController.ts\n            \n            class\n            ImageController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/controllers/MessageController.ts\n            \n            class\n            MessageController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/controllers/PostController.ts\n            \n            class\n            PostController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/controllers/UserController.ts\n            \n            class\n            UserController\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                src/controllers/UserIssueController.ts\n            \n            class\n            UserIssueController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            variable\n            io\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            variable\n            PORT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/index.ts\n            \n            variable\n            server\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Issue.ts\n            \n            interface\n            IIssue\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/Issue.ts\n            \n            variable\n            Issue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Issue.ts\n            \n            variable\n            issueSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Message.ts\n            \n            interface\n            IMessage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/Message.ts\n            \n            variable\n            Message\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Message.ts\n            \n            variable\n            messageSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Post.ts\n            \n            interface\n            IPost\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/Post.ts\n            \n            variable\n            Post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Post.ts\n            \n            variable\n            postSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/User.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/User.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/User.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/routes/routes.ts\n            \n            variable\n            router\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/app/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/app/app.module.ts\n            \n            variable\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/category-chart/category-chart.component.ts\n            \n            component\n            CategoryChartComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/category-chart/category-chart.component.ts\n            \n            interface\n            IDataset\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/category-chart/category-chart.component.ts\n            \n            variable\n            colors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/dashboard/admin-dashboard.component.ts\n            \n            component\n            AdminDashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/offers/offers.component.ts\n            \n            component\n            OffersComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/users/users.component.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/views/src/components/admin/users/users.component.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/components/carousel/carousel.component.ts\n            \n            component\n            CarouselComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/views/src/components/chat-box/chat-box.component.ts\n            \n            component\n            ChatBoxComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/components/create-new-item/create-new-item.component.ts\n            \n            component\n            CreateNewItemComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/views/src/components/dashboard/dashboard-sidebar/sidebar.component.ts\n            \n            component\n            DashboardSidebarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/views/src/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/views/src/components/dashboard/search/serach.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/views/src/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/views/src/components/issue/issue.component.ts\n            \n            component\n            IssueComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/views/src/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/views/src/components/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/views/src/components/nav-bar/nav-bar.component.ts\n            \n            component\n            NavBarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/views/src/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/views/src/components/single-offer/offer.component.ts\n            \n            component\n            OfferComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/views/src/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/views/src/components/user-registration/user-registration.component.ts\n            \n            component\n            UserRegistrationComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/views/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/helpers/helpers.ts\n            \n            interface\n            IRequestOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/views/src/helpers/helpers.ts\n            \n            variable\n            sendRequest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/services/admin-guard/AdminGuard.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/views/src/services/admin/AdminServices.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/views/src/services/api/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/views/src/services/auth-guard/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/views/src/services/messages/MessageService.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/views/src/services/messages/SocketService.ts\n            \n            injectable\n            SocketService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/views/src/services/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/views/src/store/categoryRepository.ts\n            \n            variable\n            categories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/store/store.ts\n            \n            variable\n            store\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/views/src/utils/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/views/src/utils/chart/chart.component.ts\n            \n            component\n            ChartComponent\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById(\'coverage-table\'));\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "dependencies.html": {
      url: "dependencies.html",
      title: "package-dependencies - dependencies",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @types/bcrypt : ^5.0.0\n        \n            @types/body-parser : ^1.19.2\n        \n            @types/cors : ^2.8.12\n        \n            @types/express-session : ^1.17.5\n        \n            @types/gridfs-stream : ^0.5.36\n        \n            @types/jsonwebtoken : ^8.5.9\n        \n            @types/multer : ^1.4.7\n        \n            @types/multer-gridfs-storage : ^4.0.5\n        \n            @types/nodemailer : ^6.4.6\n        \n            @types/passport : ^1.0.11\n        \n            @types/passport-jwt : ^3.0.7\n        \n            @types/socket.io : ^3.0.2\n        \n            bcrypt : ^5.1.0\n        \n            body-parser : ^1.20.1\n        \n            cors : ^2.8.5\n        \n            dotenv : ^16.0.3\n        \n            eslint-config-standard-with-typescript : ^23.0.0\n        \n            express : ^4.18.2\n        \n            express-session : ^1.17.3\n        \n            find-config : ^1.0.0\n        \n            gridfs-stream : ^1.1.1\n        \n            mongoose : ^6.7.0\n        \n            multer-gridfs-storage : ^5.0.2\n        \n            nodemailer : ^6.8.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            socket.io : ^4.5.3\n        \n            ts-node : ^10.9.1\n        \n            tslint : ^6.1.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/functions.html": {
      url: "miscellaneous/functions.html",
      title: "miscellaneous-functions - functions",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            displayImage   (src/.../file_upload.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/file_upload.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        displayImage\n                        \n                    \n                \n            \n            \n                \ndisplayImage(res: Response, file: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "index.html": {
      url: "index.html",
      title: "getting-started - index",
      body: '\n                   \n\n\nDesse, Kinfemichael, \n    Matriculation no. 00813759\nSufiya, Afzal \n    Matriculation no. 22108480\n\nUniversity Classifieds App\nLink to the repository\nProjectdescription\nThe Technische Hochschule Deggendorf is a university of applied sciences in Deggendorf , Lower Bavaria , with around 8,000 students (as of winter semester 2020/21). For advertisement of their own sell/giveaway offers, a portal for classifieds is our idea of this project. Using this portal students, teaching faculties and other staff members of university can post their second hand/used stuff to sell/giveaway.\nprerequisite\n\nnode v4+\nangular cli\n\nCode base and structure\nThe root project follewed mvc design pattern. All the backend filles are defined in the src directory. \n\nRoutes directory holds all the required routes and paths\n\n\nControllers directory includes all the classes defined to interact with database and the view\n\n\nModels directory holds all the schema definations of the application\n\n\nthe front end angular app resides in the views directory\n\n\nOnce the front end app is build the build is configured to be passed to the public directory. This directory holds all the static files. The application is set up in a way it is possible to run the whol app from one server instead of running the backend and the front end in two seprate server. Of course during the development phase we have to run the frontend angular app on a separate folder.\n\n\nFinally the config directory holds necessary configuratyions. including databse connection, authentication configuration and file storage configuration.\n\n\nnecessary environmental variables are defined in the .env file.\n\nDirectory structure\n   \nInstallation\n\nfirst clone the repository\n\ncopy .env.example to .env and add the required environment variables\n\ncp .env.example .env\n\n\nto install all the required packages and dependencies\n\nnpm install\n\n\nto run server\n\n\n\nnpm run dev\n\n\nto run the front end app\n\n\ncd src/views\n\n\nng serve\n\n\nto build the angular app run \nng build\n\n\n\n The command above will compile the app into src/public directory.\nBasic Usage\nUsers can view the posts from other users without login. To send a mesasge or post own offer, user needs to login/register on the portal. There are different categories for different products. User can use filter as well to sort out the ads as per requirement.\nUse cases\n\nParsing through available offers for a specific item. (no login neede)\nUsers can search for item or filter the offers based on categories and or prices (no login needed)\nusers can register on the portal and become a memeber. to register users need a valid email address. on the database users name email and hashed password will be saved.\nregistered users can login \nregistered users can create an offer, edit their offer and delete their offer.\nregistered users can send private messages to another registered user\nregistered users can edit their profile which includes changing profile picture, updating passwords and name\nchatting with admin.\nonce sold users can mark their offer sold. sold items will be deleted from the portal\nusers can change the language to German or English\n\nProject Demo\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "modules.html": {
      url: "modules.html",
      title: "modules - modules",
      body: '\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminDashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CreateNewItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IssueModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MessageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OfferModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResetPasswordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRegistrationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "overview.html": {
      url: "overview.html",
      title: "overview - overview",
      body: '\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminDashboardModule\n\n\n\ncluster_AdminDashboardModule_declarations\n\n\n\ncluster_AdminDashboardModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ButtonModule\n\n\n\ncluster_ButtonModule_declarations\n\n\n\ncluster_ButtonModule_exports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_CreateNewItemModule\n\n\n\ncluster_CreateNewItemModule_declarations\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_IssueModule\n\n\n\ncluster_IssueModule_declarations\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_MessageModule\n\n\n\ncluster_MessageModule_declarations\n\n\n\ncluster_MessageModule_providers\n\n\n\ncluster_OfferModule\n\n\n\ncluster_OfferModule_declarations\n\n\n\ncluster_ResetPasswordModule\n\n\n\ncluster_ResetPasswordModule_declarations\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserRegistrationModule\n\n\n\ncluster_UserRegistrationModule_declarations\n\n\n\n\nAdminDashboardComponent\n\nAdminDashboardComponent\n\n\n\nAdminDashboardModule\n\nAdminDashboardModule\n\nAdminDashboardModule -->\n\nAdminDashboardComponent->AdminDashboardModule\n\n\n\n\n\nCategoryChartComponent\n\nCategoryChartComponent\n\nAdminDashboardModule -->\n\nCategoryChartComponent->AdminDashboardModule\n\n\n\n\n\nOffersComponent\n\nOffersComponent\n\nAdminDashboardModule -->\n\nOffersComponent->AdminDashboardModule\n\n\n\n\n\nUsersComponent\n\nUsersComponent\n\nAdminDashboardModule -->\n\nUsersComponent->AdminDashboardModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminDashboardModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminDashboardModule -->\n\nAdminService->AdminDashboardModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nNavBarComponent\n\nNavBarComponent\n\nAppModule -->\n\nNavBarComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCreateNewItemModule\n\nCreateNewItemModule\n\nAppModule -->\n\nCreateNewItemModule->AppModule\n\n\n\n\n\nDashboardModule\n\nDashboardModule\n\nAppModule -->\n\nDashboardModule->AppModule\n\n\n\n\n\nIssueModule\n\nIssueModule\n\nAppModule -->\n\nIssueModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nMessageModule\n\nMessageModule\n\nAppModule -->\n\nMessageModule->AppModule\n\n\n\n\n\nOfferModule\n\nOfferModule\n\nAppModule -->\n\nOfferModule->AppModule\n\n\n\n\n\nResetPasswordModule\n\nResetPasswordModule\n\nAppModule -->\n\nResetPasswordModule->AppModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nAppModule -->\n\nUserProfileModule->AppModule\n\n\n\n\n\nUserRegistrationModule\n\nUserRegistrationModule\n\nAppModule -->\n\nUserRegistrationModule->AppModule\n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\nLoginModule -->\n\nApiService->LoginModule\n\n\n\nUserProfileModule -->\n\nApiService->UserProfileModule\n\n\n\nUserRegistrationModule -->\n\nApiService->UserRegistrationModule\n\n\n\n\n\nMessageService\n\nMessageService\n\nAppModule -->\n\nMessageService->AppModule\n\n\n\nMessageModule -->\n\nMessageService->MessageModule\n\n\n\n\n\nPostService\n\nPostService\n\nAppModule -->\n\nPostService->AppModule\n\n\n\nDashboardModule -->\n\nPostService->DashboardModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\n\n\nButtonModule\n\nButtonModule\n\nButtonModule -->\n\nButtonComponent->ButtonModule\n\n\n\nCreateNewItemModule -->\n\nButtonModule->CreateNewItemModule\n\n\n\nDashboardModule -->\n\nButtonModule->DashboardModule\n\n\n\nIssueModule -->\n\nButtonModule->IssueModule\n\n\n\nLoginModule -->\n\nButtonModule->LoginModule\n\n\n\nResetPasswordModule -->\n\nButtonModule->ResetPasswordModule\n\n\n\nUserProfileModule -->\n\nButtonModule->UserProfileModule\n\n\n\nUserRegistrationModule -->\n\nButtonModule->UserRegistrationModule\n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nButtonModule->ButtonComponent \n\n\n\n\n\nChartComponent\n\nChartComponent\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartComponent->ChartModule\n\n\n\n\n\nChartComponent \n\nChartComponent \n\nChartComponent  -->\n\nChartModule->ChartComponent \n\n\n\n\n\nCreateNewItemComponent\n\nCreateNewItemComponent\n\nCreateNewItemModule -->\n\nCreateNewItemComponent->CreateNewItemModule\n\n\n\n\n\nCarouselComponent\n\nCarouselComponent\n\nDashboardModule -->\n\nCarouselComponent->DashboardModule\n\n\n\n\n\nChatBoxComponent\n\nChatBoxComponent\n\nDashboardModule -->\n\nChatBoxComponent->DashboardModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nDashboardSidebarComponent\n\nDashboardSidebarComponent\n\nDashboardModule -->\n\nDashboardSidebarComponent->DashboardModule\n\n\n\n\n\nSearchComponent\n\nSearchComponent\n\nDashboardModule -->\n\nSearchComponent->DashboardModule\n\n\n\n\n\nIssueComponent\n\nIssueComponent\n\nIssueModule -->\n\nIssueComponent->IssueModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nMessageComponent\n\nMessageComponent\n\nMessageModule -->\n\nMessageComponent->MessageModule\n\n\n\n\n\nSocketService\n\nSocketService\n\nMessageModule -->\n\nSocketService->MessageModule\n\n\n\n\n\nOfferComponent\n\nOfferComponent\n\nOfferModule -->\n\nOfferComponent->OfferModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nResetPasswordModule -->\n\nResetPasswordComponent->ResetPasswordModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserRegistrationComponent\n\nUserRegistrationComponent\n\nUserRegistrationModule -->\n\nUserRegistrationComponent->UserRegistrationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        10 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "properties.html": {
      url: "properties.html",
      title: "package-properties - properties",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : A web application for classified marketplace to post sell/giveaway offers: - University students - Teaching faculties - Other university staff members\n        \n            Keywords : \n        \n            License : ISC\n        \n            Repository : https://mygit.th-deg.de/as05480/my-project.git\n        \n            Author : kinfemichaelalemu@gmail.com\n    \n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "routes.html": {
      url: "routes.html",
      title: "routes - routes",
      body: '\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching ""\n        \n    \n    \n        No results matching ""\n    \n\n',
    },
    "miscellaneous/variables.html": {
      url: "miscellaneous/variables.html",
      title: "miscellaneous-variables - variables",
      body: "\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (src/.../index.ts)\n                        \n                        \n                            bucketName   (src/.../file_upload.ts)\n                        \n                        \n                            categories   (src/.../categoryRepository.ts)\n                        \n                        \n                            colors   (src/.../category-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            connect   (src/.../file_upload.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            dbConnect   (src/.../db_options.ts)\n                        \n                        \n                            dburl   (src/.../file_upload.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            gfs   (src/.../file_upload.ts)\n                        \n                        \n                            gridfsBucket   (src/.../file_upload.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            io   (src/.../index.ts)\n                        \n                        \n                            Issue   (src/.../Issue.ts)\n                        \n                        \n                            issueSchema   (src/.../Issue.ts)\n                        \n                        \n                            Message   (src/.../Message.ts)\n                        \n                        \n                            messageSchema   (src/.../Message.ts)\n                        \n                        \n                            options   (src/.../db_options.ts)\n                        \n                        \n                            pass   (src/.../passport_config.ts)\n                        \n                        \n                            PORT   (src/.../index.ts)\n                        \n                        \n                            Post   (src/.../Post.ts)\n                        \n                        \n                            postSchema   (src/.../Post.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            Roles   (src/.../users.component.ts)\n                        \n                        \n                            router   (src/.../routes.ts)\n                        \n                        \n                            sendRequest   (src/.../helpers.ts)\n                        \n                        \n                            server   (src/.../index.ts)\n                        \n                        \n                            storage   (src/.../file_upload.ts)\n                        \n                        \n                            store   (src/.../store.ts)\n                        \n                        \n                            transporter   (src/.../mail_service.ts)\n                        \n                        \n                            upload   (src/.../file_upload.ts)\n                        \n                        \n                            User   (src/.../User.ts)\n                        \n                        \n                            userSchema   (src/.../User.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        io\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('socket.io')(server, {\n  cors: {\n    origin: '*'\n  }\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3000\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Default value : http.createServer(app)\n                    \n                \n\n\n        \n    \n\n    src/config/file_upload.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bucketName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'uploads'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.createConnection(dburl, options)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dburl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : process.env.DATABASE_URL\n                    \n                \n\n            \n                \n                    create storage engine\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gfs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     gridfsstream.Grid\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gridfsBucket\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GridFSBucket\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GridFsStorage({\n  url: dburl,\n  file: async (req, file) => {\n    return await new Promise((resolve, reject) => {\n      crypto.randomBytes(16, (err, buf) => {\n        if (err != null) {\n          reject(err)\n        }\n        const filename = buf.toString('hex') + path.extname(file.originalname)\n        const fileInfo = {\n          filename,\n          bucketName\n        }\n        resolve(fileInfo)\n      })\n    })\n  }\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        upload\n                        \n                    \n                \n            \n                \n                    \n                        Default value : multer({ storage })\n                    \n                \n\n\n        \n    \n\n    src/views/src/store/categoryRepository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Cookware',\n    'Electronics',\n    'Furniture',\n    'Study Material',\n]\n                    \n                \n\n\n        \n    \n\n    src/views/src/components/admin/category-chart/category-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        colors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"green\",\n    \"yellow\",\n    \"red\",\n    \"blue\"\n]\n                    \n                \n\n\n        \n    \n\n    src/views/src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SocketIoConfig\n\n                    \n                \n                \n                    \n                        Default value : {url: store.state.apiHost}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (http: HttpClient) => {\n    return new TranslateHttpLoader(http);\n}\n                    \n                \n\n\n        \n    \n\n    src/views/src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/config/db_options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dbConnect\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (url: any): Promise => {\n  try {\n    await mongoose.connect(url, options)\n    return QueryResponse.result({ success: true, message: `> Database connected to ${url}` })\n  } catch (error: any) {\n    return QueryResponse.error({ success: true, message: error.message })\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  useNewUrlParser: true,\n  autoIndex: true, // this is the code I added that solved it all\n  keepAlive: true,\n  connectTimeoutMS: 200000,\n  socketTimeoutMS: 45000,\n  family: 4, // Use IPv4, skip trying IPv6\n  useUnifiedTopology: true\n}\n                    \n                \n\n\n        \n    \n\n    src/views/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/views/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n}\n                    \n                \n\n\n        \n    \n\n    src/models/Issue.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Issue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('Issue', issueSchema)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        issueSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema ({\n  issuer_name: {\n    type: String,\n    required: true\n  },\n  issuer_email: {\n    type: String,\n    required: true\n  },\n  subject: {\n    type: String,\n    required: true\n  },\n  body: {\n    type: String,\n    required: true\n  },\n  status: {\n    type: String,\n    default: 'open'\n  },\n  time: Date\n})\n                    \n                \n\n\n        \n    \n\n    src/models/Message.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Message\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('Message', messageSchema)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  body: String,\n  reciever: String,\n  sender: String,\n  sender_name: String,\n  time: Date,\n  group_index: String,\n  sender_avatar: String\n})\n                    \n                \n\n\n        \n    \n\n    src/config/passport_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pass\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (passport: any, secret: string | undefined): any => {\n  const options = {\n    jwtFromRequest: ExtractJwt.fromAuthHeaderWithScheme('jwt'),\n    secretOrKey: secret\n  }\n\n  passport.use(new Strategy(options, function (jwtPayload: string | any, done: (arg0: null, arg1: boolean) => any) {\n    UserController.getUserById(jwtPayload?._user.id, (err: Error | any, user: any) => {\n      if (err) {\n        return done(err, false)\n      }\n      if (user !== null) {\n        return done(null, user)\n      } else {\n        return done(null, false)\n      }\n    })\n  }))\n}\n                    \n                \n\n\n        \n    \n\n    src/models/Post.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Post\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('Post', postSchema)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  title: {\n    type: String,\n    required: true\n  },\n  category: {\n    type: String,\n    required: true\n  },\n  description: {\n    type: String,\n    required: true\n  },\n  price: String,\n  date: Date,\n  status: {\n    type: Number,\n    default: 1\n  },\n  image: {\n    type: Array,\n    default: null\n  },\n  user_id: String,\n  user_name: String\n})\n                    \n                \n\n\n        \n    \n\n    src/views/src/components/admin/users/users.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    \"user\",\n    \"admin\"\n]\n                    \n                \n\n\n        \n    \n\n    src/routes/routes.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express.Router()\n                    \n                \n\n\n        \n    \n\n    src/views/src/helpers/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sendRequest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async(url: string, requestMethod: Object, payload: string | File | number | object = \"\", _headers: Headers,) => {\n    const requestOptions: IRequestOptions = {\n        method: `${requestMethod}`,\n        headers: _headers,\n    };\n\n    if (requestMethod != 'GET') {\n        requestOptions.body = JSON.stringify(payload);\n    }\n\n    return (await fetch(url, requestOptions)).json();\n}\n                    \n                \n\n\n        \n    \n\n    src/views/src/store/store.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\tstate: {\n\t\tauthToken: localStorage.getItem('token'),\n\t\tuser: JSON.parse(localStorage.getItem('user') || \"{}\"),\n\t\tisLoggedIn (): boolean {\n\t\t\treturn !this.isTokenExpired(this.authToken);\n\t\t},\n\t\tisMobileDevice(width: number) {\n\t\t\treturn width = expiry;\t\t\n\t\t},\n\n\t\tisAdmin() {\n\t\t\treturn this.isLoggedIn() && this.user.role === \"admin\";\n\t\t}\n\t},\n}\n                    \n                \n\n\n        \n    \n\n    src/config/mail_service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        transporter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : nodemailer.createTransport({\n  host: 'smtp.ethereal.email',\n  port: 587,\n  auth: {\n    user: 'leora.legros@ethereal.email',\n    pass: '7VEJ8hdTDPzYPUQH6W'\n  }\n})\n                    \n                \n\n\n        \n    \n\n    src/models/User.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.model('User', userSchema)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  name: { type: String, required: true },\n  email: { type: String, required: true, unique: true },\n  password: { type: String, required: true },\n  role: { type: String, default: 'user' },\n  avatar: { type: String, default: null }\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n",
    },
  },
};
